тести рование програ ммного обеспе че ния процесс исследования испытания программного продукта имеющий своей целью проверку соответствия между реальным поведением программы её ожидаемым поведением на конечном наборе тестов выбранных определенным образом iso iec tr определения тестирования разное время различных источниках тестированию давались различные определения том числе процесс выполнения программы целью нахождения ошибок дисциплина имеющая целью получение надежного программного обеспечения без излишних усилий на его проверку техническое исследование программы для получения информации её качестве точки зрения определенного круга лиц канер проверка соответствия между реальным поведением программы её ожидаемым поведением на конечном наборе тестов выполненных определенным образом процесс наблюдения за выполнением программы специальных условиях вынесения на этой основе оценки каких либо аспектов её работы процесс имеющий целью выявление ситуаций которых поведение программы является неправильным нежелательным или не соответствующим спецификации процесс содержащий себе все активности жизненного цикла как динамические так статические касающиеся планирования подготовки оценки программного продукта связанных этим результатов работ целью определить что они соответствуют описанным требованиям показать что они подходят для заявленных целей для определения дефектов история первые программные системы разрабатывались рамках программ научных исследований или программ для нужд министерств обороны тестирование таких продуктов проводилось строго формализованно записью всех тестовых процедур тестовых данных полученных результатов тестирование выделялось отдельный процесс который начинался после завершения кодирования но при этом как правило выполнялось тем же персоналом много внимания уделялось исчерпывающему тестированию которое должно проводиться использованием всех путей коде или всех возможных входных данных было отмечено что этих условиях полное тестирование программного обеспечения невозможно потому что во первых количество возможных входных данных очень велико во вторых существует множество путей третьих сложно найти проблемы архитектуре спецификациях по этим причинам исчерпывающее тестирование было отклонено признано теоретически невозможным начале годов тестирование программного обеспечения обозначалось как процесс направленный на демонстрацию корректности продукта или как деятельность по подтверждению правильности работы программного обеспечения зарождавшейся программной инженерии верификация по значилась как доказательство правильности хотя концепция была теоретически перспективной на практике она требовала много времени была недостаточно всеобъемлющей было решено что доказательство правильности неэффективный метод тестирования программного обеспечения однако некоторых случаях демонстрация правильной работы используется наши дни например приёмо сдаточные испытания во второй половине тестирование представлялось как выполнение программы намерением найти ошибки не доказать что она работает успешный тест это тест который обнаруживает ранее неизвестные проблемы данный подход прямо противоположен предыдущему указанные два определения представляют собой парадокс тестирования основе которого лежат два противоположных утверждения одной стороны тестирование позволяет убедиться что продукт работает хорошо другой выявляет ошибки программах показывая что продукт не работает вторая цель тестирования является более продуктивной точки зрения улучшения качества так как не позволяет игнорировать недостатки программного обеспечения годы тестирование расширилось таким понятием как предупреждение дефектов проектирование тестов наиболее эффективный из известных методов предупреждения ошибок это же время стали высказываться мысли что необходима методология тестирования частности что тестирование должно включать проверки на всем протяжении цикла разработки это должен быть управляемый процесс ходе тестирования надо проверить не только собранную программу но требования код архитектуру сами тесты традиционное тестирование существовавшее до начала относилось только готовой системе сейчас это обычно называется системное тестирование но дальнейшем тестировщики стали вовлекаться во все аспекты жизненного цикла разработки это позволяло раньше находить проблемы требованиях архитектуре тем самым сокращать сроки бюджет разработки середине появились первые инструменты для тестирования предполагалось что компьютер сможет выполнить больше тестов чем человек сделает это более надёжно поначалу эти инструменты были крайне простыми не имели возможности написания сценариев на скриптовых языках начале годов понятие тестирование стали включать планирование проектирование создание поддержку выполнение тестов тестовых окружений это означало переход от тестирования обеспечению качества охватывающего весь цикл разработки программного обеспечения это время начинают появляться различные программные инструменты для поддержки процесса тестирования более продвинутые среды для автоматизации возможностью создания скриптов генерации отчетов системы управления тестами по для проведения нагрузочного тестирования середине годов развитием интернета разработкой большого количества веб приложений особую популярность стало получать гибкое тестирование по аналогии гибкими методологиями появилось ещё более широкое определение тестирования когда него было добавлено понятие оптимизация бизнес технологий основной подход заключается оценке максимизации значимости всех этапов жизненного цикла разработки программного обеспечения для достижения необходимого уровня качества доступности стандарты относящиеся тестированию ieee ieee standard for software and system test documentation ansi ieee std ieee standard for software unit testing iso iec ieee software and systems engineering software testing part concepts and definitions iso iec ieee software and systems engineering software testing part test processes iso iec ieee software and systems engineering software testing part test documentation классификации видов методов тестирования существует несколько признаков по которым принято производить классификацию видов тестирования обычно выделяют следующие по объекту тестирования функциональное тестирование тестирование нагрузочное тестирование стресс тестирование тестирование стабильности тестирование юзабилити тестирование тестирование интерфейса пользователя тестирование безопасности тестирование локализации тестирование совместимости по знанию внутреннего строения системы тестирование чёрного ящика тестирование белого ящика тестирование серого ящика по степени автоматизации ручное тестирование тестирование тестирование по степени изолированности тестирование компонентов интеграционное тестирование системное тестирование по времени проведения тестирования альфа тестирование дымовое тестирование тестирование новой функции подтверждающее тестирование регрессионное тестирование приёмочное тестирование бета тестирование по признаку позитивности сценариев позитивное тестирование негативное тестирование по степени тестированию тестирование по документации формальное тестирование интуитивное тестирование уровни тестирования тестирование компонентов тестируется минимально возможный для тестирования компонент например отдельный класс или функция часто тестирование компонентов осуществляется разработчиками программного обеспечения интеграционное тестирование тестируются интерфейсы между компонентами подсистемами или системами при наличии резерва времени на данной стадии тестирование ведётся итерационно постепенным подключением последующих подсистем системное тестирование тестируется интегрированная система на её соответствие требованиям альфа тестирование имитация реальной работы системой штатными разработчиками либо реальная работа системой потенциальными пользователями заказчиком чаще всего альфа тестирование проводится на ранней стадии разработки продукта но некоторых случаях может применяться для законченного продукта качестве внутреннего приёмочного тестирования иногда альфа тестирование выполняется под отладчиком или использованием окружения которое помогает быстро выявлять найденные ошибки обнаруженные ошибки могут быть переданы тестировщикам для дополнительного исследования окружении подобном тому котором будет использоваться программа бета тестирование некоторых случаях выполняется распространение предварительной версии случае проприетарного программного обеспечения иногда ограничениями по или времени работы для некоторой большей группы лиц тем чтобы убедиться что продукт содержит достаточно мало ошибок иногда бета тестирование выполняется для того чтобы получить обратную связь продукте от его будущих пользователей часто для свободного открытого программного обеспечения стадия альфа тестирования характеризует функциональное наполнение кода бета тестирования стадию исправления ошибок при этом как правило на каждом этапе разработки промежуточные результаты работы доступны конечным пользователям статическое динамическое тестирование описанные ниже техники тестирование белого ящика тестирование чёрного ящика предполагают что код исполняется разница состоит лишь той информации которой владеет тестировщик обоих случаях это динамическое тестирование при статическом тестировании программный код не выполняется анализ программы происходит на основе исходного кода который вычитывается вручную либо анализируется специальными инструментами некоторых случаях анализируется не исходный промежуточный код такой как байт код или код на msil также статическому тестированию относят тестирование требований спецификаций документации регрессионное тестирование после внесения изменений очередную версию программы регрессионные тесты подтверждают что сделанные изменения не повлияли на остальной приложения регрессионное тестирование может выполняться как вручную так средствами автоматизации тестирования тестовые сценарии тестировщики используют тестовые сценарии на разных уровнях как компонентном так интеграционном системном тестировании тестовые сценарии как правило пишутся для проверки компонентов которых наиболее высока вероятность появления отказов или вовремя не найденная ошибка может быть дорогостоящей тестирование белого ящика чёрного ящика зависимости от доступа разработчика тестов исходному коду тестируемой программы различают тестирование по стратегии белого ящика тестирование по стратегии чёрного ящика при тестировании белого ящика также говорят прозрачного ящика разработчик теста имеет доступ исходному коду программ может писать код который связан библиотеками тестируемого программного обеспечения это типично для компонентного тестирования при котором тестируются только отдельные части системы оно обеспечивает то что компоненты конструкции работоспособны устойчивы до определённой степени при тестировании белого ящика используются метрики покрытия кода или мутационное тестирование при тестировании чёрного ящика тестировщик имеет доступ программе только через те же интерфейсы что заказчик или пользователь либо через внешние интерфейсы позволяющие другому компьютеру либо другому процессу подключиться системе для тестирования например тестирующий компонент может виртуально нажимать клавиши или кнопки мыши тестируемой программе помощью механизма взаимодействия процессов уверенностью том все ли идёт правильно что эти события вызывают тот же отклик что реальные нажатия клавиш кнопок мыши как правило тестирование чёрного ящика ведётся использованием спецификаций или иных документов описывающих требования системе обычно данном виде тестирования критерий покрытия складывается из покрытия структуры входных данных покрытия требований покрытия модели тестировании на основе моделей при тестировании серого ящика разработчик теста имеет доступ исходному коду но при выполнении тестов доступ коду как правило не требуется если альфа бета тестирование относятся стадиям до выпуска продукта также неявно объёму тестирующего сообщества ограничениям на методы тестирования тестирование белого ящика чёрного ящика имеет отношение способам которыми тестировщик достигает цели бета тестирование целом ограничено техникой чёрного ящика хотя постоянная часть тестировщиков обычно продолжает тестирование белого ящика параллельно бета тестированию таким образом термин бета тестирование может указывать на состояние программы ближе выпуску чем альфа или может указывать на некоторую группу тестировщиков процесс выполняемый этой группой то есть тестировщик может продолжать работу по тестированию белого ящика хотя программа уже бета стадии но этом случае он не является частью бета тестирования покрытие кода покрытие кода показывает процент исходного кода программы который был выполнен покрыт процессе тестирования по способам измерения выделяют покрытие операторов покрытие условий покрытие путей покрытие функций др см также разработка через тестирование система отслеживания ошибок аутсорсинг тестирования программного обеспечения внесение неисправностей примечания литература ссылки семь принципов тестирования программ улучшая не навреди портал специалистов по тестированию обеспечению качества по портал об тестировании по