postgresql произносится пост грэс кью эл свободная объектно реляционная система управления базами данных субд существует реализациях для множества unix подобных платформ включая aix различные bsd системы hp ux irix linux macos solaris opensolaris tru qnx также для microsoft windows поддержка стандартов возможности особенности postgresql базируется на языке sql поддерживает многие из возможностей стандарта sql postgresql версии есть следующие параметры максимальный размер базы данных нет ограничений максимальный размер таблицы тбайт максимальный размер записи тбайт максимальный размер поля гбайт максимум записей таблице нет ограничений максимум полей записи зависимости от типов полей максимум индексов таблице нет ограничений сильными сторонами postgresql считаются надёжные механизмы транзакций репликации расширяемая система встроенных языков стандартной поставке поддерживаются дополнительно можно использовать также имеется поддержка загрузки модулей наследование легкая расширяемость история postgresql создана на основе некоммерческой субд postgres разработанной как open source проект калифорнийском университете беркли разработке postgres начавшейся году имел отношение майкл стоунбрейкер руководитель более раннего проекта ingres на тот момент уже приобретённого компанией computer associates название как post in gres при создании postgres были применены многие уже ранее сделанные наработки стоунбрейкер его студенты разрабатывали новую субд течение восьми лет по год за этот период синтаксис были введены процедуры правила типы другие компоненты году разработка снова разделилась стоунбрейкер использовал полученный опыт создании коммерческой субд illustra продвигаемой его собственной одноимённой компанией приобретённой впоследствии компанией informix его студенты разработали новую версию postgres postgres которой язык запросов postquel наследие ingres был заменен на sql разработка postgres была выведена за пределы университета передана команде энтузиастов новая субд получила имя под которым она известна развивается текущий момент postgresql основные возможности функции функции являются блоками кода исполняемыми на сервере не на клиенте бд хотя они могут писаться на чистом sql реализация дополнительной логики например условных переходов циклов выходит за рамки sql требует использования некоторых языковых расширений функции могут писаться использованием одного из следующих языков встроенный процедурный язык pl pgsql во многом аналогичный языку pl sql используемому субд oracle скриптовые языки pl lua pl lolcode pl perl pl php pl python pl ruby pl sh pl tcl pl scheme классические языки java через модуль pl java статистический язык через модуль pl postgresql допускает использование функций возвращающих набор записей который далее можно использовать так же как результат выполнения обычного запроса функции могут выполняться как правами их создателя так правами текущего пользователя иногда функции отождествляются хранимыми процедурами однако между этими понятиями есть различие девятой версии возможно написание автономных блоков которые позволяют выполнять код на процедурных языках без написания функций непосредственно клиенте триггеры триггеры определяются как функции инициируемые dml операциями например операция insert может запускать триггер проверяющий добавленную запись на соответствия определённым условиям при написании функций для триггеров могут использоваться различные языки см выше триггеры ассоциируются таблицами множественные триггеры выполняются алфавитном порядке правила представления механизм правил представляет собой механизм создания обработчиков не только dml операций но операции выборки основное отличие от механизма триггеров заключается том что правила срабатывают на этапе разбора запроса до выбора оптимального плана выполнения самого процесса выполнения правила позволяют переопределять поведение системы при выполнении sql операции таблице хорошим примером является реализация механизма представлений при создании представления создается правило которое определяет что вместо выполнения операции выборки представлению система должна выполнять операцию выборки базовой таблице таблицам учётом условий выборки лежащих основе определения представления для создания представлений поддерживающих операции обновления правила для операций вставки изменения удаления строк должны быть определены пользователем индексы postgresql имеется поддержка индексов следующих типов дерево хэш gist gin brin bloom при необходимости можно создавать новые типы индексов индексы postgresql обладают следующими свойствами возможен просмотр индекса не только прямом но обратном порядке создание отдельного индекса для работы конструкции order by desc не нужно возможно создание индекса над несколькими столбцами таблицы том числе над столбцами различных типов данных индексы могут быть функциональными то есть строиться не на базе набора значений некоего столбца столбцов на базе набора значений функции от набора значений индексы могут быть частичными то есть строиться только по части таблицы по некоторой её проекции некоторых случаях это помогает создавать намного более компактные индексы или достигать улучшения за счёт использования разных типов индексов для разных например точки зрения частоты обновления частей таблицы планировщик запросов может использовать несколько индексов одновременно для выполнения сложных запросов mvcc postgresql поддерживает одновременную модификацию бд несколькими пользователями помощью механизма multiversion concurrency control mvcc благодаря этому соблюдаются требования acid практически отпадает нужда блокировках чтения типы данных postgresql поддерживает большой набор встроенных типов данных численные типы целые фиксированной точкой плавающей точкой денежный тип отличается специальным форматом вывода остальном аналогичен числам фиксированной точкой двумя знаками после запятой символьные типы произвольной длины двоичные типы включая blob типы дата время полностью поддерживающие различные форматы точность форматы вывода включая последние изменения часовых поясах булев тип перечисление геометрические примитивы сетевые типы ip ipv адреса cidr формат mac адрес uuid идентификатор xml данные массивы json идентификаторы объектов бд псевдотипы более того пользователь может самостоятельно создавать новые требуемые ему типы программировать для них механизмы индексирования помощью gist объекты postgresql может быть расширен пользователем для собственных нужд практически любом аспекте есть возможность добавлять собственные преобразования типов типы данных домены типы изначально наложенными ограничениями функции включая агрегатные индексы операторы включая переопределение уже существующих процедурные языки наследование партицирование таблицы могут наследовать характеристики наборы полей от других таблиц родительских при этом данные добавленные порождённую таблицу автоматически будут участвовать если это не указано отдельно запросах родительской таблице postgresql был добавлен механизм партицирования таблиц партицирование предназначено для разделения одной таблицы на несколько так называемые партиции партицирование схоже наследованием но имеет более дружелюбный пользователю синтаксис более строгие ограничения что позволяет выполнять дополнительные оптимизации при планировании запросов прочие возможности соблюдение принципов acid соответствие стандартам ansi sql sql sql sql поддержка запросов outer join union union all except intersect подзапросов контроль целостности репликация общие табличные выражения рекурсивные запросы аналитические функции поддержка юникода utf поддержка регулярных выражений стиле perl встроенная поддержка ssl selinux kerberos протокол разделяемых блокировок подгружаемые расширения поддерживающие sha md xml расширения для написания сложных выборок отчётов api открыт средства для генерации совместимого другими системами sql кода импорта из других систем автономные блоки на доступных языках не только sql качество исходного кода согласно результатам исследования различного по на предмет ошибок проведённом году исходном коде postgresql было найдено мест на среднем одна ошибка на кода для сравнения mysql одна ошибка на кода freebsd целиком одна ошибка на кода linux только ядро одна ошибка на кода производные продукты лицензия postgresql позволяет на его основе создавать различные том числе коммерческие форки их известно несколько десятков на базе postgresql компанией enterprisedb были разработаны другие варианты этой субд являющиеся платными для коммерческого использования postgres plus состоит целиком только из продуктов открытыми исходными кодами плата требуется только при необходимости приобретения коммерческой поддержки продукта postgres plus advanced server расширение postgresql специальными возможностями для обеспечения совместимости oracle database комплекте поставки данных продуктов содержится набор по для разработчиков администраторов баз данных postgres studio аналог phppgadmin postgres plus debugger отладчик для кода на pl pgsql интегрированный предыдущим пакетом migration studio инструмент для автоматического преобразования баз данных из mysql oracle postgresql году российская компания postgres professional выпустила свою субд postgres pro также являющуюся коммерческим форком postgresql варианте standard субд исходными кодами представляет собой версию postgresql патчами для ядра postgresql которые уже приняты сообществом внесены основную ветку также собственными расширениями разработанными компанией postgres professional таким образом обеспечивается доступ полезной обновлениям почти за год до выхода нового релиза postgresql варианте enterprise данная субд содержит бо льшее количество дополнений предназначенных для работы большими базами данных повышенными требованиями надежности postgresql россии российские разработчики участвовали создании postgresql самого начала его истории вадим михеев из красноярска был среди первых членов postgresql core team настоящее время наиболее известным российским разработчиком является олег бартунов проекту году года россии проводятся крупные конференции по postgresql pgday ru pgconf russia году реестр российского по вошла субд postgres pro российской компании postgres professional история развития основные возможности субд по мере выхода новых версий интегрированный полнотекстовый поиск базовая поддержка для xml новый тип перечисление массивы составных типов структур понимании новый тип uuid уникальный глобальный идентификатор иногда также guid аналитические функции общие табличные выражения рекурсивные запросы сопоставление локали collation отдельно для каждой базы данных права доступа на колонку автономные блоки использование любых разрешённых процедурных языков без создания самих процедур асинхронная встроенная репликация тёплым резервом посредством журнала транзакций поддержка разрядных версий ос windows облегчено прав на множества объектов триггеры могут быть ориентированы на отдельные столбцы их комбинации отложенные до конца транзакции проверки уникальности ограничения типа exclusion сверхбыстрый механизм извещений между сессиями listen notify синхронная репликация очень быстрые нежурналируемые таблицы сопоставление локали collation вплоть до каждого столбца таблицы отдельно расширение возможностей общетабличных выражений для insert update delete доступ на чтение ко внешним источникам данных как таблицам введён механизм пакетов расширений extension введён каноничный уровень изоляции serializable расширение selinux введён механизм index only scan для планировщика новый тип данных диапазоны range data types новый тип данных json многоуровневая потоковая репликация прозрачная запись во внешние таблицы представления sql синтаксис lateral аналог rollup некоторых субд триггеры на события все кроме login logout диагностика повреждений файлов субд улучшенное использование памяти на больших серверах уменьшение числа блокировок связанных внешними ключами расширение для работы типом json изменения авто обновляемых представлениях изменение представлениях команда alter system для установки параметров опция with ordinality для функций возвращающих набор строк новые функции для агрегированных данных улучшения для индексов gin gist улучшенный вывод команды explain разогрев кэша триггеры для внешних таблиц изменения для json новый тип данных jsonb upsert безопасность на уровне строк интеграция big data brin индексы ускоренная сортировка cube rollup grouping sets параллелизм операций при выполнении запросов расширение оператора copy множество мелких улучшений логическая репликация разделение таблиц на разделы declarative table partitioning улучшенный параллелизм запросов распределенные транзакции полнотекстовый поиск на jsonb колонках scram sha аутентификация хеш индексы дальнейшие планы дальнейшие планы по развитию субд рамках свободного сообщества находятся на сайте разработчиков июня года министерство связи массовых коммуникаций российской федерации издало протокол экспертной оценки проектов по программного обеспечения котором проект субд postgresql связанные ним решения занимает место по направлению системы управления базами данных протокола экспертной оценки примечания ссылки евгений балдин postgresql серия из шести статей опубликованных журнале linux format александр алексеев серия статей postgresql примеры использования физической логической репликации полнотекстового поиска автоматического восстановления после сбоев написания расширений блог postgres professional на habr включает серию статей егора рогова об индексах категория реляционные субд категория свободные субд категория кросс платформенное программное обеспечение