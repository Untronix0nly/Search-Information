файл gui widgets png thumb right пример swing интерфейса для window system swing библиотека для создания графического интерфейса для программ на языке java swing был разработан компанией sun microsystems он содержит ряд графических компонентов таких как кнопки поля ввода таблицы swing относится библиотеке классов jfc которая представляет собой набор библиотек для разработки графических оболочек этим библиотекам относятся java accessibility api drag drop api awt история начиная версии java год swing включён java runtime environment архитектура look and feel архитектура swing разработана таким образом что вы можете изменять вашего приложения look определяет внешний вид компонентов feel их поведение sun jre предоставляет следующие это родной для java приложений так же называется metal он используется по умолчанию обеспечивая стандартное поведение компонентов их внешний вид вне зависимости от платформы на которой запускается приложение этом случае приложение использует который является родным для системы на которой запущено приложение системный определяется во время выполнения для windows используется windows который имитирует особенности конкретной системы на которой запущен классический windows xp или vista для linux solaris используется gtk если установлен gtk или более поздняя версия противном случае используется motif synth основа для создания собственных multiplexing предоставляет возможность использования различных одновременно сравнение awt swing предоставляет более гибкие интерфейсные компоненты чем более ранняя библиотека awt отличие от awt компоненты swing разработаны для одинаковой кросс платформенной работы то время как компоненты awt повторяют интерфейс исполняемой платформы без изменений awt же использует только стандартные элементы ос для отображения то есть для каждого элемента создается отдельный объект ос окно связи чем awt не позволяет создавать элементы произвольной формы возможно использовать только прямоугольные компоненты элементы управления на основе awt всегда отображаются поверх swing элементов так как все swing компоненты отображаются на поверхности контейнера компоненты swing поддерживают специфические динамически благодаря которому возможна адаптация графическому интерфейсу платформы то есть компоненту можно динамически подключить другой специфический для операционной системы том числе созданный программистом вид поведение таким образом приложения использующие swing могут выглядеть как родные приложения для данной операционной системы основным минусом таких легковесных компонентов является относительно медленная работа положительная сторона универсальность интерфейса созданных приложений на всех платформах принцип lightweight lightweight означает что компоненты swing отрисовываются самими компонентами на поверхности родительского окна без использования компонентов операционной системы отличие от тяжёлых компонентов awt приложении swing может иметься только одно окно все прочие компоненты отрисовываются на ближайшем родителе имеющем собственное окно например на jframe приложении могут сочетаться swing awt элементы хотя это может порождать некоторые проблемы частности компоненты awt всегда перекрывают swing элементы также закрывают собой всплывающие меню jpopupmenu jcombobox для предотвращения этого этих компонентов имеются методы boolean позволяющие запретить использование легковесных всплывающих элементов при установке свойства true true awt элементы не будут перекрывать меню сравнение swt примеры hello world использованием swing import javax swing jframe import javax swing jlabel import javax swing swingutilities public final class helloworld implements runnable public static void main string args swing имеет собственный управляющий поток dispatching thread который работает параллельно основным стартовым котором выполняется main потоком это означает что если основной поток закончит работу метод main завершится поток отвечающий за работу swing интерфейса может продолжать свою работу даже если пользователь закрыл все окна программа продолжит свою работу до тех пор пока жив данный поток начиная java когда все компоненты уничтожены управляющим интерфейсом поток останавливается автоматически запускаем весь код работающий интерфейсом управляющем потоке даже инициализацию swingutilities invokelater new helloworld public void run создаем окно заголовком hello world jframe new jframe hello world ранее практиковалось следующее создавался listener регистрировался на экземпляре главного окна который реагировал на windowclosing принудительной остановкой виртуальной машины вызовом system exit теперь же есть более правильный способ задать реакцию на закрытие окна данный способ уничтожает текущее окно но не останавливает приложение тем самым приложение будет работать пока не будут закрыты все окна jframe однако можно задать так jframe exit_on_close добавляем на панель окна нередактируемый компонент текстом getcontentpane add new jlabel hello world старый стиль add new jlabel hello world pack упаковывает окно до оптимального размера рассчитанного на основании размеров всех расположенных нём компонентов pack показать окно setvisible true смена вида интерфейса помощью look and feel try uimanager setlookandfeel javax swing plaf metal swingutilities this catch exception system out println ошибка при загрузке metal look and feel использование системного look and feel необходимо помнить что изменение приложения должно быть выполнено до инициализации каких либо компонентов swing иначе они могут быть java независимо от того какой вы запрашивали public static void main string args try uimanager setlookandfeel uimanager catch exception exception handle см также awt swt javafx ссылки введение swing недоступно jdk swing apis developer guides from oracle coorp creating gui with jfc swing examples swing architecture overview swing sightings список приложений на swing примечания литература категория java категория библиотеки виджетов