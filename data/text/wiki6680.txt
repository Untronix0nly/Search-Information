циклический избыточный код алгоритм нахождения контрольной суммы предназначенный для проверки целостности данных crc является практическим приложением кодирования основанным на определённых математических свойствах циклического кода введение понятие циклические коды достаточно широкое англоязычной литературе crc понимается двояко зависимости от контекста cyclic redundancy code или cyclic redundancy check под первым понятием подразумевают математический феномен циклических кодов под вторым конкретное применение этого феномена как хэш функции кодирование первые попытки создания кодов избыточной информацией начались задолго до появления современных компьютеров примеру ещё годах ридом соломоном была разработана эффективная методика кодирования код рида соломона использование её те времена не представлялось возможным так как произвести операцию декодирования за разумное время первыми алгоритмами не удавалось точку этом вопросе поставила фундаментальная работа берлекэмпа опубликованная году эта методика на практическое применение которой указал через год мэсси по сей день используется цифровых устройствах обеспечивающих приём rs кодированных данных более того данная система позволяет не только определять позиции но исправлять неверные кодовые символы чаще всего октеты но далеко не всегда от кода требуется коррекция ошибок многие современные каналы связи обладают приемлемыми зачастую достаточно лишь проверить успешно ли прошла передача или возникли какие нибудь сложности структура же ошибок конкретные позиции неверных символов совершенно не интересуют принимающую сторону этих условиях очень удачным решением оказались алгоритмы использующие контрольные суммы crc как нельзя лучше подходит для подобных задач невысокие затраты ресурсов простота реализации уже сформированный математический аппарат из теории линейных циклических кодов обеспечили ей огромную популярность хотя код crc используют обычно только для обнаружения ошибок его математические свойства дают возможность найти исправить одиночную ошибку блоке бит если каждому биту защищаемого блока включая проверочные биты соответствует свой уникальный остаток от деления на порождающий многочлен например если порождающий многочлен неприводим длина блока не превышает порядок порождённой циклической группы контрольная сумма общем виде контрольная сумма представляет собой некоторое значение вычисленное по определённой схеме на основе кодируемого сообщения проверочная информация при систематическом кодировании приписывается передаваемым данным на принимающей стороне абонент знает алгоритм вычисления контрольной суммы соответственно программа имеет возможность проверить корректность принятых данных при передаче пакетов по сетевому каналу могут возникнуть искажения исходной информации вследствие разных внешних воздействий электрических наводок плохих погодных условий многих других сущность методики том что при хороших характеристиках контрольной суммы подавляющем числе случаев ошибка сообщении приведёт изменению его контрольной суммы если исходная вычисленная суммы не равны между собой принимается решение недостоверности принятых данных можно запросить повторную передачу пакета математическое описание алгоритм crc базируется на свойствах деления остатком двоичных многочленов то есть многочленов над конечным полем значение crc является по сути остатком от деления многочлена входным данным на некий фиксированный порождающий многочлен каждой конечной битов взаимно однозначно сопоставляется двоичный полином коэффициентов которого представляет собой исходную например битов соответствует многочлену количество различных многочленов степени меньшей равно что совпадает числом всех двоичных длины значение контрольной суммы алгоритме порождающим многочленом степени определяется как битовая длины представляющая многочлен получившийся остатке при делении многочлена представляющего входной поток бит на многочлен где многочлен представляющий значение crc многочлен коэффициенты которого представляют входные данные порождающий многочлен степень порождающего многочлена умножение осуществляется приписыванием нулевых битов входной что улучшает качество хеширования для коротких входных при делении остатком различных исходных многочленов на порождающий полином степени можно получить различных остатков от деления зачастую является неприводимым многочленом обычно его подбирают соответствии требованиями хэш функции контексте каждого конкретного применения тем не менее существует множество образующих многочленов обладающих хорошими математическими корреляционными свойствами минимальное число коллизий простота вычисления некоторые из которых перечислены ниже вычисление crc параметры алгоритма схема формирования контрольной суммы crc порождающий многочлен одним из основных параметров crc является порождающий полином порождающим полиномом связан другой параметр его степень которая определяет количество битов используемых для вычисления значения crc на практике наиболее распространены битовые слова что является следствием особенностей архитектуры современной вычислительной техники ещё одним параметром является начальное стартовое значение слова указанные параметры полностью определяют традиционный алгоритм вычисления crc существуют также модификации алгоритма например использующие обратный порядок обработки битов описание процедуры файл логическая схема gif px мини реализация crc на логических элементах из файла берётся первое слово это может быть битовый crc байтовый crc или любой другой элемент если старший бит слове то слово сдвигается влево на один разряд последующим выполнением операции xor порождающим полиномом соответственно если старший бит слове то после сдвига операция xor не выполняется после сдвига теряется старый старший бит младший бит освобождается его значение устанавливается равным нулю на место младшего бита загружается очередной бит из файла операция повторяется до тех пор пока не загрузится последний бит файла после прохождения всего файла слове остается остаток который является контрольной суммой популярные полиномы то время как циклические избыточные коды являются частью стандартов этого термина не существует общепринятого определения трактовки различных авторов нередко противоречат друг другу этот парадокс касается выбора многочлена генератора зачастую полиномы не являются самыми эффективными плане статистических свойств им check redundancy code при этом многие широко используемые полиномы не являются наиболее эффективными из всех возможных годах группа учёных занималась исследованием порождающих многочленов разрядности до бит нашла полиномы дающие лучшую нежели многочлены смысле кодового расстояния один из результатов этого исследования уже нашёл своё применение протоколе iscsi самый популярный рекомендуемый ieee полином для crc используется ethernet fddi также этот многочлен является генератором кода хемминга использование другого полинома crc позволяет достичь такой же при длине исходного сообщения от бит до кбит некоторых диапазонах длины входного сообщения может быть даже выше поэтому наши дни он тоже пользуется популярностью примеру стандарт itu hn использует crc целью обнаружения ошибок полезной нагрузке ниже таблице перечислены наиболее многочлены генераторы crc на практике вычисление crc может включать пре постинверсию также обратный порядок обработки битов проприетарных реализациях crc для усложнения анализа кода применяют ненулевые начальные значения регистров название полином представления нормальное реверсированное реверсированное от обратного crc используется аппаратном контроле ошибок также известен как бит чётности crc itu itu xc crc epc gen rfid crc itu itu crc usb usb token packets crc itu itu crc системы itu itu mmc sd crc ccitt atm hec isdn header error control and cell delineation itu xe crc dallas maxim wire bus crc etsi en xd xab xea crc sae xb crc crc flexray crc системы xf xc crc can cd cc crc ibm bisync modbus usb ansi многие другие также известен как crc crc ansi xa xc crc ccitt hdlc xmodem bluetooth sd др crc dif scsi dif bb xedd xc db crc dnp dnp iec bus xa bc eb crc fletcher не crc см fletcher checksum используется adler crc crc flexray dcb xd ba xaeb crc radix openpgp cfb xdf xc crc cdma ce crc adler не crc см adler см adler crc ieee mpeg png posix cksum db xedb edb crc castagnoli iscsi hn payload edc crc koopman cd xeb xba dc crc aviation aixm ab xd xc crc iso hdlc iso xd crc ecma eba ea xc xa существующие стандарты crc ieee crc ieee настоящее время вытеснены хеш функциями спецификации алгоритмов crc одной из самых известных является методика ross williams ней используются следующие параметры название алгоритма name степень порождающего контрольную сумму многочлена width сам производящий полином poly для того чтобы записать его виде значения его сначала записывают как битовую при этом старший бит опускается он всегда равен примеру многочлен данной нотации будет записан числом для удобства полученное двоичное представление записывают форме для нашего случая оно будет равно или стартовые данные init то есть значения регистров на момент начала вычислений флаг refin указывающий на начало направление вычислений существует два варианта false начиная со старшего значащего бита msb first или true младшего lsb first флаг refout определяющий инвертируется ли порядок битов регистра при входе на элемент xor число xorout которым складывается по модулю полученный результат значение crc check для строки примеры name width poly init refin refout xorout check crc rohc true true crc itu true true crc epc false false crc itu true true crc usb true true crc cdma false false xd crc cdma false false crc darc true true crc itu true true crc false false crc rohc true true crc false false xf crc cdma xff false false xda crc darc true true crc dvb xd false false xbc crc ebu xff true true crc code xfd false false crc itu false false xa crc maxim true true xa crc rohc xff true true xd crc wcdma true true crc false false crc cdma ff false false crc false false crc gpp false true xdaf crc cdma xf xfff false false xd crc dect false false xf crc bbc cf false false fa crc darc true true crc false false crc mpt false false crc arc true true xbb crc aug ccitt false false xe cc crc buypass false false xfee crc ccitt false xffff false false crc cdma xc xffff false false crc dds false false ecf crc dect false false crc dect false false crc dnp true true xffff xea crc en false false xffff xc crc genibus xffff false false xffff xd crc maxim true true xffff crc mcrf xx xffff true true crc riello xb aa true true crc dif bb false false xd db crc teledisk xa false false xfb crc tms ec true true crc usb xffff true true xffff xb crc xc true true xbf crc kermit true true crc modbus xffff true true crc xffff true true xffff crc xmodem false false crc cfb xb ce false false cf crc flexray dcb xfedcba false false bd crc flexray dcb xabcdef false false crc philips db fffffff false false fffffff xce crc zlib db xffffffff true true xffffffff xcbf crc bzip db xffffffff false false xffffffff xfc crc edc xffffffff true true xffffffff xe crc xa xffffffff true true xffffffff crc mpeg db xffffffff false false crc posix db false false xffffffff crc ab false false bf crc jamcrc db xffffffff true true bc crc xfer xaf false false xbd be crc gsm false false xffffffffff xd fc crc eba ea false false df crc we eba ea false false ec crc xz eba ea true true dc bbdf fa примечания литература ссылки элементарное руководство по crc алгоритмам обнаружения ошибок crc как его восстановить генератор crc функций на языках vhdl verilog ross williams anarchriz всё crc ross williams элементарное руководство по crc алгоритмам обнаружения ошибок ross williams painless guide to crc error detection algorithms crc калькуляторы crc калькулятор написан на qt on line crc калькулятор для строк можно менять кодировку формат endline on line crc калькулятор on line crc calculation and free library категория обнаружение устранение ошибок