ml meta language семейство строгих языков функционального развитой параметрически полиморфной системой типов модулями подобная система типов была раньше предложена роджером хиндли году сейчас часто называется системой хиндли милнера языки данного семейства большинстве своём не являются чистыми функциональными языками так как включают императивные инструкции но есть исключения например manticore ml преподаётся во многих западных университетах некоторых даже как первый язык предпосылки году джон алан робинсон реализовал метод автоматического доказательства теорем получивший название принцип резолюции идея этого метода принадлежит эрбрану предложена году робинсон разработал эффективный вычислительной точки зрения алгоритм унификации являющийся основой метода так появился язык ml созданный для автоматического доказательства теорем но как оказалось пригодный качестве языка общего назначения особенности основе строгой статической системы типов языка лежит лямбда исчисление которому добавлена строгая типизация строгая система типов дает возможности для оптимизации поэтому вскоре появляется компилятор языка системе типов хиндли милнера ограниченно полиморфная система типов где большинство типов выражений может быть выведено автоматически это даёт возможность программисту не описывать явно типы функций но сохранить строгий контроль типов ml является интерактивным языком каждое введённое предложение анализируется компилируется исполняется значение полученное результате исполнения предложения вместе его типом выдаётся пользователю языке поддерживается обработка исключительных событий примеры вычисление факториала на ml fun fac if then else fac хорошим примером позволяющим оценить выразительную силу ml служит реализация type key key ord_key type item key ord_key list datatype set leaf node of key key lt set eq set gt set val empty leaf exception alreadypresent fun member leaf false member node key lt eq gt case key compare key of equal member eq less member lt greater member gt member node key lt eq gt case key compare key sentinel key of equal true less member lt greater member gt fun insert leaf node key eq insert leaf lt leaf gt leaf insert leaf node key key sentinel eq leaf lt leaf gt leaf insert node key lt eq gt case key compare key of equal node key key lt lt gt gt eq insert eq less node key key lt insert lt gt gt eq eq greater node key key lt lt gt insert gt eq eq insert node key lt eq gt case key compare key sentinel key of equal raise alreadypresent less node key key lt insert lt gt gt eq eq greater node key key lt lt gt insert gt eq eq fun add insert handle alreadypresent для задачи поиска строки словаре сочетает молниеносную скорость префиксных деревьев экономичностью двоичных отношении памяти реализация на ml отличается компактностью за счёт использования алгебраических типов сопоставления образцом правила последнее выражение исполнимой цепочке является результатом всей функции возможности строить объекты агрегатных типов без предварительных объявлений также она отличается доказанной корректностью частности исключением утечек памяти характерных для или риска допущения ошибок исходном коде приводящих зацикливанию программы лавинообразным поглощением памяти характерных для динамически типизируемых языков система типов хиндли милнера обеспечивает языкам высокий потенциал оптимизации так что снижение трудоёмкости повышение стабильности программ является бесплатным без потери эффективности при условии наличия оптимизирующего компилятора таких как ocaml или mlton см также язык модулей ml примечания ссылки статья ml прогопедии энциклопедии языков ml dialects and haskell sml ocaml haskell сравнение ряда языков семейства ml