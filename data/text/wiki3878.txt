cvs concurrent versions system система одновременных версий программный продукт относящийся разряду систем управления версиями хранит историю изменений определённого набора файлов как правило исходного кода программного обеспечения облегчает совместную работу группы людей часто программистов над одним проектом cvs популярна мире открытого по на условиях лицензии gnu gpl настоящее время активная разработка системы прекращена последняя версия выпущена мае года исходный код вносятся только небольшие исправления на данный момент cvs является устаревшей системой потому что она имеет ряд недостатков имеются более молодые альтернативные системы управления версиями например subversion git mercurial свободные от большинства недостатков cvs основные концепции cvs использует архитектуру клиент сервер обычно клиент сервер соединяются через локальную сеть или через интернет но могут работать на одной машине если необходимо вести историю версий локального проекта серверное по обычно работает под управлением unix хотя существует cvs сервер для windows nt тогда как cvs клиенты доступны во всех популярных операционных системах сервер хранит специальном хранилище репозитории текущую версию версии проекта историю изменений клиент соединяется ним чтобы получить нужную ему версию или записать новую получив сервера нужную версию данная процедура называется check out клиент создаёт локальную копию проекта или его части так называемую рабочую копию после того как файлы находящиеся рабочей копии внесены необходимые изменения они пересылаются на сервер check in несколько клиентов могут работать над копиями проекта одновременно когда они отправляют результаты сервер пытается объединить вместе их изменения хранилище если это не удаётся например случае когда два клиента изменили одни те же строки определённом файле сервер не примет изменения от последней check in операции сообщит клиенту конфликте который должен быть исправлен вручную если check in операция завершилась успешно то номера версий всех затронутых файлов автоматически увеличиваются сервер записывает комментарий дату имя пользователя свой журнал data logging клиенты также могут сравнить различные версии файлов запросить полную историю изменений или получить исторический образ проекта на определённое число или по номеру версии многие open source проекты разрешают анонимный доступ на чтение который впервые был применён openbsd это означает что клиенты могут запрашивать сравнивать версии файлов без пароля только check in операции ведущие изменению данных хранилище требуют пароль также для синхронизации локальной копии проекта информацией на сервере клиенты могут использовать команду update что позволяет избежать повторного скачивания всего проекта cvs также может содержать различные ветки проекта например стабильная версия проекта может составлять одну ветвь branch которую вносятся только исправления ошибок тогда как активная разработка может вестись параллельной ветке которая включает значительные улучшения или изменения момента выхода стабильной версии cvs использует механизм дельта компрессии для эффективного хранения различных версий одного того же файла терминология проекты cvs хранятся виде модулей модуль это набор файлов проекта сервер cvs может обслуживать несколько модулей все модули хранятся репозито рии локальная копия модуля полученная помощью cvs клиента называется рабочей копией check out извлечение целого модуля из cvs создание рабочей копии check in фиксация локальных изменений репозиторий update обновление локального проекта из cvs branch ветка независимое направление модификации проекта которое может содержать ряд версий ветка может развиваться параллельно другим веткам главная ветка есть всегда main trunk или head главная ветка revision ревизия одна из версий отдельного файла release релиз одна из версий целого проекта термин версия вообще не используется tag тег специальная метка обозначающая определённый релиз продукта текст метки желательно делать максимально понятным метку можно назначить отдельному файлу но особого смысла этом нет тег помечает совокупность файлов определённых ревизий версий история статус cvs является развитием более ранней системы управления версиями имеющей название revision control system rcs которая всё ещё используется для работы отдельными файлами но не целыми проектами дик грун привёл краткие исторические сведения cvs на своей страничке вольный перевод части текста cvs был создан для того чтобы иметь возможность работы двумя моими студентами над компилятором ack amsterdam compiler kit нас троих был почти несовместимый по времени график один студент имел постоянное место работы второй появлялся нерегулярно мог работать над проектом только по вечерам их проект длился июля по август cvs изначально назывался cmt по причине того что он позволил нам фиксировать версии независимо от английского commit фиксировать совершать код впервые увидел свет конференции mod sources июня года код который конце концов приобрёл вид текущей версии cvs был начат совместно брайаном берлинером апреле года последующими дополнениями от джеффа полка других участников брайан берлинер написал документ описывающий улучшения программы cvs которые она успела приобрести за время внутреннего использования prisma стороннем разработчике ядра sunos после чего брайан выпустил её на всеобщее обозрение под лицензией gpl на сегодняшний день код cvs поддерживает группа добровольцев интересен тот факт что версия cvs для microsoft windows отделившаяся отдельный проект cvsnt сейчас достаточно активно расширяет возможности системы даже портируя изменения обратно на unix под именем cvsnt отношение cvs проекту gnu может трактоваться неоднозначно на одной странице сайт gnu распространяет программу как пакет gnu на другой cvs находится разделе другой проект под лицензией gpl на ftp сервере программа находится каталоге non gnu недостатки невозможно переименовать файл или каталог так чтобы это изменение было отражено истории ограниченная поддержка юникода не ascii имён публикации изменений не атомарны наборы изменений не поддерживаются неэффективное хранение двоичных файлов оригинальный gnu cvs не поддерживает разграничения прав между пользователями репозитория внутренние механизмы контроля целостности практически отсутствуют зачастую даже невозможно точно утверждать повреждён ли репозиторий если да то каким образом инструменты веб интерфейсы для просмотра репозитория viewcvs webcvs chora codestriker bonsai клиенты графические оболочки для работы cvs свободные open source cvsgui набор cvs клиентов для windows macos linux wincvs maccvs gcvs соответственно lincvs linux другие unix like windows mac os оболочка написанная использованием библиотеки qt eclipse ide со встроенной поддержкой cvs tkcvs linux другие unix like windows macos графическая оболочка написанная на языке tcl netbeans ide ide со встроенной поддержкой cvs microsoft windows tortoisecvs вероятно самый простой cvs клиент для windows wincvs devc очень популярная ide cvs клиентом linux cervisia qt оболочка cvs для среды kde pharmacy оболочка для среды gnome solaris opensolaris sun studio ide коммерческие cs cvs cvs клиент для windows бесплатен для open source разработчиков cvsnt smartcvs сервер cvs главный сайт разработчиков cvs прочие инструменты meld инструмент для работы изменениями statcvs статистика buildbot помогает управлении проектом строит тестирует дерево при поступлении на cvs новых изменений pushok cvs scc proxy плагин для microsoft scc boneclipse cvsgrapher плагин для eclipse примечания см также система управления версиями revision control system система предшественник cvs ссылки документация по cvs документация на русском языке краткое введение cvs на русском языке включает тесты на знание cvs джим блэнди введение cvs cvs система управления параллельными версиями категория программное обеспечение для macos категория программное обеспечение для windows категория программное обеспечение лицензией gnu gpl категория программное обеспечение для linux категория свободное программное обеспечение написанное на си категория свободные системы управления версиями