файл kl sun ultrasparc jpg thumb px risc микропроцессор компании sun ultrasparc risc компьютер набором коротких простых быстрых команд архитектура процессора котором быстродействие увеличивается за счёт упрощения инструкций чтобы их декодирование было более простым время выполнения меньшим первые risc процессоры даже не имели инструкций умножения деления это также облегчает повышение тактовой частоты делает более эффективной инструкций между несколькими исполнительными блоками отличия от cisc наборы инструкций более ранних архитектурах для облегчения ручного написания программ на языках ассемблеров или прямо машинных кодах также для упрощения реализации компиляторов выполняли как можно больше работы нередко наборы включались инструкции для прямой поддержки конструкций языков высокого уровня другая особенность этих наборов большинство инструкций как правило допускало все возможные методы адресации примеру операнды результат арифметических операциях доступны не только регистрах но через адресацию прямо памяти позднее такие архитектуры были названы cisc однако многие компиляторы не задействовали все возможности таких наборов инструкций на сложные методы адресации уходит много времени из за дополнительных обращений медленной памяти было показано что такие функции лучше исполнять более простых инструкций если при этом процессор упрощается нём остаётся место для большего числа регистров за счёт которых можно сократить количество обращений памяти первых архитектурах причисляемых risc большинство инструкций для упрощения декодирования имеют одинаковую длину похожую структуру арифметические операции работают только регистрами работа памятью идёт через отдельные инструкции загрузки load сохранения store эти свойства позволили лучше сбалансировать этапы конвейеризации сделав конвейеры risc значительно более эффективными позволив поднять тактовую частоту философия risc середине разные исследователи частности из ibm показали что большинство комбинаций инструкций ортогональных методов адресации не использовались большинстве программ порождаемых компиляторами того времени также было обнаружено что некоторых архитектурах микрокодной реализацией сложные операции зачастую были медленнее более простых операций выполняющих те же действия это было вызвано частности тем что многие архитектуры разрабатывались спешке хорошо оптимизировался микрокод только тех инструкций которые использовались чаще поскольку многие реальные программы тратят большинство своего времени на выполнение простых операций многие исследователи решили сфокусироваться на том чтобы сделать эти операции максимально быстрыми процессора ограничена временем которое процессор тратит на выполнение наиболее медленных шагов процессе обработки любой инструкции уменьшение длительности таких шагов даёт общее повышение также зачастую ускоряет выполнение инструкций за счёт более эффективной конвейеризации фокусирование на простых инструкциях ведёт архитектуре risc цель которой сделать инструкции настолько простыми чтобы они легко тратили не более одного такта на каждом шаге конвейера на высоких частотах позднее было отмечено что наиболее значимая характеристика risc разделении инструкций для обработки данных обращения памяти обращение памяти идёт только через инструкции load store все прочие инструкции ограничены внутренними регистрами это упростило архитектуру процессоров позволило инструкциям иметь фиксированную длину упростило конвейеры изолировало логику имеющую дело задержками при доступе памяти только двух инструкциях итоге risc архитектуры стали называть также архитектурами load store количество инструкций нередко слова сокращённый набор команд понимаются как минимизация количества инструкций системе команд инструкций многих risc процессоров больше чем cisc процессоров некоторые risc процессоры вроде транспьютеров фирмы имеют наборы команд не меньше чем например cisc процессоров ibm system наоборот cisc процессор dec pdp имеет только основных несколько расширенных инструкций на самом деле термин сокращённый названии описывает тот факт что сокращён объём время работы выполняемый каждой отдельной инструкцией как максимум один цикл доступа памяти тогда как сложные инструкции cisc процессоров могут требовать сотен циклов доступа памяти для своего выполнения некоторые архитектуры специально разработанные для минимизации количества инструкций сильно отличаются от классических risc архитектур получили другие названия minimal instruction set computer misc zero instruction set computer zisc ultimate risc также называемый oisc transport triggered architecture tta характерные особенности risc процессоров фиксированная длина машинных инструкций например бита простой формат команды команды для операций памятью чтения или записи операции вида read modify write прочитать изменить записать отсутствуют любые операции изменить выполняются только над содержимым регистров архитектура load and store большое количество регистров общего назначения более отсутствие поддержки операций вида изменить над укороченными типами данных байт разрядное слово так например система команд dec alpha содержала только операции над разрядными словами требовала разработки последующего вызова процедур для выполнения операций над байтами разрядными словами отсутствие микропрограмм внутри самого процессора то что cisc процессоре исполняется risc процессоре исполняется как обыкновенный хотя помещённый специальное хранилище машинный код не отличающийся принципиально от кода ядра ос приложений так например обработка отказов страниц dec alpha интерпретация таблиц страниц содержалась так называемом palcode privileged architecture library помещённом пзу заменой palcode можно было превратить процессор alpha из разрядного разрядный также изменить порядок байтов слове формат входов таблиц страниц виртуальной памяти другие архитектуры за годы после появления архитектуры risc были реализованы другие альтернативы например vliw misc oisc массово параллельная обработка суперскалярные архитектуры первоначально большие эвм конца годов sun sparc начиная pentium использованы семействе исполнения команд между несколькими устройствами исполнения причём решение параллельном исполнении двух или более команд принимается аппаратурой процессора на этапе исполнения эффективное использование такой архитектуры требует специальной оптимизации машинного кода компиляторе для генерации пар независимых команд когда результат одной команды не является аргументом другой архитектуры vliw very long instruction word очень длинное слово команды отличаются от суперскалярной архитектуры тем что решение принимается не аппаратурой на этапе исполнения компилятором на этапе генерации кода команды очень длинны содержат явные инструкции по нескольких субкоманд на несколько устройств исполнения элементы архитектуры содержались серии pa risc процессорами архитектурой vliw ее классическом виде являются процессоры архитектурой эльбрус процессор itanium использует архитектуру epic основанную на vliw разработка эффективного компилятора для vliw является сложнейшей задачей преимущество vliw перед суперскалярной архитектурой заключается том что компилятор может быть более развитым нежели устройства управления процессора он способен хранить больше контекстной информации для принятия более верных решений по оптимизации иные архитектурные решения типичные для risc спекулятивное исполнение при встрече командой условного перехода процессор исполняет или по крайней мере читает кэш инструкций сразу обе ветви до тех пор пока не окончится вычисление управляющего выражения перехода позволяет отказаться от простоев конвейера при условных переходах переименование регистров каждый регистр процессора на самом деле представляет собой несколько параллельных регистров хранящих несколько версий значения используется для реализации спекулятивного исполнения начало развития архитектуры risc первая система которая может быть названа системой risc суперкомпьютер cdc который был создан году за десять лет до появления термина cdc имел архитектуру risc всего двумя режимами адресации регистр регистр регистр значение кодами команд тогда как имел кодов команд cdc было конвейерных устройств арифметической логической обработки также пять устройств загрузки два устройства хранения память была многоблочной поэтому все устройства загрузки хранения могли работать одновременно базовая тактовая частота частота выдачи команд была раз выше чем время доступа памяти джим торнтон сеймур крэй разработчики cdc создали для него мощный процессор позволявший быстро обрабатывать большие объёмы цифровых данных главный процессор поддерживался десятью простыми периферийными процессорами выполнявшими операции ввода вывода другие функции ос позднее появилась шутка что термин risc на самом деле как really invented by seymour cray на самом деле придуман сеймуром крэем ещё одна ранняя машина архитектурой risc мини компьютер data general nova разработанный году первая попытка создать процессор архитектурой risc на микросхеме была предпринята ibm году эта работа привела созданию семейства процессоров ibm которые широко использовались различных устройствах ibm конце концов был выпущен форме микросхемы под именем romp году romp как research opd office product division micro processor то есть микропроцессор разработанный подразделении офисных разработок как следует из названия процессор был разработан для мини задач когда году ibm выпустила на его основе компьютер ibm rt pc он работал не слишком хорошо однако за выпуском го процессора последовало несколько проектов результате одного из которых появилась система power однако наиболее известные системы risc были разработаны рамках университетских программ программой darpa vlsi risc беркли проект risc университете беркли был начат году под руководством дэвида паттерсона карло секвина исследования основывались на использовании конвейерной обработки агрессивного использования техники регистрового окна обычном процессоре имеется небольшое количество регистров программа может использовать любой регистр любое время процессоре использующем технологии регистрового окна очень большое количество регистров например но программы могут использовать ограниченное количество например только каждый момент времени программа ограниченная лишь восемью регистрами для каждой процедуры может выполнять очень быстрые вызовы процедур окно просто сдвигается регистровому блоку нужной процедуры при возврате из процедуры сдвигается обратно регистрам вызвавшей процедуры обычном процессоре большинство процедур при вызове вынуждены сохранять значения некоторых регистров стеке для того чтобы пользоваться этими регистрами при исполнении процедуры при возврате из процедуры значения регистров из стека проект risc произвёл на свет процессор risc году нём было транзисторов для сравнения процессорах cisc того времени их было около тыс risc имел всего инструкции но превосходил по скорости работы любой одночиповый процессор того времени через год году был выпущен risc ii который состоял из транзисторов использовал инструкций работал три раза быстрее risc проект risc беркли оказал влияние на risc процессоры семейства sparc dec alpha risc стэнфорде практически то же время году джон хеннесси начал аналогичный проект названный архитектура mips стэнфордском университете создатель mips практически полностью сосредоточился на конвейерной обработке попытавшись выжать всё из этой технологии конвейерная обработка использовалась других продуктах некоторые идеи реализованные mips позволили разработанному процессору работать значительно быстрее аналогов наиболее важным было требование выполнения любой из инструкций процессора за один такт это требование позволило конвейеру работать на гораздо больших скоростях передачи данных привело значительному ускорению работы процессора другой стороны исполнение этого требования имело отрицательный побочный эффект виде удаления из набора инструкций таких полезных операций как умножение или деление первые годы попытки развития архитектуры risc были хорошо известны однако оставались рамках породивших их университетских лабораторий многие компьютерной отрасли считали что преимущества процессоров risc не проявятся при использовании реальных продуктах из за низкой эффективности использования памяти составных инструкциях однако года проекты risc начали выпускать первые работающие изделия risc процессор из стэнфорда был реализован процессорах семейства rxxxx компании mips technologies последние годы как оказалось начале годов risc архитектуры позволяют получить большую чем cisc за счёт использования суперскалярного vliw подхода также за счёт возможности серьёзного повышения тактовой частоты упрощения кристалла высвобождением площади под кэш достигающий огромных ёмкостей также risc архитектуры позволили сильно снизить процессора за счёт уменьшения числа транзисторов первое время risc архитектуры трудом принимались рынком из за отсутствия программного обеспечения для них эта проблема была решена переносом unix подобных операционных систем sunos на risc архитектуры настоящее время многие архитектуры процессоров являются risc подобными примеру arm dec alpha sparc avr mips power powerpc наиболее широко используемые настольных компьютерах процессоры архитектуры ранее являлись cisc процессорами однако новые процессоры начиная intel pentium pro являются cisc процессорами risc ядром они непосредственно перед исполнением преобразуют cisc инструкции процессоров более простой набор внутренних инструкций risc после того как процессоры архитектуры были переведены на суперскалярную risc архитектуру можно сказать что большинство существующих ныне процессоров основаны на архитектуре risc см также risc вычисления система команд risc архитектура power архитектура arm примечания ссылки категория технологии процессоров категория обработка команд