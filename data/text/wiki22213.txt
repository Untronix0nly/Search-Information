utf информатике один из способов кодирования символов из юникода виде битных слов данная кодировка позволяет записывать символы юникода диапазонах ff ffff общим количеством при этом каждый символ записывается одним или двумя словами суррогатная пара кодировка utf описана приложении международному стандарту iso iec также ей посвящён ietf rfc utf an encoding of iso история появления первая версия юникода представляла собой битную кодировку фиксированной шириной символа общее число разных символов было во второй версии юникода было решено значительно расширить кодовую область для сохранения совместимости теми системами где уже был реализован битный юникод была создана utf область xd xdfff отведённая для суррогатных пар ранее принадлежала области символов для частного использования поскольку utf можно отобразить символов то это число было выбрано качестве новой величины кодового пространства юникода принцип кодирования dc dffe dfff fe ff fe ff dbff fc fffe utf символы кодируются двухбайтовыми словами использованием всех возможных диапазонов значений от до ffff при этом можно кодировать символы unicode диапазонах ff ffff исключенный отсюда диапазон dfff используется как раз для кодирования так называемых суррогатных пар символов которые кодируются двумя битными словами символы unicode до ffff включительно исключая диапазон для суррогатов записываются как есть битным словом символы же диапазоне ffff больше бит кодируются по следующей схеме из кода символа вычитается результате получится значение от нуля до fffff которое помещается разрядную сетку бит старшие бит число диапазоне ff суммируются результат идёт лидирующее первое слово которое входит диапазон dbff младшие бит тоже число диапазоне ff суммируются dc результат идёт последующее второе слово которое входит диапазон dc dfff порядок байтов один символ кодировки utf представлен двух байтов или двух пар байтов который из двух байтов идёт впереди старший или младший зависит от порядка байтов систему совместимую процессорами называют процессорами sparc для определения порядка байтов используется метка порядка байтов начале текста записывается код feff при считывании если вместо feff считалось fffe значит порядок байтов обратный little endian поскольку код fffe юникоде не кодирует символ зарезервирован как раз для целей определения порядка байтов так как кодировке utf не используются значения xfe xff можно использовать метку порядка байтов как признак позволяющий различать utf utf utf le utf be предусмотрена также возможность внешнего указания порядка байтов для этого кодировка должна быть описана как utf le или utf be little endian big endian не просто utf этом случае метка порядка байтов feff не нужна utf ос windows api win современных версиях операционной системы microsoft windows имеется два способа представления текста форме традиционных битных кодовых страниц виде utf при использовании utf windows не накладывает ограничений на прикладные программы касательно кодирования текстовых файлов позволяя им использовать как utf le так utf be посредством установки трактовки соответствующей метки порядка байтов однако внутренний формат windows всегда utf le этот момент следует учитывать при работе исполняемыми файлами использующими юникодовые версии функций winapi строки них всегда кодируются utf le файловых системах ntfs также fat поддержкой длинных имён имена файлов записываются также utf le примеры процедур примеры ниже записаны на псевдокоде них не учитывается маска порядка байтов они лишь показывают суть кодирования порядок байтов от младшего старшему little endian интеловский тип word двухбайтовое слово битное беззнаковое целое тип uint битное беззнаковое целое значения начинаются со знака доллара кодирование примере writeword условная процедура которая пишет одно слово при этом сдвигает внутренний указатель функция loword возвращает младшее слово от битного целого старшие биты не глядя отбрасываются допустимые значения code ff ffff procedure writeutf char code uint if code раскодирование примере readword читает слово из потока сдвигая при этом внутренний указатель она же при необходимости может корректировать порядок байтов функция wordtouint расширяет двухбайтовое слово до беззнакового целого заполняя старшие биты нулями error прерывает выполнение по сути исключение случае успеха возвращаются значения диапазонах ff ffff function readutf char uint var leading word лидирующее первое слово var trailing word последующее второе слово leading readword if leading dfff then return wordtouint leading else if leading dc then error недопустимая кодовая else var code uint code wordtouint leading and ff shl trailing readword if trailing dfff then error недопустимая кодовая else code code or wordtouint trailing and ff return code end if end if end function примечания ссылки unicode technical note обработка utf unicode faq чём разница между ucs utf полное описание стандарта unicode iso utf информация конвертировании больших значений два слова utf категория юникод категория компьютерные кодировки