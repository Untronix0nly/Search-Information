java сильно типизированный объектно ориентированный язык разработанный компанией sun microsystems последующем приобретённой компанией oracle приложения java обычно транслируются специальный байт код поэтому они могут работать на любой компьютерной архитектуре помощью виртуальной java машины дата официального выпуска мая года на год java один из самых популярных языков история создания изначально язык назывался oak дуб разрабатывался джеймсом гослингом для бытовых электронных устройств из за того что язык таким названием уже существовал вскоре oak был переименован java назван честь марки кофе java которая свою очередь получила наименование одноимённого острова ява поэтому на официальной эмблеме языка изображена чашка горячим кофе существует другая версия происхождения названия языка связанная аллюзией на кофе машину как пример бытового устройства для которого изначально язык создавался соответствии этимологией русскоязычной литературе конца двадцатого до первых лет двадцать первого века название языка нередко переводилось как ява не как это стало общепринятым позднее впоследствии язык стал использоваться для написания клиентских приложений серверного программного обеспечения основные особенности языка программы на java транслируются байт код java выполняемый виртуальной машиной java jvm программой обрабатывающей байтовый код передающей инструкции оборудованию как интерпретатор дюк талисман java достоинством подобного способа выполнения программ является полная независимость байт кода от операционной системы оборудования что позволяет выполнять java приложения на любом устройстве для которого существует соответствующая виртуальная машина другой важной особенностью технологии java является гибкая система безопасности рамках которой исполнение программы полностью контролируется виртуальной машиной любые операции которые превышают установленные полномочия программы например попытка доступа данным или соединения другим компьютером вызывают немедленное прерывание часто недостаткам концепции виртуальной машины относят снижение ряд несколько увеличил скорость выполнения программ на java применение технологии трансляции байт кода машинный код непосредственно во время работы программы jit технология возможностью сохранения версий класса машинном коде широкое использование платформенно кода native код стандартных библиотеках аппаратные средства обеспечивающие ускоренную обработку байт кода например технология jazelle поддерживаемая некоторыми процессорами архитектуры arm по данным сайта shootout alioth debian org для семи разных задач время выполнения на java составляет среднем полтора два раза больше чем для некоторых случаях java быстрее отдельных случаях раз медленнее другой стороны для большинства из них потребление памяти java машиной было раз больше чем программой на также примечательно исследование проведённое компанией google согласно которому отмечается существенно более низкая бо льшее потребление памяти тестовых примерах на java сравнении аналогичными программами на идеи заложенные концепцию различные реализации среды виртуальной машины java вдохновили множество энтузиастов на расширение перечня языков которые могли бы быть использованы для создания программ исполняемых на виртуальной машине эти идеи нашли также выражение спецификации общеязыковой инфраструктуры cli заложенной основу платформы net компанией microsoft история версий jdk разработка java началась году первая официальная версия java была выпущена только января года jdk вторая версия была выпущена февраля года библиотека accessibility java поддержка технологии drag and drop полная поддержка unicode включая поддержку ввода на японском китайском корейском языках поддержка воспроизведения аудиофайлов нескольких популярных форматов полная поддержка технологии corba jit компилятор улучшенная средств jdk том числе поддержка профилирования java программ se дата выпуска декабря года кодовое имя playground данном случае встречается путаница выпускались книги например beginning java by ivor horton mar фактически по se бывшее название java вместе тем по сей день такие книги публикуются например дейтел дж дейтел сантри технологии на java распределённые приложения то время когда как известно java была исторически заменена следующими релизами подобные названия книг дезориентируют понимании какой же версии java они написаны на самом деле если se принято считать за java авторы книг за java принимают jdk это приводит полной путанице se дата выпуска мая года кодовое имя kestrel se дата выпуска февраля года кодовое имя merlin se спецификация java была выпущена сентября года кодовое имя tiger этой версии изменена официальная индексация вместо java правильнее называть java внутренняя же индексация sun осталась прежней минорные изменения теперь включаются без изменения индексации для этого используется слово update или буква например java development kit update предполагается что обновления могут входить как исправления ошибок так небольшие добавления api jvm данной версии разработчики внесли язык целый ряд принципиальных дополнений перечислимые типы ранее отсутствовавшие java типы оформлены по аналогии но при этом имеют ряд дополнительных возможностей перечислимый тип является полноценным классом java то есть может иметь конструктор поля методы том числе скрытые абстрактные перечисление может реализовывать интерфейсы для перечислений имеются встроенные методы дающие возможность получения значений типа по имени символьных значений соответствующих именам преобразования между номером значением проверки типа на то что он является перечислимым аннотации возможность добавления текст программы метаданных непосредственно не влияющих на выполнение кода но допускающих использование для получения различных сведений коде его исполнении одновременно выпущен инструментарий для использования аннотированного кода одно из применений аннотаций упрощение создания тестовых модулей для java кода средства обобщённого механизм аналогичный средствам языков ada eiffel позже также появились принципиально отличаются от шаблонов дающий возможность создавать классы методы полями параметрами произвольного объектного типа использованием данного механизма реализованы новые версии коллекций стандартной библиотеки java методы неопределённым числом параметров autoboxing unboxing автоматическое преобразование между скалярными типами java типами обёртками например между int integer наличие такой возможности сокращает код поскольку исключает необходимость выполнения явных преобразований типов очевидных случаях разрешён импорт статических полей методов язык введён цикл по коллекции объектов итератор было введено использование javadoc комментариев которые используются для автоматического оформления документации по комментариям исходном коде java se релиз версии состоялся декабря года кодовое имя mustang изменена официальная индексация вместо ожидаемой версия значится как минорные изменения как java вносятся обычные обновления версии например java standard edition development kit update внесены следующие изменения коллекции добавлены интерфейсы для организации очереди работающей двух сторон коллекции поиск по ближайшему соответствию блокирующие себя во время ожидания элемента организованы новые классы реализующие перечисленные интерфейсы добавлена поддержка японского императорского календаря наряду уже существующими григорианским буддийским календарями доступны классы потоки для чтения передачи сжатых данных возможностью передачи их по сети сняты ограничения на количество файлов архиве ранее кб длину названия файла ранее символов количество одновременно открытых файлов ранее шт организована система управления кэшем добавлена поддержка параметра no cache http запросе jconsole графический мониторинг jvm стала официально поддерживаемой утилитой java http server позволяет создать полноценный http сервер минимально необходимыми функциональными свойствами повысилась скорость вычислений на скорость операций ввода вывода возросла два раза swing улучшена opengl directx обработка текста на lcd добавлен gifwriter для работы файлами формата gif исправлено большое количество ошибок java fx дата выпуска октября года javafx вошёл состав java se update версии модуль поставляется отдельно от jdk java me embedded дата выпуска октября года кодовое имя micro edition java se релиз версии состоялся июля года кодовое имя dolphin финальную версию java standard edition не были включены все ранее запланированные изменения согласно плану развития план включение нововведений будет разбито на две части java standard edition без лямбда исчисления проекта jigsaw части улучшений проекта coin java standard edition все остальное намеченный на конец года новой версии получившей название java standard edition java platform standard edition помимо исправления большого количества ошибок было представлено несколько новшеств так например качестве эталонной реализации java standard edition использован не проприетарный пакет jdk его открытая реализация openjdk сам релиз новой версии платформы готовился при тесном сотрудничестве инженеров oracle участниками мировой экосистемы java комитетом jcp java community process сообществом openjdk все поставляемые oracle бинарные файлы эталонной реализации java standard edition собраны на основе кодовой базы openjdk сама эталонная реализация полностью открыта под лицензией gplv исключениями gnu classpath разрешающими динамическое связывание проприетарными продуктами другим нововведениям относится интеграция набора небольших языковых улучшений java развиваемых рамках проекта coin добавлена поддержка языков динамической типизацией таких как ruby python javascript поддержка загрузки классов по url обновлённый xml стек включающий jaxp jaxb jax ws другие за дней до выхода релиза java standard edition было обнаружено несколько серьёзных ошибок горячей оптимизации циклов которая включена по умолчанию приводит виртуальную машину java краху специалисты oracle найденные ошибки за столь короткий срок исправить не могли но пообещали что они будут исправлены во втором обновлении java update частично первом список нововведений поддержка динамически типизированных языков invokedynamic расширение jvm семантики байт кода языка java для поддержки динамически типизированных языков строгая проверка class файлов class файлы версии java standard edition или более поздней версии должны быть проверены typechecking верификатором jvm не должна переключаться на старый верификатор изменение синтаксиса языка java project coin частичные изменения языке java предназначенные для упрощения общих задач использование класса string блоке switch закрытие используемых ресурсов блоке try try with resources работает при использовании интерфейса autocloseable объединённая обработка исключений блоке catch multi catch exceptions перечисление обрабатываемых исключений catch повторное выбрасывание исключений rethrowing exceptions передача возникшего исключения вверх по стеку вызовов подчёркивания числовых литералах для лучшего восприятия больших чисел изменение вывода типа java generic при создании объекта использование двоичных чисел binary literals префикс укажет что используется двоичное число упрощение вызова методов varargs уменьшение предупреждений при вызове метода переменным числом входящих переменных модификация загрузчика классов class loader избежание тупиковых ситуаций неиерархической топологии загрузки классов закрытие ресурсов открытых urlclassloader обновление коллекций jsr поддержка unicode отделение языка пользователя языка интерфейса обновление обработки языков для отделения локали от языка интерфейса новые интерфейсы для платформы java nio использование jdbc rowset не закончено java se релиз версии состоялся марта года кодовое имя octopus список нововведений полноценная поддержка лямбда выражений ключевое слово default интерфейсах для поддержки по умолчанию ссылки на методы конструкторы функциональные интерфейсы предикаты поставщики потоки stream для работы коллекциями новый api для работы датами не закончено java se связи со сложностями реализации модульной системы рамках проекта jigsaw релиз версии первоначально запланированный сентября года несколько раз откладывался сначала дата была перенесена на марта года потом на июля года затем на сентября года последняя дата стала официальной датой релиза версии список нововведений интеграция jigsaw обновление process api для улучшения взаимодействия процессами операционной системы обновление мотивировано тем что разработчикам зачастую приходилось писать код для таких задач временно новый http клиент поддержкой http веб сокетов заменой устаревшему сжатые строки если содержимое строки позволяет она может кодироваться latin один байт на символ выбор кодировки конкретного экземпляра класса string отображается значении переменной флага которая теперь есть всех строк java microbenchmark harness jmh поддержка указанных nist fips алгоритмов хеширования sha кроме shake shake дополнительные функции также не поддерживаются расширены аннотации депрекации добавлен параметр позволяющий указывать версию программы которой использование отмеченного элемента не одобряется также параметр позволяющий указать что запланировано удаление элемента будущей версии не закончено java se дата релиза марта года список нововведений официальный частичный список нововведений план релиза расположен на сайте openjdk вывод типов локальных переменных помощью ключевого слова var создание прозрачного интерфейса сборщика мусора для упрощения разработки новых сборщиков уменьшено время задержек многопоточного сборщика мусора за счёт реализации параллельного полного цикла сборки мусора возможность выполнять функции обратного вызова на потоках не делая глобальный для jvm safepoint поддержка новых расширений unicode cu currency type fw first day of week rg region override tz time zone hotspot vm теперь может выделять память кучи на альтернативных устройствах оперативной памяти том числе тех которые обладают памятью как например накопители intel optane memory новый jit компилятор graal по умолчанию отключён работает только на linux новая система нумерации версий java se jdk java se официальный частичный список нововведений план релиза расположен на сайте openjdk указанная нём планируемая дата релиза сентября года список нововведений обновление системы управления доступом позволяющее вложенным классам обращаться закрытым private методам полям внешнего класса наоборот без необходимости создания компилятором промежуточных методов повышением уровня доступа epsilon новый сборщик мусора собственно сборкой мусора не занимающийся вообще при использовании epsilon превышение предела выделяемой памяти приводит завершении работы jvm клиент http поддержкой http введённый java как параметры лямбда функций могут быть неявно типизированы через ключевое слово var для унификации синтаксисом локальных переменных введённым jdk поддержка версии стандарта unicode поддержка протокола tls масштабируемый сборщик мусора zgc низкими задержками по умолчанию отключён работает только на linux классификация платформ java внутри java существует несколько основных семейств технологий java se java standard edition основное издание java содержит компиляторы api java runtime environment подходит для создания приложений первую очередь для настольных систем java ee java enterprise edition представляет собой набор спецификаций для создания программного обеспечения уровня предприятия удален начиная версии java основной функционал перенесен java se java me java micro edition создана для использования устройствах ограниченных по вычислительной мощности например мобильных телефонах кпк встроенных системах java card технология предоставляет безопасную среду для приложений работающих на смарт картах других устройствах очень ограниченным объёмом памяти возможностями обработки java microsoft компанией microsoft была разработана собственная реализация jvm msjvm от microsoft java virtual machine включавшаяся состав различных операционных систем начиная windows также входила internet explorer от версии выше что позволяло использовать msjvm ос windows windows nt после установки ie на данные ос msjvm имела существенные отличия от sun java во многом ломающие концепцию переносимости программ между разными платформами отсутствие поддержки программного интерфейса вызова удаленных методов rmi отсутствие поддержки технологии jni наличие нестандартных расширений таких как средства интеграции java dcom работающих только на платформе windows тесная интеграция java dcom win поставила под вопрос парадигму языка впоследствии это явилось поводом для судебных исков со стороны sun microsystems microsoft суд принял сторону компании sun microsystems конечном счёте между двумя компаниями была достигнута договорённость возможности продления срока официальной поддержки пользователей нестандартной microsoft jvm до конца года году компанией microsoft для платформы net был представлен java подобный язык не соответствующий официальной спецификации языка java исключённый впоследствии из стандартного инструментария разработчика microsoft visual studio начиная visual studio java android язык java активно используется для создания мобильных приложений под операционную систему android при этом программы компилируются нестандартный байт код для использования их виртуальной машиной dalvik начиная android lollipop виртуальная машина заменена на art для такой компиляции используется дополнительный инструмент именно android sdk software development kit разработанный компанией google разработку приложений можно вести среде android studio netbeans среде eclipse используя при этом плагин android development tools adt или intellij idea версия jdk при этом должна быть или выше декабря года android studio признана компанией google официальной средой разработки под ос android применения платформы java следующие успешные проекты реализованы привлечением java ee технологий runescape amazon ebay linkedin yahoo следующие компании основном фокусируются на java ee технологиях sap ibm oracle частности субд oracle database включает jvm как свою составную часть обеспечивающую возможность субд на языке java включая например хранимые процедуры программы написанные на java имеют репутацию более медленных занимающих больше оперативной памяти чем написанные на языке тем не менее скорость выполнения программ написанных на языке java была существенно улучшена выпуском годах так называемого jit компилятора версии дополнение другим особенностям языка для поддержки лучшего анализа кода такие как внутренние классы класс stringbuffer упрощенные логические вычисления кроме того была произведена оптимизация виртуальной машины java года для этого используется виртуальная машина hotspot по состоянию на февраль года код java приблизительно раза медленнее кода написанного на языке си некоторые платформы предлагают аппаратную поддержку выполнения для java примеру выполняющие код java на аппаратном обеспечении вместо программной jvm также основанные на arm процессоры которые поддерживают выполнение байткода java через опцию jazelle основные возможности автоматическое управление памятью расширенные возможности обработки исключительных ситуаций богатый набор средств фильтрации ввода вывода набор стандартных коллекций массив список стек наличие простых средств создания сетевых приложений том числе использованием протокола rmi наличие классов позволяющих выполнять http запросы обрабатывать ответы встроенные язык средства создания многопоточных приложений которые потом были портированы на многие языки например python унифицированный доступ базам данных на уровне отдельных sql запросов на основе jdbc sqlj на уровне концепции объектов обладающих способностью хранению базе данных на основе java persistence api поддержка обобщений начиная версии поддержка лямбд замыканий встроенные возможности функционального пространство имён идея пространств имён воплощена java пакетах внутри пакета есть два независимых пространства имен переменные методы примеры программ код программы hello world class helloworld public static void main string args system out println hello world обобщения рефлексия аннотации основные идеи примитивные типы языке java только примитивных скалярных простых типов boolean byte char short int long float double существует также вспомогательный девятый примитивный тип void однако переменные поля такого типа не могут быть объявлены коде сам тип используется только для описания ему класса для использования при рефлексии например помощью класса можно узнать является ли определённый метод типа void hello class getmethod main string class getreturntype void type длины диапазоны значений примитивных типов определяются стандартом не реализацией приведены таблице тип char сделали двухбайтовым для удобства локализации один из идеологических принципов java когда складывался стандарт уже существовал unicode но не unicode поскольку результате не осталось однобайтового типа добавили новый тип byte причём java отличие от других языков он не является беззнаковым типы float double могут иметь специальные значения не число nan для типа double они обозначаются double double double nan для типа float так же но приставкой float вместо double минимальные максимальные значения принимаемые типами float double тоже стандартизованы тип длина байтах диапазон или набор значений boolean массивах переменных true false byte char или short или int или long или примерно float или примерно также nan double или примерно также nan такая жёсткая стандартизация была необходима чтобы сделать язык платформенно независимым что является одним из идеологических требований java тем не менее одна небольшая проблема платформенной независимостью всё же осталась некоторые процессоры используют для промежуточного хранения результатов байтовые регистры или другими способами улучшают точность вычислений для того чтобы сделать java максимально совместимой между разными системами ранних версиях любые способы повышения точности вычислений были запрещены однако это приводило снижению быстродействия выяснилось что ухудшение точности ради платформенной независимости мало кому нужно тем более если за это приходится платить замедлением работы программ после многочисленных протестов этот запрет отменили но добавили ключевое слово strictfp запрещающее повышение точности преобразования при математических операциях языке java действуют следующие правила если один операнд имеет тип double другой тоже преобразуется типу double иначе если один операнд имеет тип float другой тоже преобразуется типу float иначе если один операнд имеет тип long другой тоже преобразуется типу long иначе оба операнда преобразуются типу int данный способ неявного преобразования встроенных типов полностью совпадает преобразованием типов объектные переменные объекты ссылки указатели языке java имеются только динамически создаваемые объекты причём переменные объектного типа объекты java совершенно разные сущности переменные объектного типа являются ссылками это подчёркивается синтаксисом описания переменных так java нельзя писать double foo нужно double new double foo new foo при присваиваниях передаче подпрограммы сравнениях объектные переменные ведут себя как указатели то есть присваиваются копируются сравниваются адреса объектов при доступе помощью объектной переменной полям данных или методам объекта не требуется никаких специальных операций разыменовывания этот доступ осуществляется так как если бы объектная переменная была самим объектом объектными являются переменные любого типа кроме примитивного явных указателей java нет отличие от указателей других языков ссылки java высокой степени безопасны благодаря жёстким ограничениям на их использование частности нельзя преобразовывать объект типа int или любого другого примитивного типа указатель или ссылку наоборот над ссылками запрещено выполнять операции или любые другие арифметические операции преобразование типов между ссылками жёстко за исключением ссылок на массивы разрешено преобразовывать ссылки только между наследуемым типом его наследником причём преобразование наследуемого типа наследующий должно быть явно задано во время выполнения производится проверка его осмысленности преобразования ссылок на массивы разрешены лишь тогда когда разрешены преобразования их базовых типов также нет конфликтов размерности java нет операций взятия адреса или взятия объекта по адресу амперсанд означает всего лишь побитовое двойной амперсанд логическое однако для булевых типов одиночный амперсанд означает логическое отличающееся от двойного тем что цепь проверок не прекращается при получении выражении значения false напр foo bar не повлечёт вызовов foo bar случае если тогда как использование повлечёт любом случае благодаря таким специально введенным ограничениям java невозможно прямое манипулирование памятью на уровне физических адресов хотя определено значение ссылки не указывающей ни на что null если нужен указатель на примитивный тип используются классы обёртки примитивных типов дублирование ссылок клонирование из за того что объектные переменные являются ссылочными при присваивании не происходит копирования объекта так если написать foo foo bar bar foo то произойдет копирование адреса из переменной foo переменную bar то есть foo bar будут указывать на одну ту же область памяти то есть на один тот же объект попытка изменить поля объекта на который ссылается переменная foo будет менять объект которым связана переменная bar наоборот если же необходимо получить именно ещё одну копию исходного объекта пользуются или методом функцией членом терминологии clone создающим копию объекта или реже копирующим конструктором конструкторы java не могут быть виртуальными поэтому экземпляр класса потомка будет неправильно скопирован конструктором класса предка метод клонирования вызывает нужный конструктор тем самым позволяет обойти это ограничение метод clone требует чтобы класс реализовывал интерфейс cloneable об интерфейсах см ниже если класс реализует интерфейс cloneable по умолчанию clone копирует все поля мелкая копия если требуется не копировать клонировать поля также их поля так далее надо переопределять метод clone определение использование метода clone часто является нетривиальной задачей инициализация переменных все переменные или требуют явного определения или автоматически заполняются нулями null массивом нулей таким образом исчезают гейзенбаги связанные со случайным использованием памяти характерные для низкоуровневых языков вроде сборка мусора языке java невозможно явное удаление объекта из памяти вместо этого реализована сборка мусора традиционным приёмом дающим сборщику мусора намёк на освобождение памяти является присваивание переменной пустого значения null это однако не значит что объект заменённый значением null будет непременно немедленно удалён но есть гарантия что этот объект будет удалён именно будущем данный приём всего лишь устраняет ссылку на объект то есть отвязывает указатель от объекта памяти при этом следует учитывать что объект не будет удалён сборщиком мусора пока на него указывает хотя бы одна ссылка из используемых переменных или объектов существуют также методы для инициации принудительной сборки мусора но не гарантируется что они будут вызваны исполняющей средой их не рекомендуется использовать для обычной работы классы функции java не является процедурным языком любая функция может существовать только внутри класса это подчёркивает терминология языка java где нет понятий функция или функция член только метод методы превратились стандартные функции например java нет функции sin есть метод math sin класса math содержащего кроме sin методы cos exp sqrt abs многие другие конструкторы java не считаются методами деструкторов java не существует метод finalize ни коем случае нельзя считать аналогом деструктора конструкторы конструктор это специальный метод который обязательно вызывается при создании нового объекта то есть объект экземпляр класса не может быть создан без вызова конструктора класса не всегда удобно все переменные класса при создании его экземпляра поэтому переменные экземпляра часто объявляют внутри тела конструктора инициализируют как аргументы конструктора при создании экземпляра класса иногда проще чтобы какие то значения были бы созданы по умолчанию при создании объекта таком случае переменные объявляются внутри тела конструктора конструктор инициализирует объект непосредственно во время создания имя конструктора совпадает именем класса включая регистр по синтаксису конструктор похож на метод без возвращаемого значения private int cat так выглядит метод по имени cat cat так выглядит конструктор класса cat отличие от метода конструктор никогда ничего не возвращает конструктор определяет действия выполняемые при создании объекта класса является важной частью класса как правило программисты стараются явно указать конструктор если явного конструктора нет то java автоматически создаст его пустым для использования по умолчанию создадим класс box конструктором который просто установит начальные значения для коробки class box int width ширина коробки int height высота коробки int depth глубина коробки конструктор box int int width height depth вычисляем объём коробки int getvolume return width height depth статические методы поля java как используются статические поля статические методы теории их также называют методами класса которые задаются при помощи ключевого слова static статические поля переменные класса имеют тот же смысл что каждое такое поле является собственностью класса поэтому для доступа статическим полям не требуется создавать экземпляры класса например математические функции реализованные классе math представляют собой как раз статические методы данного класса поэтому можно писать double math sin вместо math new math double sin поскольку статические методы существуют независимо от объектов экземпляров класса они не имеют доступа обычным не статическим полям методам данного класса частности при реализации статического метода недопустимо использовать идентификатор this благодаря возможности статического импорта возможно также вызывать статические функции константы без указания класса чтобы вместо кода double math sin math tan math sqrt math floor math cos math pi писать код import static java lang math double sin tan sqrt floor cos pi завершённость final ключевое слово final финальный имеет разные значения при описании поля метода или класса финальное поле класса при описании или конструкторе класса статическое поле статическом блоке инициализации впоследствии его значение не может быть изменено если статическое поле класса или переменная константным выражением они рассматриваются компилятором как именованная константа таком случае их значение может быть использовано операторах switch для констант типа int также для условной компиляции для констант типа boolean при использовании оператором if значения локальных переменных также параметров метода помеченных ключевым словом final не могут быть изменены после присвоения при этом их значения могут использоваться внутри анонимных классов метод класса отмеченный словом final не может быть переопределён при наследовании финальный класс не может иметь наследников абстрактность java методы не объявленные явно как static final или private являются виртуальными терминологии при вызове метода по разному определённого базовом наследующем классах всегда производится проверка времени выполнения абстрактным методом модификатор abstract java называется метод для которого заданы параметры тип возвращаемого значения но не задано тело абстрактный метод определяется классах наследниках аналог абстрактного метода чисто виртуальная функция pure virtual function для того чтобы классе можно было описывать абстрактные методы сам класс тоже должен быть описан как абстрактный объекты абстрактного класса создавать нельзя интерфейсы высшей степенью абстрактности java является интерфейс модификатор interface все методы интерфейса абстрактны описатель abstract даже не требуется интерфейс java не считается классом хотя по сути является полностью абстрактным классом класс может наследовать расширять extends другой класс или реализовывать implements интерфейс кроме того интерфейс может наследовать расширять другой интерфейс java класс не может наследовать более одного класса зато может реализовывать несколько интерфейсов множественное наследование интерфейсов не запрещено то есть один интерфейс может наследоваться от нескольких интерфейсы можно использовать качестве типов параметров методов нельзя создавать экземпляры интерфейсов маркерные интерфейсы java есть интерфейсы которые не содержат методов для реализации специальным образом обрабатываются jvm java lang cloneable java io serializable java util randomaccess java rmi remote шаблоны java generics начиная версии java языке появился механизм обобщённого шаблоны внешне близкие шаблонам помощью специального синтаксиса описании классов методов можно указать параметры типы которые внутри описания могут использоваться качестве типов полей параметров возвращаемых значений методов объявление обобщённого класса class genericclass getfirst void add obj использование обобщённого класса коде genericclass var new genericclass var add qwerty string var getfirst допускается обобщённое объявление классов интерфейсов методов кроме того синтаксис поддерживает ограниченные объявления типов параметров указание объявлении конструкции вида требует чтобы тип параметр реализовывал интерфейсы так далее отличие от шаблонов шаблоны java не поддерживаются средой исполнения компилятор просто создаёт байт код котором никаких шаблонов уже нет реализация шаблонов java принципиально отличается от реализации аналогичных механизмов компилятор не порождает для каждого случая использования шаблона отдельный вариант класса или метода шаблона просто создаёт одну реализацию байт кода содержащую необходимые проверки преобразования типов это приводит ряду ограничений использования шаблонов программах на java проверка принадлежности классу java можно явно проверить какому классу принадлежит объект выражение foo instanceof foo истинно если объект foo принадлежит классу foo или его наследнику или реализует интерфейс foo или общем виде наследует класс который реализует интерфейс который наследует foo далее функция getclass определённая для всех объектов выдаёт объект типа class для каждого класса создаётся не более одного описывающего его объекта типа class поэтому эти объекты можно сравнивать так например foo getclass bar getclass будет истинно если объекты foo bar принадлежат одному классу кроме того объект типа class любого типа можно получить так integer class object class прямое сравнение классов не всегда является оптимальным средством проверки на принадлежность классу зачастую вместо него используют функцию эта функция определена объекта типа class принимает объект типа class качестве параметра таким образом вызов foo class bar class вернёт true случае если foo является предком класса bar так как все объекты являются потомками типа object вызов object class всегда вернёт true паре упомянутыми функциями объекта типа class используются также функции isinstance эквивалентно instanceof также cast преобразует параметр объект выбранного класса средства разработки по jdk помимо набора библиотек для платформ java se java ee содержит компилятор командной строки javac набор утилит также работающих режиме командной строки netbeans ide свободная интегрированная среда разработки для всех платформ java java me java se java ee oracle владельцем технологии java как базовое средство для разработки по на языке java других языках php fortran др eclipse ide свободная интегрированная среда разработки для java se java ee java me ibm одним из важнейших разработчиков корпоративного по как базовое средство для разработки по на языке java других языках ruby fortran др intellij idea среда разработки для платформ java se java ee java me разработчик компания jetbrains двух версиях свободной бесплатной community edition коммерческой проприетарной ultimate edition jdeveloper среда разработки для платформ java se java ee java me разработчик компания oracle bluej среда разработки программного обеспечения на языке java созданная основном для использования обучении но также подходящая для разработки небольших программ java для ios обучающее приложение компилятор для ios geany свободная среда разработки программного обеспечения написанная использованием библиотеки gtk см также сравнение java список java api java user groups комментарии примечания литература ссылки автономный установщик последней версии java версия java архив всех версий официальный сайт bruce eckel free electronic books свободно электронные версии книг брюса эккеля по java вместе исходным кодом kahan joseph darcy how java floating point hurts everyone everywhere java platform standard edition api specification учебник java категория языки веб категория языки автоматическим управлением памятью