sql язык запросов декларативный язык применяемый для создания модификации управления данными реляционной базе данных управляемой соответствующей системой управления базами данных история первые разработки начале годов одной из лабораторий компании ibm была разработана реляционная субд ibm system для которой затем был создан специальный язык sequel позволявший относительно просто управлять данными этой субд аббревиатура sequel как английский язык запросов позже по юридическим соображениям язык sequel был переименован sql когда году первый стандарт языка sql был принят ansi официальным произношением стало es kju el эс кью эл несмотря на это даже англоязычные специалисты зачастую продолжают читать sql как сиквел по русски часто говорят эс ку эль целью разработки было создание простого непроцедурного языка которым мог воспользоваться любой пользователь даже не имеющий навыков собственно разработкой языка запросов занимались дональд чэмбэрлин рэй бойс пэт селинджер занималась разработкой стоимостного оптимизатора рэймонд лори занимался компилятором запросов стоит отметить что sequel был не единственным языком подобного назначения калифорнийском университете беркли была разработана некоммерческая субд ingres являвшаяся между прочим дальним прародителем популярной сейчас некоммерческой субд postgresql которая являлась реляционной субд но использовала свой собственный язык quel который однако не выдержал конкуренции по количеству поддерживающих его субд по сравнению языком sql первыми субд поддерживающими новый язык стали году oracle для машин vax от компании relational software inc впоследствии ставшей компанией oracle system от ibm основанная на system стандартизация поскольку началу годов существовало несколько вариантов субд от разных производителей причём каждый из них обладал собственной реализацией языка запросов было принято решение разработать стандарт языка который будет гарантировать переносимость по одной субд на другую при условии что они будут поддерживать этот стандарт году международная организация по стандартизации iso американский национальный институт стандартов ansi приступили разработке стандарта языка sql по прошествии множества консультаций отклонения нескольких предварительных вариантов году ansi представил свою первую версию стандарта описанную документе ansi под названием database language sql язык баз данных sql неофициально этот стандарт sql получил название sql год спустя была завершена работа над версией стандарта iso под тем же названием разработка этого стандарта велась под патронажем технического комитета tc областью деятельности которого являлись процессы вычисления обработки информации именно его подразделение именуемое как подкомитет sc курировало разработку стандарта что стало залогом идентичности стандартов iso ansi для sql sql стандарт sql разделялся на два уровня первый уровень представлял собой подмножество второго уровня описывавшего весь документ целом то есть такая структура предусматривала что не все спецификации стандарта sql будут относиться уровню тем самым поставщик заявлявший поддержке данного стандарта должен был заявлять об уровне которому соответствует его реализация языка sql это значительно облегчило принятие поддержку стандарта поскольку производители могли реализовывать его поддержку два этапа со временем стандарту накопилось несколько замечаний пожеланий особенно точки зрения обеспечения целостности корректности данных результате чего году данный стандарт был расширен получив название sql частности него была добавлена концепция первичного внешнего ключей iso версия документа получила название iso database language sql with integrity enhancements язык баз данных sql добавлением контроля целостности параллельно была закончена ansi версия сразу после завершения работы над стандартом sql году была начата работа над новой версией стандарта который должен был заменить стандарт sql получив название sql поскольку дата принятия документа на тот момент была неизвестна таким образом фактически sql sql разрабатывались параллельно новая версия стандарта была принята году заменив стандарт sql новый стандарт озаглавленный как sql представлял собой по сути расширение стандарта sql включив себя множество дополнений имевшихся предыдущих версиях инструкций как sql sql также был разделён на несколько уровней однако во первых число уровней было увеличено двух до трёх во вторых они получили названия вместо порядковых цифр начальный средний полный уровень полный как уровень sql подразумевал весь стандарт целиком уровень начальный представлял собой подмножество уровня средний свою очередь представлявшего собой подмножество уровня полный уровень начальный был сравним уровнем стандарта sql но спецификации этого уровня были несколько расширены таким образом цепочка включений уровней стандартов выглядела примерно следующим образом sql уровень sql уровень sql начальный sql средний sql полный после принятия стандарта sql нему были добавлены ещё несколько документов расширявших языка так году был принят стандарт sql cli call level interface интерфейс уровня вызовов впоследствии переименованный cli на следующий год был принят стандарт sql psm persistent stored modules постоянно хранимые модули получивший название psm следующим стандартом стал sql sql настоящее время действует стандарт принятый году sql небольшими модификациями внесёнными позже sql история версий стандарта год название иное название изменения sql sql первый вариант стандарта принятый институтом ansi одобренный iso году sql fips немного доработанный вариант предыдущего стандарта sql sql fips значительные изменения iso уровень entry level стандарта sql был принят как стандарт fips sql sql добавлена поддержка регулярных выражений рекурсивных запросов поддержка триггеров базовые процедурные расширения нескалярные типы данных некоторые объектно ориентированные возможности sql введены расширения для работы xml данными оконные функции применяемые для работы olap базами данных генераторы основанные на них типы данных sql работы xml данными значительно расширена появилась возможность совместно использовать запросах sql xquery sql улучшены возможности оконных функций устранены некоторые неоднозначности стандарта sql вопросы совместимости по традиции как со многими стандартами it индустрии языком sql возникла проблема на каком то этапе многие производители использующего sql программного обеспечения решили что текущей на тот момент времени версии стандарта недостаточна её желательно расширить результате разных производителей систем управления базами данных субд ходу разные диалекты sql общем случае между собой несовместимые до года вопросами соответствия коммерческих реализаций sql стандарту занимался основном национальный институт стандартов технологий nist который устанавливал уровень соответствия стандарту поздне подразделение занимавшееся субд было расформировано на текущий момент все усилия по проверке субд на соответствие стандарту ложатся на её производителя впервые понятие уровня соответствия было предложено стандарте sql именно ansi nist определяли четыре уровня соответствия реализации этому стандарту entry базовый transitional переходный проверку на соответствие этому уровню проводил только nist intermediate промежуточный full полный легко можно понять что каждый последующий уровень соответствия заведомо подразумевал соответствие предыдущему уровню далее согласно данной лесенке стандартов любая субд которая соответствовала уровню entry могла заявлять себя как sql compliant совместимая sql хотя на самом деле переносимость соответствие стандарту ограничивалось набором возможностей входящих этот уровень положение изменилось введением стандарта sql отныне стандарт приобрёл модульную структуру основная часть стандарта была вынесена раздел sql foundation все остальные были выведены отдельные модули соответственно остался только один уровень совместимости core что означало поддержку этой основной части поддержка остальных возможностей оставлена на усмотрение производителей субд аналогичное положение имело место последующими версиями стандарта введение sql является прежде всего информационно логическим языком предназначенным для описания изменения извлечения данных хранимых реляционных базах данных sql можно назвать языком при этом он не является тьюринг полным но вместе тем стандарт языка спецификацией sql psm предусматривает возможность его процедурных расширений изначально sql был основным способом работы пользователя базой данных позволял выполнять следующий набор операций создание базе данных новой таблицы добавление таблицу новых записей изменение записей удаление записей выборка записей из одной или нескольких таблиц соответствии заданным условием изменение структур таблиц со временем sql усложнился обогатился новыми конструкциями обеспечил возможность описания управления новыми хранимыми объектами например индексы представления триггеры хранимые процедуры стал приобретать черты свойственные языкам при всех своих изменениях sql остаётся единственным механизмом связи между прикладным программным обеспечением базой данных то же время современные субд также информационные системы использующие субд предоставляют пользователю развитые средства визуального построения запросов описание язык sql представляет собой совокупность операторов инструкций вычисляемых функций операторы согласно общепринятому стилю операторы другие слова sql обычно рекомендуется писать прописными буквами операторы sql делятся на операторы определения данных data definition language ddl create создаёт объект бд саму базу таблицу представление пользователя alter изменяет объект drop удаляет объект операторы манипуляции данными data manipulation language dml select выбирает данные удовлетворяющие заданным условиям insert добавляет новые данные update изменяет существующие данные delete удаляет данные операторы определения доступа данным data control language dcl grant предоставляет пользователю группе разрешения на определённые операции объектом revoke отзывает ранее выданные разрешения deny задаёт запрет имеющий приоритет над разрешением операторы управления транзакциями transaction control language tcl commit применяет транзакцию rollback откатывает все изменения сделанные контексте текущей транзакции savepoint делит транзакцию на более мелкие участки преимущества недостатки преимущества независимость от конкретной субд несмотря на наличие диалектов различий синтаксисе большинстве своём тексты sql запросов содержащие ddl dml могут быть достаточно легко перенесены из одной субд другую существуют системы разработчики которых изначально ориентировались на применение по меньшей мере нескольких субд например система электронного documentum может работать как oracle database так microsoft sql server db естественно что при применении некоторых специфичных для реализации возможностей такой переносимости добиться уже очень трудно наличие стандартов наличие стандартов набора тестов для выявления совместимости соответствия конкретной реализации sql общепринятому стандарту только способствует стабилизации языка правда стоит обратить внимание что сам по себе стандарт местами чересчур формализован раздут размерах например базовая часть стандарта sql состоит из более чем страниц текста декларативность помощью sql программист описывает только то какие данные нужно извлечь или модифицировать то каким образом это сделать решает субд непосредственно при обработке sql запроса однако не стоит думать что это полностью универсальный принцип программист описывает набор данных для выборки или модификации однако ему при этом полезно представлять как субд будет разбирать текст его запроса чем сложнее сконструирован запрос тем больше он допускает вариантов написания различных по скорости выполнения но одинаковых по итоговому набору данных недостатки несоответствие реляционной модели данных создатели реляционной модели данных эдгар кодд кристофер дейт их сторонники указывают на то что sql не является истинно реляционным языком частности они указывают на следующие дефекты sql точки зрения реляционной теории sql разрешает таблицах строки дубликаты что рамках реляционной модели данных невозможно недопустимо sql поддерживает неопределённые значения null многозначную логику sql использует порядок колонок ссылки на колонки по номерам sql разрешает колонки без имени дублирующиеся имена колонок опубликованном кристофером дейтом хью дарвеном третьем манифесте они излагают принципы субд следующего поколения предлагают язык tutorial который является подлинно реляционным сложность хотя sql задумывался как средство работы конечного пользователя конце концов он стал настолько сложным что превратился инструмент программиста отступления от стандартов несмотря на наличие международного стандарта ansi sql многие разработчики субд вносят изменения язык sql применяемый разрабатываемой субд тем самым отступая от стандарта таким образом появляются специфичные для каждой конкретной субд диалекты языка sql сложность работы иерархическими структурами ранее диалекты sql большинства субд не предлагали способа манипуляции древовидными структурами некоторые поставщики субд предлагали свои решения например oracle database используется выражение connect by настоящее время ansi стандартизована рекурсивная конструкция with из диалекта sql db microsoft sql server рекурсивные запросы recursive common table expressions появились лишь версии расширения процедурные расширения поскольку sql не является привычным процедурным языком то есть не предоставляет средств для построения циклов ветвлений вводимые разными производителями расширения касались первую очередь процедурных расширений это хранимые процедуры процедурные языки надстройки практически каждой субд применяется свой процедурный язык частности oracle database используется pl sql поддерживается также db interbase firebird psql db microsoft sql server adaptive server enterprise transact sql postgresql pl pgsql см также qbe внедрение sql кода хранимая процедура sqlca примечания литература chamberlin donald early history of sql ieee annals of the history of computing ссылки текст стандарта sql сергей кузнецов наиболее интересные новшества стандарте sql