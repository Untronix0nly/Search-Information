внедрение sql кода один из способов взлома сайтов программ работающих базами данных основанный на внедрении запрос произвольного sql кода внедрение sql зависимости от типа используемой субд условий внедрения может дать возможность атакующему выполнить произвольный запрос базе данных например прочитать содержимое любых таблиц удалить изменить или добавить данные получить возможность чтения или записи локальных файлов выполнения произвольных команд на атакуемом сервере атака типа внедрения sql может быть возможна из за некорректной обработки входных данных используемых sql запросах разработчик прикладных программ работающих базами данных должен знать таких уязвимостях принимать меры противодействия внедрению sql принцип атаки внедрения sql допустим серверное по получив входной параметр id использует его для создания sql запроса рассмотрим следующий php скрипт id id res mysqli_query select from news where id_news id если на сервер передан параметр id равный например так http example org script php id то выполнится следующий sql запрос select from news where id_news но если злоумышленник передаст качестве параметра id строку or например так http example org script php id or то выполнится запрос select from news where id_news or таким образом изменение входных параметров путём добавления них конструкций языка sql вызывает изменение логике выполнения sql запроса данном примере вместо новости заданным идентификатором будут выбраны все имеющиеся базе новости поскольку выражение всегда истинно вычисления происходят по кратчайшему контуру схеме внедрение строковые параметры предположим серверное по получив запрос на поиск данных новостях параметром search_text использует его следующем sql запросе здесь параметры экранируются кавычками search_text search_text res mysqli_query select id_news news_date news_caption news_text news_id_author from news where news_caption like search_text сделав запрос вида http example org script php search_text test мы получим выполнение следующего sql запроса select id_news news_date news_caption news_text news_id_author from news where news_caption like test но внедрив параметр search_text символ кавычки который используется запросе мы можем кардинально изменить поведение sql запроса например передав качестве параметра search_text значение and news_id_author мы вызовем выполнению запрос select id_news news_date news_caption news_text news_id_author from news where news_caption like and news_id_author использование union язык sql позволяет объединять результаты нескольких запросов при помощи оператора union это предоставляет злоумышленнику возможность получить доступ данным рассмотрим скрипт отображения новости идентификатор новости которую необходимо отобразить передается параметре id res mysqli_query select id_news header body author from news where id_news id если злоумышленник передаст качестве параметра id конструкцию union select username password from admin это вызовет выполнение sql запроса select id_news header body author from news where id_news union select username password from admin так как новости идентификатором заведомо не существует из таблицы news не будет выбрано ни одной записи однако результат попадут записи отобранные из таблицы admin результате инъекции sql использование union group_concat некоторых случаях хакер может провести атаку но не может видеть более одной колонки случае mysql взломщик может воспользоваться функцией group_concat col symbol col которая объединяет несколько колонок одну например для примера данного выше вызов функции будет таким union select group_concat username password from admin экранирование хвоста запроса зачастую sql запрос подверженный данной уязвимости имеет структуру усложняющую или препятствующую использованию union например скрипт res mysqli_query select author from news where id id and author like отображает имя автора новости по передаваемому идентификатору id только при условии что имя начинается буквы внедрение кода использованием оператора union затруднительно таких случаях используется метод экранирования части запроса при помощи символов комментария или зависимости от типа субд данном примере злоумышленник может передать скрипт параметр id со значением union select password from admin выполнив таким образом запрос select author from news where id union select password from admin and author like котором часть запроса and author like помечена как комментарий не влияет на выполнение расщепление sql запроса для разделения команд языке sql используется символ точка запятой внедряя этот символ запрос злоумышленник получает возможность выполнить несколько команд одном запросе однако не все диалекты sql поддерживают такую возможность например если параметры скрипта id id res mysqli_query select from news where id_news id злоумышленником передается конструкция содержащая точку запятой например insert into admin username password values hacker foo то одном запросе будут выполнены команды select from news where id_news insert into admin username password values hacker foo таблицу admin будет добавлена запись hacker методика атак типа внедрение sql кода поиск скриптов уязвимых для атаки на данном этапе злоумышленник изучает поведение скриптов сервера при манипуляции входными параметрами целью обнаружения их аномального поведения манипуляция происходит всеми возможными параметрами данными передаваемыми через методы post get значениями http cookie http_referer для скриптов auth_user auth_password при использовании аутентификации как правило манипуляция сводится подстановке параметры символа одинарной реже двойной или обратной кавычки аномальным поведением считается любое поведение при котором страницы получаемые до после подстановки кавычек различаются при этом не выведена страница неверном формате параметров наиболее частые примеры аномального поведения выводится сообщение различных ошибках при запросе данных например новости или списка продукции запрашиваемые данные не выводятся вообще хотя страница отображается следует учитывать что известны случаи когда сообщения об ошибках силу специфики разметки страницы не видны браузере хотя присутствуют её html коде конструкция комментирование остатка строки получение версии конкатенация строк mysql или version concat string string ms sql version string string oracle или select banner from version string string или concat string string ms access внедрение запрос null байта postgresql version string string sybase version string string ibm db select versionnumber from sysibm sysversions string string или string concat string ingres dbmsinfo string string защита от атак типа внедрение sql кода для защиты от данного типа атак необходимо тщательно фильтровать входные параметры значения которых будут использованы для построения sql запроса фильтрация строковых параметров предположим что код генерирующий запрос на языке паскаль выглядит так statement select from users where name username чтобы внедрение кода закрытие строки начинающейся кавычки другой кавычкой до её завершения текущей закрывающей кавычкой для разделения запроса на две части было невозможно для некоторых субд том числе для mysql требуется брать кавычки все строковые параметры само параметре заменяют кавычки на апостроф на обратную косую черту на это называется экранировать спецсимволы это можно делать таким кодом statement select from users where name quoteparam username function quoteparam string string на входе строка на выходе строка кавычках заменёнными спецсимволами var integer dest string begin dest for to length do case si of dest dest dest dest dest dest else dest dest si end quoteparam dest end для php фильтрация может быть такой query select from users where user user фильтрация целочисленных параметров возьмём другой запрос statement select from users where id id данном случае поле id имеет числовой тип его чаще всего не берут кавычки поэтому закавычивание замена спецсимволов на escape не проходит таком случае помогает проверка типа если переменная id не является числом запрос вообще не должен выполняться например на delphi для противодействия таким инъекциям помогает код if trystrtoint id id_int then statement format select from users where id id_int для php этот метод будет выглядеть так query select from users where id int id усечение входных параметров для внесения изменений логику выполнения sql запроса требуется внедрение достаточно длинных строк так минимальная длина внедряемой строки вышеприведённых примерах составляет символов or если максимальная длина корректного значения параметра невелика то одним из методов защиты может быть максимальное усечение значений входных параметров например если известно что поле id вышеприведённых примерах может принимать значения не более можно отрезать лишние символы оставив не более четырёх statement select from users where id leftstr id использование запросов многие серверы баз данных поддерживают возможность отправки запросов подготовленные выражения при этом параметры внешнего происхождения отправляются на сервер отдельно от самого запроса либо автоматически экранируются клиентской библиотекой для этого используются на delphi свойство tquery params например var sql param string begin sql select text as value from dual param alpha query sql text sql query parambyname text asstring param query open showmessage query value end на perl через dbi quote или dbi prepare на java через класс на свойство sqlcommand parameters на php mysqli при работе mysql pdo см также хакерская атака хранимая процедура ссылки sql инъекция mysql сервере sql injection от до mysql error based sql injection sql injection postgresql sql injection различных бд утилиты категория sql категория уязвимости защиты категория атаки эксплойты