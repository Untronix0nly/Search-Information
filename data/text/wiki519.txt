ftp протокол передачи файлов по сети отличие от tftp гарантирует передачу либо выдачу ошибки за счёт применения квитируемого протокола tcp стандартный порт управления ftp соединением типичное применение ftp протокола загрузка сайтов других документов частного устройства разработки на общедоступные сервера хостинга протокол построен на архитектуре клиент сервер использует разные сетевые соединения для передачи команд данных между клиентом сервером пользователи ftp могут пройти аутентификацию передавая логин пароль открытым текстом или же если это разрешено на сервере они могут подключиться анонимно можно использовать протокол ssh для безопасной передачи скрывающей шифрующей логин пароль также шифрующей содержимое первые клиентские ftp приложения были интерактивными инструментами командной строки реализующими стандартные команды синтаксис графические интерфейсы тех пор были разработаны для многих используемых по сей день операционных систем среди этих интерфейсов как программы общего веб дизайна вроде microsoft expression web так ftp клиенты например filezilla ftp является одним из старейших прикладных протоколов появившимся задолго до http даже до tcp ip году первое время он работал поверх протокола ncp он сегодня широко используется для распространения по доступа удалённым хостам описание протокола отличие от http свойство ftp http основан на сессиях работы встроена аутентификация пользователей изначально предусмотрен для передачи больших двоичных файлов небольших текстовых файлов модель соединения двойное подключение одиночное подключение поддерживает текстовый двоичный режимы передачи поддерживает указание типов передаваемых данных mime заголовки поддерживает операции над файловой системой mkdir rm rename достаточно яркая особенность протокола ftp том что он использует множественное как минимум двойное подключение при этом один канал является управляющим через который поступают команды серверу возвращаются его ответы обычно через tcp порт через остальные происходит собственно передача данных по одному каналу на каждую передачу поэтому рамках одной сессии по протоколу ftp можно передавать одновременно несколько файлов причём обоих направлениях для каждого канала данных открывается свой tcp порт номер которого выбирается либо сервером либо клиентом зависимости от режима передачи протокол ftp как http имеет двоичный режим передачи что сокращает накладные расходы трафика уменьшает время обмена данными при передаче больших файлов начиная работу через протокол ftp клиент входит сессию все операции проводятся рамках этой сессии проще говоря сервер помнит текущее состояние протокол http ничего не помнит его задача отдать данные забыть поэтому запоминание состояния при использовании http осуществляется внешними по отношению протоколу методами ftp работает на прикладном уровне модели osi используется для передачи файлов помощью tcp ip для этого должен быть запущен ftp сервер ожидающий входящих запросов компьютер клиент может связаться сервером по порту это соединение поток управления остаётся открытым на время сессии второе соединение поток данных может быть открыт как сервером из порта порту клиента активный режим или же клиентом из любого порта порту сервера пассивный режим что необходимо для передачи файла данных поток управления используется для работы сессией например обмен между клиентом сервером командами паролями помощью telnet подобного протокола например retr имя файла передаст указанный файл от сервера клиенту вследствие этой двухпортовой структуры ftp считается внешнеполосным протоколом отличие от внутриполосного http соединение передача данных протокол определён rfc сервер отвечает по потоку управления трёхзначными ascii кодами состояния необязательным текстовым сообщением например или ок означает что последняя команда была успешно выполнена цифры представляют код ответа текст разъяснение или запрос текущая передача по потоку данных может быть прервана помощью прерывающего сообщения посылаемого по потоку управления ftp может работать активном или пассивном режиме от выбора которого зависит способ установки соединения активном режиме клиент создаёт управляющее tcp соединение сервером отправляет серверу свой ip адрес произвольный номер клиентского порта после чего ждёт пока сервер запустит tcp соединение этим адресом номером порта случае если клиент находится за брандмауэром не может принять входящее tcp соединение может быть использован пассивный режим этом режиме клиент использует поток управления чтобы послать серверу команду pasv затем получает от сервера его ip адрес номер порта которые затем используются клиентом для открытия потока данных произвольного клиентского порта полученному адресу порту оба режима были обновлены сентябре для поддержки ipv это время были проведены дальнейшие изменения пассивного режима обновившие его до расширенного пассивного режима при передаче данных по сети могут быть использованы четыре представления данных ascii используется для текста данные если необходимо до передачи конвертируются из символьного представления на хосте отправителе восьмибитный ascii опять же если необходимо символьное представление принимающего хоста частности изменяются символы перевода строки cr chr lf chr windows на lf chr unix linux как следствие этот режим не подходит для файлов содержащих не только обычный текст режим изображения обычно именуемый бинарным устройство отправитель посылает каждый файл байт за байтом получатель сохраняет поток байтов при получении поддержка данного режима была рекомендована для всех реализаций ftp ebcdic используется для передачи обычного текста между хостами кодировке ebcdic остальном этот режим аналогичен ascii режиму локальный режим позволяет двум компьютерам идентичными установками посылать данные собственном формате без конвертации ascii для текстовых файлов предоставлены различные форматы управления настройки структуры записи эти особенности были разработаны для работы файлами содержащими telnet или asa форматирование передача данных может осуществляться любом из трёх режимов поточный режим данные посылаются виде непрерывного потока освобождая ftp от выполнения какой бы то ни было обработки вместо этого вся обработка выполняется tcp индикатор конца файла не нужен за исключением разделения данных на записи блочный режим ftp разбивает данные на несколько блоков блок заголовка количество байт поле данных затем передаёт их tcp режим сжатия данные сжимаются единым алгоритмом обычно кодированием длин серий аутентификация ftp аутентификация использует схему имя пользователя пароль для предоставления доступа имя пользователя посылается серверу командой user пароль командой pass если предоставленная клиентом информация принята сервером то сервер отправит клиенту приглашение начинается сессия пользователи могут если сервер поддерживает эту особенность войти систему без предоставления учётных данных но сервер может предоставить только ограниченный доступ для таких сессий мини хост обеспечивающий ftp сервис может предоставить анонимный доступ ftp пользователи обычно входят систему как anonymous может быть на некоторых ftp серверах качестве имени пользователя хотя обычно пользователей просят прислать адрес их электронной почты вместо пароля никакой проверки фактически не производится многие ftp хосты предоставляющие обновления программного обеспечения поддерживают анонимный доступ ftp alg специально для работы ftp протокола через межсетевые экраны было сделано расширение nat называемое ftp alg позволяющее транслировать входящие соединения от сервера клиенту через nat процессе такого соединения ftp alg подменяет передаваемые данные от клиента указывая серверу истинный адрес порт которым сможет соединиться сервер потом транслирует соединение от сервера от этого адреса клиенту на его адрес несмотря на все меры нововведения принятые для поддержки ftp протокола на практике функция ftp alg обычно отключается во всех роутерах маршрутизаторах целью обеспечения дополнительной безопасности от вирусных угроз nat обход брандмауэров ftp обычно передает данные при наличии соединения сервера клиентом после того как клиент отправил команду port это создает проблему как для nat так для брандмауэров которые не разрешают соединения из интернета внутренним хостам для nat дополнительной проблемой является то что представление ip адресов номера порта команде port относится ip адресу порту внутреннего хоста вместо публичного ip адреса nat порта существует два подхода этой проблеме первый заключается том что ftp клиент ftp сервер используют команду pasv которая вызывает соединение для передачи данных установленное от клиента серверу второй подход изменение для nat значений команды port помощью шлюза на прикладном уровне поддержка веб браузерами большая часть обычных веб браузеров может извлекать файлы расположенные на ftp серверах хотя они могут не поддерживать расширения протоколов вроде ftps когда указан ftp адрес не http адрес доступный контент на удалённом сервере представляется аналогично остальному веб контенту полностью функциональный ftp клиент может быть запущен firefox как расширение fireftp синтаксис синтаксис ftp url описан rfc форме ftp параметры квадратных скобках необязательны например ftp public ftp servers example com mydirectory myfile txt недоступная ссылка или ftp user secretpassword private ftp servers example com mydirectory myfile txt недоступная ссылка более детально об указании имени пользователя пароля написано документации браузеров по умолчанию большинство веб браузеров используют пассивный pasv режим который лучше обходит брандмауэры конечного пользователя безопасность ftp не разрабатывался как защищённый особенно по нынешним меркам протокол имеет многочисленные уязвимости защите мае авторы rfc свели уязвимости следующий список проблем скрытые атаки bounce attacks спуф атаки spoof attacks атаки методом грубой силы brute force attacks перехват пакетов сниффинг packet capture sniffing защита имени пользователя захват портов port stealing ftp не может зашифровать свой трафик все передачи открытый текст поэтому имена пользователей пароли команды данные могут быть прочитаны кем угодно способным перехватить пакет по сети эта проблема характерна для многих спецификаций интернет протокола их числе smtp telnet pop imap разработанных до создания таких механизмов шифрования как tls ssl обычное решение этой проблемы использовать безопасные tls защищённые версии уязвимых протоколов ftps для ftp telnets для telnet или же другой более защищённый протокол вроде sftp scp большинством реализаций протокола secure shell безопасный ftp существует несколько методов безопасной передачи файлов которые иногда называются безопасным ftp ftps явный ftps расширение стандарта ftp позволяющее клиентам требовать того чтобы ftp сессия была зашифрована это реализуется отправкой команды auth tls сервер обладает возможностью позволить или отклонить соединения которые не запрашивают tls это расширение протокола определено спецификации rfc неявный ftps устаревший стандарт для ftp требующий использования ssl или tls соединения этот стандарт должен был использовать отличные от обычного ftp порты sftp sftp или ssh file transfer protocol не связан ftp за исключением того что он тоже передаёт файлы имеет аналогичный набор команд для пользователей sftp или безопасный ftp это программа использующая ssh secure shell для передачи файлов отличие от стандартного ftp он шифрует команды данные предохраняя пароли информацию от открытой передачи через сеть по sftp похож на ftp но так как он использует другой протокол клиенты стандартного ftp не могут связаться sftp сервером наоборот ftp через ssh не sftp ftp через ssh не sftp относится практике туннелирования обычной ftp сессии через ssh соединение поскольку ftp использует несколько tcp соединений туннелирование через ssh особенно затруднительно когда много ssh клиентов пытаются установить туннель для канала управления изначальное клиент сервер соединение по порту защищён будет только этот канал при передаче данных программное обеспечение ftp на любом конце установит новые tcp соединения каналы данных которые обойдут ssh соединение таким образом лишатся целостной защиты иначе для клиентского программного обеспечения ssh необходимо иметь определённые знания ftp для отслеживания перезаписи сообщений потока управления ftp автономного открытия новых перенаправлений для потока данных ftp программные пакеты поддерживающие этот режим tectia connectsecure win linux unix из пакета ssh communications security tectia server for ibm os из пакета ssh communications security fonc под лицензией gpl co ftpssh proxy ftp через ssh иногда относят безопасным ftp но не стоит путать его другими методами такими как ssl tls ftps другие методы передачи файлов помощью ssh не связанные ftp sftp scp каждом из них учётные файловые данные всегда защищены протоколом ssh история первая реализация протокола предусматривала обмен между клиентом сервером сообщениями состоящими из заголовка бит данных переменной длины заголовок сообщения включал себя запрос ftp серверу или ответ от него тип длину передаваемых данных качестве данных передавались параметры запроса например путь имя файла информация от сервера например список файлов каталоге сами файлы таким образом команды данные передавались по одному тому же каналу протокол был полностью изменён принял вид близкий современному команды параметрами от клиента ответы сервера передаются по telnet соединению канал управления для передачи данных создаётся отдельное соединение канал данных последующих редакциях была добавлена возможность работы пассивном режиме передачи файлов между ftp серверами введены команды получения информации смены текущего каталога создания удаления каталогов сохранения файлов под уникальным именем некоторое время существовали команды для передачи электронной почты через ftp однако впоследствии они были исключены из протокола ftp протокол стал использовать tcp последняя редакция протокола была выпущена появилось дополнение протоколу позволяющее шифровать подписывать информацию канале управления канале данных выпущено дополнение посвящённое протокола которое рекомендует использовать кодировку utf для команд ответов сервера определяет новую команду lang устанавливающую язык ответов основные команды abor прервать передачу файла cdup сменить каталог на вышестоящий cwd сменить каталог dele удалить файл dele filename epsv войти расширенный пассивный режим применяется вместо pasv help выводит список команд принимаемых сервером list возвращает список файлов каталога список передаётся через соединение данных mdtm возвращает время модификации файла mkd создать каталог nlst возвращает список файлов каталога более кратком формате чем list список передаётся через соединение данных noop пустая операция pass пароль pasv войти пассивный режим сервер вернёт адрес порт которому нужно подключиться чтобы забрать данные передача начнётся при введении следующих команд retr list port войти активный режим например port отличие от пассивного режима для передачи данных сервер сам подключается клиенту pwd возвращает текущий каталог quit отключиться rein подключение retr скачать файл перед retr должна быть команда pasv или port rmd удалить каталог rnfr rnto переименовать файл rnfr что переименовывать rnto во что size возвращает размер файла stor закачать файл перед stor должна быть команда pasv или port syst возвращает тип системы unix win type установить тип передачи файла бинарный текстовый user имя пользователя для входа на сервер коды ответов ftp ниже представлено краткое описание кодов ответа которые могут быть возвращены ftp сервером эти коды были ietf rfc как было сказано ранее код ответа трёхзначное число первая цифра отвечает за один из трёх исходов успех отказ или указание на ошибку либо неполный ответ xx успешный ответ xx xx команда не может быть выполнена xx xx ошибка или неполный ответ вторая цифра определяет тип ошибки синтаксическая информация соответствует информационному сообщению соединения сообщение относится управляющему соединению либо соединению данных соответствует сообщениям об аутентификации пользователя его правах не определено файловая система соответствует сообщению состоянии файловой системы третья цифра окончательно специфицирует ошибку пример примере жирным шрифтом выделены команды которые подаёт клиент обычным шрифтом сообщения сервера примечания отделены двумя слэшами ftp server ready hello world user anonymous anonymous login ok send your complete email address as your password pass logged in anonymously pasv entering passive mode клиент должен открыть соединение на переданный ip list here comes the directory listing сервер передает список файлов каталоге directory send ok cwd incoming directory successfully changed pasv entering passive mode stor example avi ok to send data клиент передает содержимое файла file receive ok quit goodbye аргумент означает что соединение серверу ожидается на узле ip адресом на порту где операция побитового сдвига записывается младший разряд потом сдвигается старший чтобы младший записать или на многих ftp серверах существует каталог под названием incoming upload открытый на запись предназначенный для закачки файлов на сервер это позволяет пользователям наполнять сервера свежими данными fxp fxp протокол обмена файлами способ передачи файлов между двумя ftp серверами напрямую не закачивая их на свой компьютер при fxp сессии клиент открывает два ftp соединения двум разным серверам запрашивая файл на первом сервере указывая команде port ip адрес второго сервера несомненным преимуществом поддержки стандарта fxp является то что на конечных пользователей желающих скопировать файлы одного ftp сервера на другой уже не действует ограничение пропускной способности их собственного интернет соединения нет необходимости скачивать себе файл чтобы потом загрузить его на другой ftp сервер таким образом время передачи файлов будет зависеть только от скорости соединения между двумя удаленными ftp серверами которая большинстве случаев заведомо больше fxp стал использоваться для атак на другие серверы команде port указывается ip адрес порт атакуемого сервиса на компьютере жертвы командами retr stor производится обращение на этот порт от лица ftp сервера не атакующей машины что позволяло устраивать масштабные ddos атаки использованием сразу многих ftp серверов либо обходить систему безопасности компьютера жертвы если он полагается только на проверку ip клиента используемый для атаки ftp сервер находится доверенной сети или на шлюзе результате сейчас практически все серверы проверяют соответствие ip адреса указанного команде port ip адресу ftp клиента по умолчанию запрещают использование там ip адресов третьих сторон таким образом использование fxp невозможно при работе публичными ftp серверами см также сравнение ftp серверов сравнение ftp клиентов sftp tftp ftps mftp hammering ftp клиент команды коды ответов ftp сервера список unix демонов список протоколов передачи файлов open object rexx библиотека классов rxftp примечания ссылки первоначальная спецификация ftp rfc расширения безопасности rfc ftp rfc расширение nat pt для поддержки ftp rfc шифрование kea skipjack rfc расширение команд ftp rfc реестр команд расширений ftp rfc есть перевод на русский серверы filezilla server windows pure ftpd unix vsftpd unix proftpd unix категория интернет протоколы