обра тная по льская запись форма записи математических логических выражений которой операнды расположены перед знаками операций также именуется как обратная польская запись обратная бесскобочная запись постфиксная нотация бесскобочная символика лукасевича польская инверсная запись полиз стековой машиной называется алгоритм проводящий вычисления по обратной польской записи см ниже пример вычисления выражений история обратная польская нотация была разработана австралийским философом специалистом области теории вычислительных машин чарльзом хэмблином середине на основе польской нотации которая была предложена году польским математиком яном лукасевичем работа хэмблина была представлена на конференции июне издана первыми компьютерами поддерживающими обратную польскую нотацию были kdf от english electric company который был анонсирован выпущен появился продаже американский burroughs анонсирован выпущен том же один из проектировщиков позже написал что разработал обратную польскую запись независимо от хэмблина примерно процессе чтения книги по символьной логике до того как познакомился работой хэмблина компания friden перенесла опн настольные калькуляторы выпустив июне модель ec инженеры hewlett packard разработали настольный калькулятор поддержкой опн этот калькулятор сделал обратную польскую нотацию популярной среди учёных инженеров даже несмотря на то что ранней рекламе опн не упоминалась калькулятор hp поддержкой опн стал первым научным карманным калькулятором году появился оригинальный язык forth языковая машина которого имеет двухстековую структуру где все вычисления проводятся на стеке этом языке опн является естественным способом записи любых операций данными хотя возможна при желании реализация обычной инфиксной записи арифметических операций опн применялась советском инженерном калькуляторе совместная разработка гдр выпущенном году все выпускаемые ссср вплоть до конца годов программируемые за исключением электроника мк электроника мк использовали опн она проще реализовывалась позволяла обойтись вычислений меньшим числом команд по сравнению обычной алгебраической нотацией количество программной памяти этих моделях всегда было критическим ресурсом опн используется современных российских программируемых калькуляторах электроника мк электроника мк что обеспечивает их совместимость программами написанными для советских калькуляторов определение чтобы дать индуктивное определение постфиксной нотации обозначим выражения инфиксной нотации эквивалентные им выражения постфиксной нотации соответственно произвольный бинарный оператор тогда если переменная или константа то есть если выражение вида то есть если выражение вида то есть описание отличительной особенностью обратной польской нотации является то что все аргументы или операнды расположены перед знаком операции общем виде запись выглядит следующим образом запись набора операций состоит из операндов знаков операций операнды выражении при письменной записи разделяются пробелами выражение читается слева направо когда выражении встречается знак операции выполняется соответствующая операция над двумя последними встретившимися перед ним операндами порядке их записи результат операции заменяет выражении её операндов её знак после чего выражение вычисляется дальше по тому же правилу результатом вычисления выражения становится результат последней вычисленной операции например рассмотрим вычисление выражения эквивалентное выражение инфиксной нотации первый по порядку знак операции поэтому первой выполняется операция умножения над операндами они стоят последними перед знаком выражение при этом преобразуется виду результат умножения заменяет тройку второй знак операции выполняется операция вычитания над операндами вычисление закончено результат последней операции равен это есть результат вычисления выражения очевидное расширение обратной польской записи на унарные тернарные операции любым другим количеством операндов при использовании знаков таких операций вычислении выражения операция применяется числу последних встретившихся операндов особенности обратной польской записи следующие порядок выполнения операций однозначно задаётся порядком следования знаков операций выражении поэтому отпадает необходимость использования скобок введения приоритетов ассоциативности операций отличие от инфиксной записи невозможно использовать одни те же знаки для записи унарных бинарных операций так инфиксной записи выражение использует знак минус как символ унарной операции изменение знака числа выражение применяет этот же знак для обозначения бинарной операции вычитание конкретная операция определяется тем какой позиции находится знак обратная польская запись не позволяет этого запись условный аналог первого выражения будет как ошибочная поскольку невозможно определить что минус после обозначает не вычитание результате будет сделана попытка вычислить сначала затем после чего выяснится что для операции умножения не хватает операндов чтобы всё же записать это выражение придётся либо его например записав вместо выражения выражение либо ввести для операции изменения знака отдельное обозначение например так же как инфиксной нотации опн одно то же вычисление может быть записано нескольких разных вариантах например выражение опн можно записать как можно как из за отсутствия скобок обратная польская запись короче инфиксной за этот счёт при вычислениях на калькуляторах повышается скорость работы оператора уменьшается количество нажимаемых клавиш программируемых устройствах сокращается объём тех частей программы которые описывают вычисления последнее может быть немаловажно для портативных встроенных вычислительных устройств имеющих жёсткие ограничения на объём памяти вычисления на стеке общий порядок автоматизация вычисления выражений обратной польской нотации основана на использовании стека алгоритм вычисления для стековой машины элементарен обработка входного символа если на вход подан операнд он помещается на вершину стека если на вход подан знак операции то соответствующая операция выполняется над требуемым количеством значений извлечённых из стека взятых порядке добавления результат выполненной операции кладётся на вершину стека если входной набор символов обработан не полностью перейти шагу после полной обработки входного набора символов результат вычисления выражения лежит на вершине стека реализация стековой машины как программная так аппаратная чрезвычайно проста может быть очень эффективной обратная польская запись совершенно унифицирована она принципиально одинаково записывает унарные бинарные тернарные любые другие операции также обращения функциям что позволяет не усложнять конструкцию вычислительных устройств при расширении набора поддерживаемых операций это послужило причиной использования обратной польской записи некоторых научных программируемых пример вычисления выражений инфиксное выражение опн может быть записано так вычисление производится слева направо ввод как указано приведённой ниже таблице указано состояние стека после выполнения операции вершина стека выделена красным цветом ввод операция стек поместить стек поместить стек сложение поместить стек умножение поместить стек сложение результат конце вычислений находится на вершине стека клавиша ввод обозначаемая на калькуляторах как enter или символом выполняет роль разделителя операндов когда два операнда непосредственно следуют друг за другом если за операндом следует знак операции то её нажатие не требуется это сокращает количество действий которые нужно выполнить для получения результата преобразование из инфиксной нотации эдсгер дейкстра изобрёл алгоритм для преобразования выражений из инфиксной нотации опз алгоритм получил название сортировочная станция за сходство его операций происходящим на железнодорожных сортировочных станциях инфиксная нотация это форма математических записей которую использует большинство людей например или как алгоритм вычисления опз алгоритм сортировочной станции основан на стеке преобразовании участвуют две текстовых переменных входная выходная строки процессе преобразования используется стек хранящий ещё не добавленные выходной строке операции преобразующая программа читает входную строку последовательно символ за символом символ это не обязательно буква выполняет на каждом шаге некоторые действия зависимости от того какой символ был прочитан простой пример вход добавим выходной строке если прочитано число то оно сразу добавляется выходной строке помещаем или его идентификатор стек операций добавим выходной строке мы прочитали всё выражение теперь выталкиваем все оставшиеся стеке операции выходную строку нашем примере стеке содержится только выходная строка данном примере проявляются некоторые правила все числа переносятся выходную строку сразу после прочтения когда выражение прочитано полностью все оставшиеся стеке операции выталкиваются выходную строку алгоритм пока есть ещё символы для чтения читаем очередной символ если символ является числом или постфиксной функцией например факториал добавляем его выходной строке если символ является префиксной функцией например sin синус помещаем его стек если символ является открывающей скобкой помещаем его стек если символ является закрывающей скобкой до тех пор пока верхним элементом стека не станет открывающая скобка выталкиваем элементы из стека выходную строку при этом открывающая скобка удаляется из стека но выходную строку не добавляется если стек закончился раньше чем мы встретили открывающую скобку это означает что выражении либо неверно поставлен разделитель либо не согласованы скобки если существуют разные виды скобок появление непарной скобки также свидетельствует об ошибке если какие то скобки одновременно являются функциями например целая часть добавляем выходной строке символ этой функции если символ является бинарной операцией тогда пока на вершине стека префиксная функция или операция на вершине стека приоритетнее или операция на вершине стека приоритетом как выталкиваем верхний элемент стека выходную строку помещаем операцию стек когда входная строка закончилась выталкиваем все символы из стека выходную строку стеке должны были остаться только символы операций если это не так значит выражении не согласованы скобки ограничения модификации алгоритм предполагает что исходная строка корректна проверяются не все ошибки все префиксные постфиксные функции унарные модификацию для многоместных функций фиксированным количеством аргументов см основной статье для операций вроде являющихся как бинарными так унарными нужна модификация при обнаружении подобной операции система смотрит на предыдущий символ определяет чем будет минус бинарной операцией или унарной функцией соответственно стеке опз нужны разные символы для бинарного унарного минуса сложный пример приоритеты высокий средний низкий самый низкий вход читаем добавим выходной строке выход читаем кладём стек выход стек читаем добавим выходной строке выход стек читаем кладём стек выход стек читаем добавим выходной строке выход стек читаем выталкиваем из стека выходную строку кладём стек выход стек читаем кладём стек выход стек читаем добавим выходной строке выход стек читаем кладём стек выход стек читаем добавим выходной строке выход стек читаем выталкиваем из стека выходную строку выталкиваем выход стек читаем кладём стек выход стек читаем добавим выходной строке выход стек конец выражения выталкиваем все элементы из стека строку выход оптимизация выражений если вы пишете интерпретатор то выходная строка полученная после преобразования исходного выражения обратную польскую нотацию может храниться вместо исходного выражения для последующей интерпретации обратная польская нотация также позволяет компьютеру упрощать выражения пример алгоритма упрощения выражения рассмотрим алгоритм который осуществляет предвычисление констант выражении дано выражение опн нам понадобится стек для хранения смешанных данных чисел операторов алгоритм подобен тому который применяется для вычисления выражений мы просматриваем выражение слева направо пока есть символы для чтения читаем очередной символ если символ является числом помещаем его стек если символ является переменной считая что переменная имеет значение null помещаем символ стек если символ является оператором если все аргументы оператора лежащие стеке имеют значение отличное от null выталкиваем аргументы оператора из стека помещаем стек результат операции если хотя бы один из аргументов имеет значение null считая что результат операции null кладём символ оператора стек после того как всё выражение просмотрено то что осталось стеке является оптимизированым выражением операторы выражения лежат стеке обратном порядке пример работы алгоритма выражение инфиксая нотация exp обратная польская нотация exp читаем кладём стек стек читаем кладём стек стек читаем вычисляем частное результат кладём стек стек читаем кладём стек со значением null стек null читаем кладём стек со значением null стек null null читаем exp кладём exp стек со значением null стек null null exp null результат оптимизации exp данный метод очевидно не включает всех возможных способов оптимизации примеры реализации статье обратная польская запись примеры реализации собраны примеры реализации обратной польской записи на различных языках практические реализации качестве практического применения данной методики можно привести организацию байт кода конфигураций прикладных решений системы предприятие официального подтверждения компания не дает но пользователи данной системы на форумах приводят доказательства алгоритмы позволяющие декомпилировать исходные тексты литература примечания ссылки языки использующие опн качестве основной forth factor postscript язык стилей оформления bibtex другие ссылки обратная польская нотация http www univer omsk ru students docs pol_zap html реализация польской инверсной записи полиза на php категория калькуляторы категория математические обозначения