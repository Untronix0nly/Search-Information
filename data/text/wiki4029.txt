динами ческая типиза ция приём широко используемый языках языках спецификации при котором переменная связывается типом момент присваивания значения не момент объявления переменной таким образом различных участках программы одна та же переменная может принимать значения разных типов примеры языков динамической типизацией smalltalk python objective ruby php perl javascript lisp xbase erlang visual basic противоположный приём статическая типизация некоторых языках со слабой динамической типизацией стоит проблема сравнения величин так например php имеет операции сравнения где вторая пара операций сравнивает значения типы переменных операция даёт true только при полном совпадении отличие от который считает верным такое выражение стоит отметить что это проблема не динамической типизации целом конкретных языков преимущества упрощается написание несложных программ например скриптов облегчается работа прикладного программиста субд которые принципиально возвращают информацию динамически типизированном виде поэтому динамические языки ценны например для веб служб иногда требуется работать данными переменного типа например функция поиска подстроки возвращает позицию найденного символа число или маркер не найдено php этот маркер булевое false языках со статической типизацией это особая константа паскале std string npos недостатки статическая типизация позволяет уже при компиляции заметить простые ошибки по недосмотру для динамической типизации требуется как минимум выполнить данный участок кода объектно ориентированных языках не действует либо действует ограничениями автодополнение трудно или невозможно понять какому типу относится переменная вывести набор её полей методов развитая статическая система типов такая как хиндли милнер играет значительную роль программы динамическая типизация по определению не проявляет этого свойства что затрудняет разработку структурно сложных программ снижение из за трат процессорного времени на динамическую проверку типа излишние расходы памяти на переменные которые могут хранить что угодно тому же большинство языков динамической типизацией не компилируемые примеры php res string echo res выводит string переменная имеет строковый тип res echo res выводит переменная преобразуется целочисленный тип res echo res выводит результат операции целочисленная переменная res string echo res выводит string переменная преобразуется строковый тип выполняется конкатенация python var string print var выведет string var print var выведет var print var выведет однако такой ход python невозможен var string порождается исключение typeerror unsupported operand type for int and str var str var потребуется явное преобразование типов var string теперь ок print var выведет string javascript var res string alert res выводит string res alert res выводит res alert res выводит res string alert res выводит string object pascal program project apptype console uses sysutils var variant begin string writeln выводит string writeln выводит inc writeln выводит writeln string выводит string end object pascal другие способы использования динамической типизации procedure tform myproc obj tobject begin if obj is tbutton then obj as tbutton click end function something array of const begin end вызов something hello true tform procedure tform displayvalue const avalue tvalue begin memo lines append avalue tostring end procedure tform btn click sender tobject var list tstrings begin list tstringlist create list text foo try displayvalue list displayvalue list count displayvalue list capacity displayvalue list is tstringlist displayvalue list text finally list free end end вывод tstringlist true foo lua var string переменная строкового типа var переменная стала таблицей oldprint print print такое тоже возможно print somestring attempt to call nil value oldprint somestring somestring примечания см также система типов сильная слабая типизация статическая типизация приведение типа вывод типов динамический язык ссылки sitepoint introduction to static and dynamic typing лекция типизация категория типы данных категория теория типов