преобразование барроуза уилера burrows wheeler transform bwt также исторически называется блочно сортирующим сжатием хотя сжатием не является это алгоритм используемый техниках сжатия данных для преобразования исходных данных bwt используется архиваторе bzip алгоритм был изобретён термином bwt также называют полные алгоритмы сжатия использующие bwt как один из шагов краткое описание решаемые задачи меняет порядок символов во входной строке таким образом что повторяющиеся подстроки образуют на выходе идущие подряд одинаковых символов таким образом сочетание bwt rle выполняет задачу сжатия исключением повторяющихся подстрок то есть задачу аналогичную алгоритмам lz кроме того почти точно повторяющиеся незначительными отличиями подстроки входного текста дают на выходе одинаковых символов редко перемежающиеся другими символами если после этого выполнить шаг по замене каждого символа расстоянием до его предыдущей встречи алгоритм move to front mtf то полученный набор чисел будет иметь крайне удачное статистическое распределение для применения энтропийного сжатия типа хаффмана или же арифметического на практике алгоритм сжатия вида bwt mtf rle хаффман применённый архиваторе bzip немного превосходит лучшие реализации lzh по качеству сжатия при аналогичной скорости bwt алгоритмов сжатия на его основе потребление памяти важнейшей задачей которая должна быть решена для получения быстрого алгоритма bwt является задача сортировки строк при этом следует учесть что некоторые алгоритмы сортировки строк крайне зависимы от удачности входных данных работают быстро большинстве случаев но крайне сильно деградируют неудачных случаях например такова довольно удачная общем случае комбинация bucket sort qsort седжвика каждой корзине на входном тексте виде длинной abababab bucket sort создаст корзины для заполнив каждую почти полностью одинаковыми строками после чего qsort на таком наборе затянется почти навсегда таких случаях приходится прерывать исполнение затянувшегося алгоритма переходить на другой алгоритм radix sort который хуже удачных случаях но не подвержен обвальной деградации потребление памяти bwt компрессором главным образом сводится буферу под ныне сортируемую порцию входных данных для хорошего качества компрессии хорошей глубины анализа это единицы мегабайт что превосходит потребление памяти всеми остальными звеньями компрессора lzh компрессор gzip максимальном режиме немного хуже по качеству сжатия примерно одинаков по скорости но потребляет значительно меньше памяти bwt декомпрессор намного быстрее линейная скорость не потребляет значительных объёмов памяти что отличает его от алгоритмов ppm иллюстрация применения для задач сжатия пусть есть входной текст повторяющимися или почти повторяющимися строками vanya vanya tanya manya vanya при заполнении матрицы bwt ней обязательно окажутся строки anya несколько раз для каждой встречи vanya anya anya при сортировке матрицы строки начинающиеся одинакового префикса anya собьются плотную группу их последние символы дадут некую изредка перемежающуюся после применения mtf мы получим нулей изредка перемежающуюся небольшими числами для описание алгоритма когда символьная строка при помощи bwt ни один из её символов не изменяется оно просто меняет порядок символов если исходной строке есть подстроки которые встречаются часто тогда строка будет иметь некоторые места где одиночный символ повторяется несколько раз подряд это полезно для компрессии так как ведёт облегчению сжатия строки которая состоит из повторяющихся символов при помощи таких техник как кодирование длин серий например строка six mixed pixies sift sixty pixie dust boxes эту строку которая легче сжимается потому что содержит много повторяющихся символов texydst xiixixxsmppss eeusfxdioiiiit трансформация производится сортировкой всех циклических перестановок строки затем выбором последнего столбца из полученной матрицы например текст banana bnn aa при помощи этих шагов красная точка обозначает символ конца строки трансформация вход всеперестановки сортировкастрок выход banana banana banana banan na bana ana ban nana ba anana banana anana ana ban banan banana nana ba na bana banana banana bnn aa следующий псевдокод даёт простой но неэффективный способ для вычисления bwt его инверсии предполагается что специальный символ конца строки eol не встречается нигде больше тексте игнорируется во время сортировки function bwt string create list of all possible rotations of let each rotation be one row in large square table sort the rows of the table alphabetically treating each row as string return the last rightmost column of the table function inversebwt string create an empty table with no rows or columns repeat length times insert as new column down the left side of the table sort the rows of the table alphabetically return the row that ends with the eol character отличительная особенность bwt не том что оно создаёт более легко кодируемые выходные данные многие тривиальные операции позволяют это сделать том что оно обратимо позволяя восстановить исходный документ из данных последнего столбца обратное преобразование может быть легко понято следующим образом возьмём последнюю таблицу сотрём все столбцы кроме последнего при помощи только этой информации вы можете легко восстановить первый столбец последнем столбце находятся все символы текста поэтому сортируя их мы получаем первый столбец затем первая последняя колонка вместе дают вам все пары символов строке сортируя список пар получаем первую вторую колонку продолжая таким образом вы можете восстановить полный список затем строка символом конца строки конце есть оригинальная строка обращая пример данный выше получаем нечто вроде этого обратное преобразование вход bnn aa добавление сортировка добавление сортировка ba na na an an an an ba na na добавление сортировка добавление сортировка ban nan na ba ana ana ana ana ban nan na ba bana nana na ban anan ana ba anan ana bana nana na ban ba добавление сортировка добавление сортировка banan nana na bana anana ana ban ba anana ana ba banan nana na bana ban banana nana na ba banan anana ana bana ban anana ana ban banana nana na ba banan bana добавление сортировка добавление сортировка banana nana na ban banana anana ana ba banan bana anana ana ba bana banana nana na ban banana banan banana nana ba na bana banana anana ana ban banana banan anana ana ban banan banana nana ba na bana banana banana результат banana некоторое количество оптимизаций может сделать эти алгоритмы более эффективными без изменения выходных данных bwt нет необходимости полностью хранить таблицу памяти потому что каждая строка таблицы может быть представлена указателем на некоторую позицию исходной строки обратном bwt нет необходимости хранить таблицу или делать множество сортировок достаточно отсортировать строку один раз используя стабильную сортировку запомнить куда переместился каждый символ это даёт нам циклическую перестановку которая достаточна для того чтобы получить выходные данные символ алгоритме может быть байтом или битом или любого другого подходящего размера также нет необходимости том чтобы иметь символ конца строки вместо этого может использоваться указатель котором находится eol как если бы он существовал данном подходе выходные данные bwt должны включать себя строку окончательное значение этого указателя это означает что bwt слегка увеличивает размер данных обратное преобразование затем уменьшает их до исходного размера при данных строке указателе оно возвращает просто строку полное описание алгоритмов может быть найдено статье барроуза уилера или некотором количестве источников доступных сети примечание сортировке если вы сортируете строку используя сравнение по стандарту posix то получаете слегка отличную строку на выходе texydst ixixixxssmpps eusfxdiioiiit вместо texydst xiixixxsmppss eeusfxdioiiiit iso имеет сложные правила сравнения но данном случае точки игнорируются сравнение posix рассматривает точки как символы примечания литература burrows and wheeler block sorting lossless data compression algorithm technical report digital equipment corporation ссылки юрий лифшиц преобразование берроуза вилера researchindex page for bwt paper at penn state bwt paper hosted at dec article by mark nelson on the bwt article by mark nelson data compression with the burrows wheeler transform преобразование бэрроуза уилера на сайте вгпу категория алгоритмы сжатия без потерь