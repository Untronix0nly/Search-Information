полиморфизм компьютерного вируса много форма внешний вид специальная техника используемая авторами вредоносного программного обеспечения для снижения уровня обнаружения вредоносной программы классическими антивирусными продуктами описание метода полиморфизм заключается формировании программного кода вредоносной программы на лету уже во время исполнения при этом сама процедура формирующая код также не должна быть постоянной видоизменяется при каждом новом заражении зачастую изменение кода достигается путём добавления операторов не изменяющих алгоритм работы программного кода например оператор nop постоянное видоизменение программного кода вредоносной программы не позволяет создать универсальную сигнатуру для данного образца вредоносной программы на сегодняшний день для противодействия данному методу антивирусном программном обеспечении применяются такие технологии как эвристический анализ эмуляция история первый известный полиморфный вирус был написан марком вашбёрном mark washburn вирус который назывался был создан году более известный полиморфный вирус был внедрён году болгарским взломщиком dark avenger псевдоним создавшим mte mutation engine на сегодняшний день известно большое количество вредоносных программ которые используют именно полиморфизм качестве средства для затруднения анализа создания сигнатуры пример алгоритма алгоритм который использует переменные но не использует переменную может оставаться работоспособным даже если добавить множество различных команд которые будут изменять содержимое переменной исходный алгоритм start goto decryption_code encrypted lots of encrypted code decryption_code encrypted loop xor cryptokey goto loop if not decryption_code goto encrypted cryptokey тот же самый алгоритм но добавлением операций изменяющих переменную start goto decryption_code encrypted lots of encrypted code decryption_code encrypted loop xor cryptokey goto loop if not decryption_code goto encrypted cryptokey код внутри секции encrypted может затем обрабатывать код между секциями decryption_code cryptokey удалять ненужные операции меняющие переменную перед тем как устройство будет вновь использовано он может добавить новые ненужные операции меняющие переменную или даже полностью изменить алгоритм но так что он будет выполнять те же функции пример кода на ассемблере один из самых простых способов реализации шифрования основного тела вируса её побайтное шифрование операцией xor mov cx code_length mov si offset begin_code mov al xor_key xor si cx al расшифровываем байт loop берем следующий байт jmp si begin_code тут находится зашифрованная часть тела вируса именно она ответственна за заражение новых файлов формирование новой процедуры расшифровки при этом эта же часть тела вируса новом файле должна быть заново зашифрована но уже другим ключом новая процедура расшифровки может формироваться помощью следующих простых действий какая либо инструкция заменяется на другую ие но делающую то же самое скажем add eax может быть заменена на sub eax код mov ax bx может быть заменен на push bx pop ax перестановка обмен местами инструкций порядок следования которых неважен добавление мусорных команд способы защиты для эффективной защиты от полиморфных вредоносных программ необходимо применение проактивных методов антивирусной защиты таких как эвристический анализ эмуляция однако эвристический анализ эмуляция не могут гарантировать го обнаружения полиморфных вредоносных программ связи чем рекомендуется использование hips см также полиморфные генераторы код полиморфизм информатика ссылки mutation engine категория компьютерные вирусы