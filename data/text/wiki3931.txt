коне чный автома абстрактный автомат число возможных внутренних состояний которого конечно существуют различные способы задания алгоритма конечного автомата например конечный автомат может быть задан виде упорядоченной пятерки элементов некоторых множеств где входной алфавит конечное множество входных символов из которого формируются входные слова воспринимаемые конечным автоматом множество внутренних состояний начальное состояние множество заключительных или конечных состояний функция переходов определенная как отображение такое что то есть значение функции переходов на упорядоченной паре состояние входной символ или пустая цепочка есть множество всех состояний которые из данного состояния возможен переход по данному входному символу или пустой цепочке принято полагать что конечный автомат начинает работу состоянии последовательно считывая по одному символу входного слова цепочки входных символов считанный символ переводит автомат новое состояние соответствии функцией переходов читая входную цепочку символов делая переходы из состояния состояние автомат после прочтения последнего символа входного слова окажется некотором состоянии если это состояние является заключительным то говорят что автомат допустил слово конечные автоматы широко используются на практике например синтаксических лексических анализаторах тестировании программного обеспечения на основе моделей другие способы описания диаграмма состояний или иногда граф переходов графическое представление множества состояний функции переходов представляет собой размеченный ориентированный граф вершины которого состояния ка дуги переходы из одного состояния другое метки дуг символы по которым осуществляется переход из одного состояния другое если переход из состояния может быть осуществлен по одному из нескольких символов то все они должны быть надписаны над дугой диаграммы таблица переходов табличное представление функции обычно такой таблице каждой строке соответствует одно состояние столбцу один допустимый входной символ ячейке на пересечении строки столбца записывается состояние которое должен перейти автомат если данном состоянии он считал данный входной символ конечные автоматы подразделяются на конечным автоматом дка называется такой автомат котором нет дуг меткой предложение не содержащее ни одного символа из любого состояния по любому символу возможен переход не более чем одно состояние конечный автомат нка является обобщением автоматов может достигаться двумя способами либо могут существовать переходы помеченные пустой цепочкой либо из одного состояния могут выходить несколько переходов помеченных одним тем же символом файл дка jpg конечный автомат файл нка jpg автомат пустыми переходами файл нка без jpg автомат переходами из одного состояния помеченными одним тем же символом если рассмотреть случай когда автомат задан следующим образом где множество начальных состояний автомата такое что то появляется третий признак наличие нескольких начальных стартовых состояний автомата теорема детерминизации утверждает что для любого конечного автомата может быть построен эквивалентный ему конечный автомат два конечных автомата называют эквивалентными если их языки совпадают однако поскольку количество состояний эквивалентном дка худшем случае растёт экспоненциально ростом количества состояний исходного нка на практике подобная детерминизация не всегда возможна кроме того конечные автоматы выходом общем случае не поддаются детерминизации силу последних двух замечаний несмотря на бо льшую сложность конечных автоматов для задач связанных обработкой текста преимущественно применяются именно нка автоматы регулярные языки для конечного автомата можно определить язык множество слов алфавите который он допускает так называются слова чтение которых переводит автомат из начального состояния одно из заключительных состояний теорема клини утверждает что язык является регулярным тогда только тогда когда он допускается некоторым конечным автоматом используемым этом языке языки язык функциональных схем sfc sequential function chart графический язык широко используется для промышленных логических контроллеров плк sfc программа описывается виде схематической шагов объединенных переходами разработка моделей использованием конечных автоматов конечные автоматы позволяют построить модели систем параллельной обработки однако чтобы изменить число параллельных процессов такой модели требуется внести существенные изменения саму модель кроме того попытка разработки сложной модели на конечном автомате приведет быстрому росту числа состояний автомата что итоге сделает разработку такой модели крайне утомительным занятием как было отмечено выше последнюю проблему можно решить если использовать автомат что может делать конечный автомат машина ответ дается различных терминах зависимости от того является ли автомат соответственно машина автономным или нет автономный конечный автомат начиная некоторого такта может лишь генерировать периодическую состояний соответственно машина выходных символов если эта состоит лишь из одного символа то это означает что за конечное число тактов автомат достигает равновесного состояния если же эта содержит несколько символов это означает что автомат последовательно проходит состояния соответствующие этим символам затем работа автомата неограниченно долго периодически повторяется более того какова бы ни была периодическая состояний конечной длины всегда может быть построен автономный конечный автомат который начиная уже со второго такта генерирует эту ничего иного кроме периодического повторения одного того же состояния или конечной состояний автономный автомат делать не может однако связи тем что выполнение заданного цикла операций типично для многих областей современной техники динамические системы которые приемлемой идеализации можно рассматривать как автономный автомат имеют широкое применение классическим примером могут служить автоматы куклы выполнявшие сложные действий например пишущие на бумаге определенный текст играющие на рояле заранее установленные пьесы современным примером служат многие станки автоматы автоматические линии системы автоматического управления циклическими производствами если автомат не автономен то есть состояние входа изменяется от такта такту то ответ на вопрос что может делать что не может делать конечный автомат можно дать разных терминах например ответ можно сформулировать на языке представления событий действительно неавтономный конечный автомат или машина лишь преобразуют входные символов состояний или выходных символов сказать что может что не может делать конечный автомат значит выяснить какие преобразования возможны конечном автомате какие невозможны но так как количество состояний соответственно выходных символов конечно этот вопрос эквивалентен такому вопросу при каких входных возникает каждое из возможных состояний или каждый из выходных символов этот последний вопрос терминах принятых теории конечных автоматов формулируется так какие события могут какие не могут быть представлены конечном автомате каждым из возможных состояний или каждым из выходных символов ответ дается теоремами клини этот ответ точный так как теоремы клини устанавливают необходимые достаточные условия представимости событий автомате именно выделяются особые множества входных символов регулярные множества факт появления входной из такого множества называется соответствующим регулярным событием теоремы клини устанавливают что конечном автомате могут быть представлены регулярные события только они таким образом на языке представления событий ответ на вопрос что может делать конечный автомат дается однозначно конечный автомат может представлять только регулярные события ряд важных множеств входных которыми часто приходится иметь дело на практике заведомо регулярны так например заведомо регулярно множество состоящее из любого конечного числа входных конечной длины множество любых периодических входных множество бесконечных которое содержит заданные конечные на протяжении нескольких последних тактов общем случае если каким либо произвольным способом задано бесконечное множество входных то остается открытым вопрос том регулярно ли это множество дело том что понятие регулярного множества вводится индуктивно то есть устанавливается алгоритм построения любых регулярных множеств однако не существует достаточно эффективного способа решения обратной задачи то есть установления того является ли каждое заданное множество регулярным хотя теоремы клини отвечают на вопрос том что может делать конечный автомат но отвечают они на этот вопрос неэффективно сделаны первые попытки построения иных языков на которых ответ может быть дан эффективно эта проблема языка играющая кардинальную роль получении эффективного ответа на вопрос что может что не может делать конечный автомат имеет решающее значение для первых этапов синтеза автомата то есть для ответа на второй из выше вопросов если расширить класс динамических систем которые мы определили терминами конечный автомат машина включением бесконечной памяти моделью бесконечной памяти может быть например бесконечная лента для хранения символов или бесконечное число состояний то для динамических систем этого более широкого класса абстрактные системы этого класса называют машинами тьюринга ответ на вопрос что они могут делать значительно проще они могут реализовать любой наперед заданный алгоритм при этом само понятие алгоритма трактуется современной математике как реализация вычисления значений какой либо рекурсивной функции столь однозначный четкий ответ на вопрос что может делать машина тьюринга дает возможность положить понятие машине тьюринга основу определения понятия алгоритма алгоритмом называется любой процесс который может быть осуществлен на конечном автомате дополненном бесконечной памятью то есть алгоритмически полных машинах на машине тьюринга на машине поста др примечания см также автомат мили автомат мура jflap программа симулятор автоматов машины тьюринга грамматик автоматное sequential function chart компилятор транслятор сети петри секвенциальная логика логика таблица принятия решений литература серебряков галочкин гончар фуругян теория реализация языков мз пресс изд isbn теория автоматов якубайтис васюкевич гобземис зазнова курмит лоренц петренко чапенко теория вероятностей математическая статистика теоретическая кибернетика винити url http www mathnet ru php getft phtml jrnid intv paperid what fullt option_lang rus применение конечных автоматов для решения задач автоматизации глушков синтез цифровых автоматов гифмл ссылки дехтярь введение схемы автоматы алгоритмы open source генератор конечных автоматов на языках java по xml файлам описания конечные автоматы подзоров курс лекции по теории алгоритмов категория формальные методы