md алгоритм хеширования разработанный профессором рональдом ривестом из массачусетского института massachusetts institute of technology mit году предназначен для создания отпечатков или дайджестов сообщения произвольной длины последующей проверки их подлинности широко применялся для проверки целостности информации хранения хешей паролей история md один из серии алгоритмов по построению дайджеста сообщения разработанный профессором рональдом ривестом из массачусетского института был разработан году как более надёжный вариант предыдущего алгоритма md описан rfc позже гансом доббертином были найдены недостатки алгоритма md году берт ден бур bert den boer антон босселарс antoon bosselaers показали что алгоритме возможны псевдоколлизии когда разным векторам соответствуют одинаковые дайджесты для входного сообщения году ганс доббертин hans dobbertin объявил коллизии алгоритме уже то время было предложено использовать другие алгоритмы хеширования такие как whirlpool sha или ripemd из за небольшого размера хеша бит можно рассматривать birthday атаки марте года был запущен проект md crk целью обнаружения уязвимостей алгоритма используя birthday атаки проект md crk закончился августа года когда ван сяоюнь wang xiaoyun фэн дэнго feng dengguo лай сюэцзя lai xuejia юй хунбо yu hongbo обнаружили уязвимости алгоритме марта года арьен ленстра ван сяоюнь бенне де вегер построение двух документов различными открытыми ключами одинаковым хешем md марта года исследователь властимил клима vlastimil klima опубликовал алгоритм который может найти коллизии за одну минуту на обычном компьютере метод получил название туннелирование конце года us cert призвал разработчиков программного обеспечения владельцев веб сайтов пользователей прекратить использовать md любых целях так как исследования ненадёжность этого алгоритма декабря года тао се tao xie фэн дэнго feng dengguo впервые представили коллизию сообщений длиной один блок бит ранее коллизии были найдены для сообщений длиной два блока более позднее марк стивенс marc stevens повторил успех опубликовав блоки одинаковым хешем md также алгоритм для получения таких коллизий году был опубликован информационный документ rfc он признаёт алгоритм хеширования md небезопасным для некоторых целей рекомендует отказаться от его использования алгоритм md схема работы алгоритма md на вход алгоритма поступает входной поток данных хеш которого необходимо найти длина сообщения измеряется битах может быть любой том числе нулевой запишем длину сообщения это число целое неотрицательное кратность каким либо числам необязательна после поступления данных идёт процесс подготовки потока вычислениям ниже приведены шагов алгоритма шаг выравнивание потока сначала концу потока дописывают единичный бит затем добавляют некоторое число нулевых бит такое чтобы новая длина потока стала сравнима по модулю выравнивание происходит любом случае даже если длина исходного потока уже сравнима шаг добавление длины сообщения конец сообщения дописывают битное представление длины данных количество бит сообщении до выравнивания сначала записывают младшие байта затем старшие если длина превосходит то дописывают только младшие биты эквивалентно взятию по модулю после этого длина потока станет кратной вычисления будут основываться на представлении этого потока данных виде массива слов по бит шаг инициализация буфера для вычислений переменных размером по бита задаются начальные значения числами порядок байтов little endian сначала младший байт ab cd ef efcdab fe dc ba badcfeh этих переменных будут храниться результаты промежуточных вычислений начальное состояние abcd называется вектором определим ещё функции константы которые нам понадобятся для вычислений потребуются функции для четырёх раундов введём функции от трёх параметров слов результатом также будет слово раунд раунд раунд раунд где побитовые логические операции xor and or not соответственно определим таблицу констант элементная таблица данных построенная следующим образом каждый битный блок проходит этапа вычислений по раундов для этого блок представляется виде массива из слов по бита все раунды однотипны имеют вид abcd определяемый как где номер битного слова из текущего битного блока сообщения циклический сдвиг влево на бит полученного битного аргумента число задается отдельно для каждого раунда шаг вычисление цикле заносим блок данных элемент из массива битных блоков сохраняются значения оставшиеся после операций над предыдущими блоками или их начальные значения если блок первый aa bb cc dd этап abcd xk ti заменяется на символ кодом приводит полному изменению хеша такое свойство алгоритма называется лавинным эффектом md md bf afe ce пример md хеша для нулевой строки md cd ecf криптоанализ на данный момент существуют несколько видов взлома хешей md подбора сообщения заданным хешем перебор по словарю brute force rainbowcrack коллизия хеш функции при этом методы перебора по словарю brute force могут использоваться для взлома хеша других хеш функций небольшими изменениями алгоритма отличие от них rainbowcrack требует предварительной подготовки радужных таблиц которые создаются для заранее определённой хеш функции поиск коллизий специфичен для каждого алгоритма атаки переборного типа для полного перебора или перебора по словарю можно использовать программы passwordspro md bfcpf john the ripper для перебора по словарю существуют готовые словари основным недостатком такого типа атак является высокая вычислительная сложность rainbowcrack ещё один метод нахождения прообраза хеша из заданного множества он основан на генерации цепочек хешей чтобы по получившейся базе вести поиск заданного хеша хотя создание радужных таблиц занимает много времени памяти последующий взлом производится очень быстро основная идея данного метода достижение компромисса между временем поиска по таблице занимаемой памятью коллизии md коллизия хеш функции это получение одинакового значения функции для разных сообщений идентичного начального буфера отличие от коллизий псевдоколлизии определяются как равные значения хеша для разных значений начального буфера причём сами сообщения могут совпадать или отличаться md вопрос коллизий не решается году ганс доббертин нашёл псевдоколлизии md используя определённые векторы отличные от стандартных оказалось что можно для известного сообщения построить второе такое что оно будет иметь такой же хеш как исходное точки зрения математики это означает md iv md iv где iv начальное значение буфера различные сообщения например если взять начальное значение буфера ac ba задать входное сообщение aa ddabe abff bbf da fb fae bb ed то добавляя число определённому разрядному слову блочном буфере можно получить второе сообщение таким же хешем ханс доббертин представил такую формулу тогда md iv md iv bf af ce cf de году китайские исследователи ван сяоюнь wang xiaoyun фэн дэнго feng dengguo лай сюэцзя lai xuejia юй хунбо yu hongbo объявили об обнаруженной ими уязвимости алгоритме позволяющей за небольшое время час на кластере ibm находить коллизии году ван сяоюнь юй хунбо из университета шаньдуна китае опубликовали алгоритм который может найти две различные байт которые дают одинаковый md хеш одна из таких пар отличающиеся разряды выделены dd eec aff fcab eab eb fb ad cdc fd dbd bae dacd dd da fd cda ee ce bcb ff dd eec aff fcab eab eb fb ad cdc fd dbd bae dacd dd da fd cda ee ce bcb ff каждый из этих блоков даёт md хеш равный fb bc aef eb году чешский исследователь властимил клима опубликовал алгоритм позволяющий находить коллизии на обычном компьютере любым начальным вектором при помощи метода названного им туннелирование алгоритм md использует итерационный метод меркла дамгора поэтому становится возможным построение коллизий одинаковым заранее выбранным префиксом аналогично коллизии получаются при добавлении одинакового суффикса двум различным префиксам имеющим одинаковый хеш году было показано что для любых двух заранее выбранных префиксов можно найти специальные суффиксы которыми сообщения будут иметь одинаковое значение хеша сложность такой атаки составляет всего операций подсчета хеша метод ван сяоюня юй хунбо метод ван сяоюня юй хунбо использует тот факт что md построен на итерационном методе меркла дамгора поданный на вход файл сначала дополняется так чтобы его длина была кратна байтам после этого он делится на блоки по байта каждый далее вычисляется байтных состояний по правилу где некоторая фиксированная функция начальное состояние называется вектором метод позволяет для заданного вектора найти две пары такие что важно отметить что этот метод работает для любого вектора не только для вектора используемого по стандарту эта атака является разновидностью атаки которая отличие от других атак этого типа использует целочисленное вычитание не xor качестве меры разности при поиске коллизий используется метод модификации сообщений сначала выбирается произвольное сообщение далее оно модифицируется по некоторым правилам статье после чего вычисляется дифференциал хеш функции причём вероятностью применяется функция сжатия для проверки условий коллизии далее выбирается произвольное модифицируется вычисляется новый дифференциал равный нулю вероятностью равенство нулю дифференциала хеш функции как раз означает наличие коллизии оказалось что найдя одну пару можно менять лишь два последних слова тогда для нахождения новой пары требуется всего около операций хеширования применение этой атаки md позволяет найти коллизию меньше чем за секунду она также применима другим хеш функциям таким как ripemd haval примеры использования ранее считалось что md позволяет получать относительно надёжный идентификатор для блока данных на данный момент данная хеш функция не рекомендуется использованию так как существуют способы нахождения коллизий приемлемой вычислительной сложностью свойство уникальности хеша широко применяется разных областях стоит отметить что приведенные примеры относятся другим хеш функциям помощью md проверяли целостность подлинность скачанных файлов так некоторые программы поставляются вместе со значением контрольной суммы например пакеты для инсталляции свободного по md использовался для хеширования паролей системе unix каждый пользователь имеет свой пароль его знает только пользователь для защиты паролей используется хеширование предполагалось что получить настоящий пароль можно только полным перебором при появлении unix единственным способом хеширования был des data encryption standard но им могли пользоваться только жители сша потому что исходные коды des нельзя было вывозить из страны во freebsd решили эту проблему пользователи сша могли использовать библиотеку des остальные пользователи имеют метод разрешённый для экспорта поэтому freebsd стали использовать md по умолчанию некоторые linux системы также используют md для хранения паролей многие системы используют базы данных для аутентификации пользователей существует несколько способов хранения паролей пароли хранятся как есть при взломе такой базы все пароли станут известны хранятся только хеши паролей найти пароли можно используя заранее подготовленные таблицы хешей такие таблицы составляются из хешей простых или популярных паролей каждому паролю добавляется несколько случайных символов их называют соль результат хешируется полученный хеш вместе солью сохраняются открытом виде найти пароль помощью таблиц таким методом не получится существует несколько надстроек над md md hmac keyed hashing for message authentication хеширование ключом для аутентификации сообщения алгоритм позволяет хешировать входное сообщение некоторым ключом такое хеширование позволяет подпись md base здесь полученный md хеш кодируется алгоритмом base md unix алгоритм вызывает тысячу раз стандартный md для усложнения процесса также известен как md crypt примечания литература категория хеш функции