pop протокол почтового отделения версия стандартный интернет протокол прикладного уровня используемый клиентами электронной почты для получения почты удалённого сервера по tcp соединению pop imap internet message access protocol наиболее интернет протоколы для извлечения почты практически все современные клиенты серверы электронной почты поддерживают оба стандарта протокол pop был разработан нескольких версиях нынешним стандартом является третья версия pop большинство поставщиков услуг электронной почты такие как hotmail gmail yahoo mail также поддерживают imap pop предыдущие версии протокола pop pop устарели альтернативным протоколом для сбора сообщений почтового сервера является imap общие сведения pop поддерживает простые требования загрузи удали для доступа удалённым почтовым ящикам хотя большая часть pop клиентов предоставляет возможность оставить почту на сервере после загрузки использующие pop клиенты обычно соединяются извлекают все письма сохраняют их на компьютере как новые сообщения удаляют их сервера после чего разъединяются другие протоколы частности imap предоставляют более полный комплексный удалённый доступ типичным операциям почтовым ящиком многие клиенты электронной почты поддерживают как pop так imap однако гораздо меньше интернет провайдеров поддерживают imap pop сервер прослушивает общеизвестный порт шифрование связи для pop запрашивается после запуска протокола помощью либо команды stls если она поддерживается либо pop которая соединяется сервером используя tls или ssl по tcp порту доступные сообщения клиента фиксируются при открытии почтового ящика pop сессией определяются количеством сообщений для сессии или по желанию помощью уникального идентификатора присваиваемого сообщению pop сервером этот уникальный идентификатор является постоянным уникальным для почтового ящика позволяет клиенту получить доступ одному тому же сообщению разных pop сессиях почта извлекается помечается для удаления помощью номера сообщения при выходе клиента из сессии помеченные сообщения удаляются из почтового ящика история pop pop определён rfc pop rfc первоначальная спецификация pop была представлена rfc нынешняя же описана rfc обновлена механизмом расширения rfc механизмом аутентификации rfc версии pop был назначен порт изначальная спецификация pop поддерживала только незашифрованный механизм входа систему user pass или управление доступом rhosts на данный момент pop поддерживает различные методы аутентификации для предоставления разных уровней защиты от незаконного доступа почте большинство из них предоставлены механизмами расширения pop клиенты pop поддерживают методы sasl через расширение auth рамках проекта массачусетского института афина также был введён метод на основе кербероса rfc ввёл apop основной протокол apop протокол вида запрос ответ использующий функцию хэширования md среди клиентов реализующих apop можно выделить mozilla thunderbird opera mail eudora windows live mail powermail apple mail было высказано неофициальное предложение для спецификации pop рабочей реализацией сервера это предложение добавило основные функции управления папками поддержку составных сообщений также управление флагами сообщений однако никакого прогресса pop не наблюдается расширения механизм расширений был предложен rfc для размещения новых расширений также организованного объявления поддержке опциональных команд таких как top uidl rfc не намеревались поощрять расширения подтвердили что роль pop заключается предоставлении простой поддержки основном для требования загрузи удали расширения выводятся списком командой capa за исключением apop все опциональные команды были включены изначальный набор возможностей как стандарте esmtp rfc возможности начинающиеся являются локальными starttls расширение starttls позволяет использовать tls transport layer security или ssl secure sockets layer для связи помощью команды stls по стандартному pop порту некоторые клиенты сервера используют метод альтернативного порта работающий tcp портом pop sdps британский провайдер demon internet ввёл расширение pop позволяющее иметь несколько учётных записей для каждого домена ставшее известным как sdps standard dial up pop service для доступа каждой учётной записи имя пользователя включает себя имя хоста например john hostname или john hostname google apps используют тот же метод сравнение imap клиенты которые оставляют почту на серверах обыкновенно используют команду uidl для получения текущего соответствия между количеством сообщений сообщением определяемым его уникальным идентификатором идентификатор произволен может повторяться если на ящике есть идентичные сообщения напротив imap использует битный уникальный идентификатор uid присваиваемый сообщениям по возрастанию но не обязательно подряд по мере их получения при извлечении новых сообщений imap клиенты запрашивают uid больший чем наивысшее значение uid среди всех ранее извлечённых сообщений то время как pop клиент должен выбирать из всей карты uidl для больших почтовых ящиков это может потребовать значительной обработки mime служит качестве стандарта для вложений не ascii текста электронных сообщениях хотя ни pop ни smtp не требуют mime сообщения по существу все не ascii сообщения идут формате mime поэтому pop клиенты должны также понимать использовать mime imap по определению принимает mime форматированные сообщения состояния сеанса протоколе pop предусмотрено состояния сеанса авторизация клиент проходит процедуру аутентификации транзакция клиент получает информацию состоянии почтового ящика принимает удаляет почту обновление сервер удаляет выбранные письма закрывает соединение команды протокола имя аргументы ограничения возможные ответы apop имя digest её поддержка не является обязательной ok maildrop has message err password supplied for имя is incorrect user имя ok name is valid mailbox err never heard of mailbox name pass пароль работает после успешной передачи имени почтового ящика ok maildrop locked and ready err invalid password err unable to lock maildrop dele сообщение доступна после успешной аутентификации ok message deleted err no such message list сообщение доступна после успешной аутентификации ok scan listing follows err no such message noop доступна после успешной аутентификации ok retr сообщение доступна после успешной аутентификации ok message follows err no such message rset доступна после успешной аутентификации ok stat доступна после успешной аутентификации ok top сообщение количество строк доступна после успешной аутентификации ok octets err no such message quit ok apop команда служит для передачи серверу имени пользователя зашифрованного пароля digest имя строка указывающая имя почтового ящика digest хеш сумма временной метки паролем пользователя вычисленная по алгоритму md случае поддержки этой команды временная метка получается при соединении сервером user передаёт серверу имя пользователя имя строка указывающая имя почтового ящика pass передаёт серверу пароль почтового ящика пароль пароль для почтового ящика dele сервер помечает указанное сообщение для удаления сообщения помеченные на удаление реально удаляются только после закрытия транзакции закрытие транзакций происходит обычно после посыла команды quit кроме этого например на серверах закрытие транзакций может происходить по истечении определённого времени установленного сервером сообщение номер сообщения list если был передан аргумент то сервер выдаёт информацию об указанном сообщении если аргумент не был передан то сервер выдаёт информацию обо всех сообщениях находящихся почтовом ящике сообщения помеченные для удаления не перечисляются сообщение номер сообщения необязательный аргумент noop сервер ничего не делает всегда отвечает положительно retr сообщение сервер передаёт сообщение указанным номером сообщение номер сообщения rset этой командой производится откат транзакций внутри сессии например если пользователь случайно пометил на удаление какие либо сообщения он может убрать эти пометки отправив эту команду stat сервер возвращает количество сообщений почтовом ящике размер почтового ящика октетах сообщения помеченные как удалённые при этом не учитываются top сервер возвращает заголовки указанного сообщения пустую строку указанное количество первых строк тела сообщения сообщение номер сообщения количество строк сколько строк нужно вывести пример сессии это пример сессии поддержкой зашифрованных паролей apop rfc ok pop server ready apop mrose bac ecc fb ok mrose maildrop has messages octets stat ok list ok messages octets retr ok octets dele ok message deleted retr ok octets dele ok message deleted quit ok dewey pop server signing off maildrop empty вариант начала сессии при котором пароль передается открытым текстом user mrose ok user accepted pass mrosepassword ok pass accepted примечания ссылки описание протокола рорз список unix демонов протокол pop на примерах ссылки на упоминавшиеся rfc rfc post office protocol rfc post office protocol version rfc post office protocol version rfc post office protocol version std rfc some observations on implementations of the post office protocol pop rfc imap pop authorize extension for simple challenge response rfc pop url scheme rfc pop extension mechanism rfc using tls with imap pop and acap rfc the sys and auth pop response codes rfc the post office protocol pop simple authentication and security layer sasl authentication mechanism литература категория электронная почта категория протоколы прикладного уровня