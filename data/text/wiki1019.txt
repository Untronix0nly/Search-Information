оберон язык высокого уровня разработанный никлаусом виртом для исполнения программ на котором предназначена одноимённая операционная система авторами которой являются никлаус вирт системы среды программы написанные на языке оберон требуют определённой поддержки во время выполнения им необходим динамический загрузчик централизованно выполняемый автоматический сборщик мусора для этого программам на языке оберон нужна специальная операционная среда обычным способом её реализации является добавление систему набора библиотек реализующих необходимые компоненты хотя вообще говоря операционной среде вовсе не обязательно нужна отдельная операционная система она сама по себе может представлять собой операционную систему таковы системы native oberon для первоначального оберона для активного оберона на данный момент существуют компиляторы оберон байт код виртуальной java машины cli для виртуальной машины net операционные системы среды для исполнения программ на языках семейства оберон развившихся из первоначальной системы оберон являются eth oberon blackbox component builder winoberon др на основе оберона были разработаны проекты оберон оберон другие простота оберона наличие исходных текстов оригинальной реализации позволяют легко адаптировать его для специальных классов задач но все эти обероны очень близки между собой поскольку первоначальный оберон очень прост история языка основой для оберона послужил язык модула выросший из паскаля по словам вирта первоначально систему хотели писать непосредственно на модуле но пришли выводу необходимости её доработки сокращения что привело появлению оберона целью проекта project oberon никлауса вирта юрга гуткнехта годы было создание нуля обозримой надёжной операционной системы для рабочей станции для реализации этого проекта году никлаусом виртом был спроектирован язык высокого уровня общего назначения также названный оберон году швейцарской высшей технической школе цюриха eth была выпущена первая реализация оберона для процессоров семейства ns он был создан качестве компонента операционной среды оберон этот компилятор требует менее кбайт памяти состоит из модулей общим объёмом около строк сам себя компилирует за секунд на компьютере процессором ns тактовая частота мгц язык оберон нововведения язык сохранил основные черты синтаксиса модулы был объектным расширением это позволило отказаться от механизма вариантных записей модулы являющихся отступлением от первоначальной строгой статической типизации что дало возможность ввести механизм автоматического управления памятью сборку мусора из языка исключена возможность освобождения динамически выделенной памяти помощью особого оператора вместо него сама среда исполнения содержит модуль возвращающий неиспользуемую память системе автоматическое управление памятью является средством повышения надёжности программ динамическими структурами данных так как исключает человеческие ошибки свойственные например таким языкам как упрощение синтаксиса чтобы добиться наибольшей надёжности трансляции было предпринято значительное упрощение языка за счёт его отказа от средств которые были сочтены ненужными исходя из опыта разработки реализации применения других языков либо усложняли компилятор без достаточного оправдания точки зрения либо были достаточно сложны чтобы быть отправленными во внешние библиотеки либо плохо совмещались механизмами модульности автоматического управления памятью записи вариантами перечислимые типы типы диапазоны множества общего вида беззнаковый целый тип локальные модули модули определений списки экспорта оператор for прежний вариант оператора with специальный синтаксис определения главной программы рудиментарные средства поддержки параллельного имевшиеся модуле не вошли язык так как он обслуживал операционную систему целях упрощения отказались от обработки исключений было упрощено описание массивов индексы массивов могут быть только целочисленными всегда начинаются нуля подобно языку си ограничено использование указателей указатели могут существовать только на записи массивы списках импорта указывается только импортируемый модуль при использовании импортированных имён требуется обязательная квалификация явное указание имени модуля экспортёра статье от модулы оберону вирт подробно пояснил причины удаления каждого из элементов из соображений достаточного минимума язык не были включены качестве явного синтаксического понятия методы процедуры функции связанные типом так как этот механизм самом общем виде легко смоделировать создавая объектах записях языке оберон поля процедурного типа присваивая им процедуры соответствующие методам таким образом обероне минимальными средствами поддерживается объектно ориентированное для упрощения процесса трансляции кода ускорения этого процесса благодаря внесённым изменениям оберон стал синтаксически проще описание его синтаксиса поместилось на одной странице полное описание языка занимает около страниц что вдвое меньше чем описание модулы оберон является если не минимальным то во всяком случае одним из самых малых по объёму универсальных языков высокого уровня эпиграфом описанию оригинального оберона было выбрано высказывание эйнштейна делай настолько просто насколько возможно но не проще этого синтаксис оберона рбнф определён следующих предложениях рбнф модуль module идент списокимпорта послобъявл begin послоператоров end идент списокимпорта import идент идент идент идент послобъявл const объявлконст type объявлтипа var объявлперем объявлпроц объявлконст идентопр конствыраж объявлтипа идентопр тип объявлперем списокидент тип объявлпроц procedure приемник идентопр формальныепарам послобъявл begin послоператоров end идент procedure приемник идентопр формальныепарам формальныепарам секцияфп секцияфп уточнидент секцияфп var идент идент тип приемник var идент идент тип уточнидент array конствыраж конствыраж of тип record уточнидент списокполей списокполей end pointer to тип procedure формальныепарам списокполей списокидент тип послоператоров оператор оператор оператор обозначение выраж обозначение списоквыраж if выраж then послоператоров elsif выраж then послоператоров else послоператоров end вариант else послоператоров end while выраж do послоператоров end repeat послоператоров until выраж loop послоператоров end with охрана do послоператоров end exit return выраж вариант меткиварианта меткиварианта послоператоров меткиварианта конствыраж конствыраж охрана уточнидент уточнидент конствыраж выраж выраж простоевыраж отношение простоевыраж простоевыраж слагаемое оперслож слагаемое слагаемое множитель оперумн множитель множитель обозначение списоквыраж число символ строка nil множество множитель множество элемент элемент элемент выраж выраж отношение in is оперслож or оперумн div mod обозначение уточнидент идент списоквыраж уточнидент списоквыраж выраж выраж списокидент идентопр идентопр уточнидент идент идент идентопр идент основные элементы программа на обероне представляет собой набор модулей общем виде модуль имеет вид module имя import списокимпорта определения begin операторы end имя список импорта определяет из каких модулей будут импортированы внешние имена определения включают определения типов процедур функций переменных констант при этом определения имён отмеченных звёздочкой экспортируются данным модулем то есть будут видны другим модулям импортирующим данный обероне допустимо также помечать имена знаком минус этом случае они экспортируются режиме только для чтения тело модуля исполняется при его загрузке компонентном паскале внутри тела модуля разделе begin end появилась возможность добавить секцию close begin операторы close операторы end имя здесь операторы расположенные между begin close выполняются при загрузке модуля операторы расположенные между close end при выгрузке его из памяти такое расширение было сочтено полезным для компонентных программ которые загружают выгружают модули динамически создаваемые программистом типы данных ограничены следующим набором типы массивы array типы записи record процедурные типы procedure типы указатели pointer указатель может быть объявлен только на массив или запись синтаксис внутренней части программы достаточно традиционен прост язык поддерживает традиционный набор конструкций условный оператор if оператор выбора case циклы предусловием while постусловием repeat until безусловный loop подобно модуле прописные строчные буквы идентификаторах различаются все слова пишутся большими буквами все языковые конструкции кроме цикла repeat until заканчиваются ключевым словом end допускают расположение внутри нескольких операторов без использования составного оператора begin end естественно как модуле нет безусловных переходов парадигма объектно поддерживается механизмом расширения записей языке нет отдельного ключевого слова для описания классов вроде class или object сочтено что обычного понятия тип запись вполне достаточно по сути каждый тип запись это описание класса поля записи это данные члены класса исходном обероне методов процедур функций связанных классом нет вообще механизм методов может быть использован путём объявления записи полей процедурного типа которым при создании экземпляра класса присваиваются конкретные процедуры вызов таких процедур производится традиционным способом обращения полю записи по умолчанию процедура не знает об экземпляре класса для которого она была вызвана нет механизма аналогичного this или java если такие сведения ей необходимы ссылка на экземпляр должна быть передана явно например через параметр отсутствие явно описываемых методов было одним из качеств исходного оберона вызвавшего критику привыкших традиционным гибридным языкам программистов другой стороны предлагаемый обероном механизм позволяет реализовать всё что реализуемо традиционными средствами языков методами даже более того обероне каждый экземпляр класса может иметь собственный вариант метода значение поля процедурного типа тогда как при описании методов как части класса все экземпляры работают одним вариантом метода обероне методы были всё таки введены методы описываются отдельно от типа запись указанием типа которым они связаны новый тип запись может быть объявлен как расширение существующего этом случае тип который расширяется указывается описании записи скобках после ключевого слова record расширенный тип автоматически получает все поля расширяемого типа обероне связывается со всеми процедурами связанными расширяемым типом процедуры связанные новым типом могут иметь ту же сигнатуру что процедуры связанные расширяемым типом таким образом обеспечивается переопределение методов порождённых типах компонентном паскале целью обеспечения полного статического контроля за иерархий наследования этим восстанавливая принцип тотальной статической типизации отличающий первоначальный оберон записи по умолчанию не являются расширяемыми методы не могут быть переопределены чтобы контролировать расширение записей переопределение методов используются специально введённые ключевые слова extensible abstract limited empty при этом вновь вводимые методы должны маркироваться ключевым словом new ср обязательное определение вновь вводимых переменных концепции компонентное оберон нацелен на компонентно ориентированную разработку программного обеспечения инкапсуляция поддерживается исключительно на уровне модуля все типы объявленные внутри модуля друг для друга абсолютно прозрачны из других модулей доступно то что объявлено при определении как экспортируемое полиморфизм обеспечивается за счёт механизма методов процедурные поля обероне методы обероне ведут себя как виртуальные терминологии большинства гибридных объектно ориентированных языков также расширенной конструкцией with позволяющей выполнять различные группы операторов зависимости от того какому из расширенных типов относится её аргумент языке отсутствует специальный механизм конструкторов рекомендуемым методом создания инициализации объектов является описание порождающих модулей процедур традиционной терминологии ооп factory программа такой технологии представляет собой набор относительно самостоятельных компонентов данном случае модулей имеющих скрытую от внешнего мира внутреннюю структуру чётко определённый интерфейс модули могут загружаться выгружаться динамически во время работы программы система предоставляет развитые средства контроля типов во время выполнения которые позволяют писать универсальные алгоритмы обработки данных не зависящие от конкретных типов этих данных например библиотека для работы субд может предоставлять методы записывающие результат запроса из базы запись произвольной структуры если набор типы полей этой записи соответствуют набору типам полей бд компонентной парадигме считается неудачным архитектурное решение связанное широким использованием наследования реализации от типов объявленных другом компоненте поскольку это приводит явлению известному как хрупкость базового типа после того как от базового типа порождено большое количество типов наследников причём часть из них может быть даже неизвестна разработчику базового типа любые изменения реализации базового типа становятся крайне рискованными так как они могут непредсказуемым образом отразиться на типах потомках известно что одной из проблем применения объектно системном является необходимость иметь группы маленьких классов которые могли бы без дополнительных накладных расходов обероне этой проблемы нет все типы определённые одном модуле видят друг друга проблем надёжностью это не создаёт так как модуль всё равно разрабатывается тестируется сопровождается как единое целое типичная система разработанная на обероне представляет собой набор модулей процедурными интерфейсами через которые модули обмениваются данными том числе объектами при этом все средства инкапсуляции действуют только межмодульном взаимодействии что делает удобным системное использованием объектов объектно ориентированное средства объектного обероне как естественное развитие средств работы записями модульной системе точнее как технический инструментарий для решения конкретной архитектурной задачи обеспечить эффективное разделение труда между различными модулями при работе динамическими типами структурами данных например работа указателями списке может быть скрыта вместе полями одном модуле определение работа конкретным наполнением элементов списка задаваться другом или чаще других этом смысле технология объектного обероне подчинена концепции модульности она здесь является скорее средством описания данных чем средством построения архитектуры приложения целом влияние оберона на другие языки по утверждению вирта разработчики языка java за несколько лет до её создания изучили исходные коды оберона частности исходные коды обероновских сборщиков мусора потом они испортили оберон синтаксисом си назвали получившееся словом java хотя от устного выступления нельзя требовать абсолютной точности формулировок но во всяком случае несомненное сходство идеологий оберона java стремление минимализму строгой типизации ограничение множественного наследования автоматическое управление памятью говорит том что здесь имеет место определённый консенсус относительно того какие средства должны составлять ядро современного языка общего назначения однако если обероне его прямых наследниках минимализм остаётся во главе угла разработчики java пошли по пути экстенсивного наращивания возможностей языка само семейство языков оберон входят также оберон оберон component pascal компонентный паскаль активный оберон oberonscript др версии языка исходная версия оберона классический оберон наиболее краткая наименьшим количеством ключевых слов синтаксических конструкций она была использована качестве базы для создания семейства языков каждый из которых расширяет классический каком либо направлении либо отличается от него некоторыми деталями оберон году никлаус вирт его ученик ныне профессор университета им иоганна кеплера линце опубликовали описание дополненного варианта оберона получившего название оберон он представляет собой уточнённую версию классического оберона дополнения внесённые оберон оформленные очень экономно заключаются следующем добавлены процедуры связанные типом допускающие переопределение для порождённых типов приблизительный аналог виртуальных методов других объектно ориентированных языках язык возвращён оператор цикла шагом for добавлена возможность экспорта описаний режиме только для чтения любопытно что несмотря на расширение языка объём формального описания синтаксиса оберона меньше чем классического оберона это произошло результате оптимизации описания синтаксиса существует оптимизирующий компилятор xds для oberon есть также компилятор языка оберон байт код виртуальной машины java java virtual machine разработанный свердловым вологда вгпу году компилятор работает windows nt генерирует файлы классов class которые могут загружаться исполняться виртуальной машиной языка java позволяет создавать приложения аплеты содержит стандартные для оберона так называемые дубовые требования библиотеки также интерфейсы для java api eth oberon eth oberon реализации которого имеются для многих вычислительных платформ oberon sa oberon sa это версия языка оберон разработанная виртом для процессора strong arm используемого беспилотном вертолете на основе опыта разработки oberon sa вирт году подготовил изменения дополнения классическому оберону для более строгой поддержки структурного чем например oberon или компонентном паскале новая версия языка получила название oberon имеется перевод the programming language oberon revision на русский язык но отношении поддержки объектно язык oberon не следует за обероном продолжает минималистичную линию классического оберона включая отсутствие поддержки процедур привязанных типам записей oberon oberon имеет следующие основные отличия от классического оберона цикле while разрешены несколько охраняемых ветвей elsif do тем самым обеспечена полная явная поддержка цикла дейкстры ранее цикл дейкстры моделировался при помощи цикла loop соответственно исключен цикл loop вместе оператором exit выход из цикла процедуре теперь может быть только одна точка выхода фиксированная конце тела процедуры return сущности перестал быть оператором превратившись такую же синтаксическую часть описания процедуры как ключевое слово procedure добавлен оператор цикла for исключено неявное приведение типа integer real типов различной разрядностью друг другу разрешены ссылки только на записи определены процедурные переменные могут ссылаться только на процедуры уточнено правило импорта экспорта экспорт переменных разрешён только для чтения спецификатор экспорта один уточнены типы данных char поддерживает множество latin integer real longreal ieee standard бита соответственно set множество целых между последнем описании языка вирт отказался от указания конкретного диапазона значений для базовых типов множество значений типов integer real longreal set теперь определяется реализацией тип char содержит стандартный набор символов standard character set австралийская компания cfb software брисбен при университете штата квинсленд разработала ide astrobe для языка oberon для arm компании nxp philips синтаксические диаграммы языка oberon также рекомендации по стилю программ на oberon языки семейства oberon компонентный паскаль component pascal оберон сразу после опубликования году рассматривался как кандидат на роль стандарта языка конференция oakwood conference croydon но практический опыт накопленный при создании больших программных комплексов выявил некоторые слабости нововведений желательность дальнейших уточнений что лишний раз подчёркивает мудрость консерватизма проявленного виртом определении классического оберона эти уточнения были предприняты варианте оберона названном компонентный паскаль опубликованном году компанией oberon microsystems образованной году учениками вирта сам вирт стал членом совета директоров как при переходе от оберона оберону эти уточнения сделаны наиболее экономно частности теперь язык полностью поддерживает методологию компонентно благодаря последнему обстоятельству компонентный паскаль на данный момент является по видимому наиболее совершенным среди прямых потомков классического оберона однако он может быть редуцирован не только подмножеству эквивалентному первоначальному оберону но другому полноценному подмножеству котором наследование переопределение методов допускается только для чисто интерфейсных типов методов определённых атрибутом abstract это обстоятельство выявляет несколько промежуточный характер оберона компонентный паскаль добавлены средства позволяющие разработчику полностью контролировать расширение экспортируемых типов переопределение методов атрибуты extensible abstract new empty также возможность ограниченного экспорта метода только для реализации добавлен блок завершения тела модуля ключевое слово close пустой метод finalize система основных элементарных типов приведена соответствие типами java введён неявный строковый тип компания oberon microsystems определившая компонентный паскаль выпустила также фреймворк blackbox component framework среду визуального blackbox component builder небольшие по размеру ресурсам целиком построенные на компонентном паскале впоследствии компилятор blackbox был встроен кросс платформенную среду denia частности для операционной системы реального времени jbed полностью написанной на компонентном паскале активный оберон active oberon zonnon эти языки уже полным основанием можно назвать не расширениями или версиями оберона языками них существенно расширен синтаксис введены конструкции для описания классических свойств property контролем чтения записи числовых типов задаваемым размером битах введена поддержка активных объектов обменивающихся сообщениями формате определяемом рбнф описанием обработка исключений см также pascal modula компонентный паскаль активный оберон примечания литература вирт никлаус построение компиляторов москва дмк пресс isbn свердлов языки методы трансляции питер isbn на английском языке martin reiser niklaus wirth programming in oberon steps beyond pascal and modula ny acm press isbn mb wirth algorithms and data structures oberon version мб wirth gutknecht project oberon the design of an operating system and compiler мб pdf wirth the programming language oberon кб wirth programming in oberon derivative of programming in modula кб ссылки официальный сайт oberon оберон технологии россии вирт долой жирные программы открытые системы язык оберон краткий путеводитель руслан богатырев мир пк октябрь мёссенбёк вирт язык оберон институт компьютерных систем eth цюрих pdf языки технологии оберон перспективы для индустрии образования орловский гу материалы секции семинара марта руслан богатырев оберон как эсперанто мир пк сентябрь путеводитель по системам оберон the programming language oberon revision категория семейство языков оберон категория программное обеспечение ethz категория языки автоматическим управлением памятью