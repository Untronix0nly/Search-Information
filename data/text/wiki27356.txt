сортировка простыми обменами сортиро вка пузырько простой алгоритм сортировки для понимания реализации этот алгоритм простейший но эффективен он лишь для небольших массивов сложность алгоритма алгоритм считается учебным практически не применяется вне учебной литературы вместо него на практике применяются более эффективные алгоритмы сортировки то же время метод сортировки обменами лежит основе некоторых более совершенных алгоритмов таких как шейкерная сортировка пирамидальная сортировка быстрая сортировка алгоритм алгоритм состоит из повторяющихся проходов по сортируемому массиву за каждый проход элементы последовательно сравниваются попарно если порядок паре неверный выполняется обмен элементов проходы по массиву повторяются раз или до тех пор пока на очередном проходе не окажется что обмены больше не нужны что означает массив отсортирован при каждом проходе алгоритма по внутреннему циклу очередной наибольший элемент массива ставится на своё место конце массива рядом предыдущим наибольшим элементом наименьший элемент перемещается на одну позицию началу массива всплывает до нужной позиции как пузырёк воде отсюда название алгоритма реализация сложность наихудший случай число сравнений теле цикла равно число сравнений заголовках циклов равно суммарное число сравнений равно число присваиваний заголовках циклов равно число обменов равно что раз больше чем сортировке выбором наилучший случай на вход подаётся уже отсортированный массив число сравнений теле цикла равно число сравнений заголовках циклов равно суммарное число сравнений равно число обменов равно особенность данного алгоритма заключается следующем после первого завершения внутреннего цикла максимальный элемент массива всегда находится на ой позиции при втором проходе следующий по значению максимальный элемент находится на месте так далее таким образом на каждом следующем проходе число обрабатываемых элементов уменьшается на нет необходимости обходить весь массив от начала до конца каждый раз так как подмассив из одного элемента не нуждается сортировке то для сортировки требуется делать не более итераций внешнего цикла поэтому некоторых реализациях внешний цикл всегда выполняется ровно не отслеживается были или не были обмены на каждой итерации введение индикатора флажка действительно произошедших во внутреннем цикле обменов уменьшает число лишних проходов случаях частично массивами на входе перед каждым проходом по внутреннему циклу флажок сбрасывается после действительно произошедшего обмена устанавливается если после выхода из внутреннего цикла флажок равен то обменов не было то есть массив отсортирован можно досрочно выйти из программы сортировки псевдокод ещё более улучшенного алгоритма проверкой действительно произошедших обменов во внутреннем цикле на входе массив состоящий из элементов нумерацией от до цикл для до шаг for to step цикл для до шаг for to step если ai ai то обмен ai ai if ai ai then swap ai ai следующее next если то выход из цикла if then exit for следующее next случае досрочного выхода из сортировки этом алгоритме делается один избыточный проход без обменов наихудший случай не улучшается число сравнений теле цикла равно число сравнений заголовках циклов суммарное число сравнений равно число присваиваний заголовках циклов равно число обменов равно наилучший случай улучшается число сравнений теле цикла равно число сравнений заголовках циклов суммарное число сравнений равно число обменов равно время сортировки коротких целых чисел на одном том же программно аппаратном комплексе операция сравнения мкс обмена мкс сортировкой выбором составило сек ещё более улучшенной сортировкой пузырьком сек быстрой сортировкой сек больше чем сортировки слиянием но при малых разница не очень большая программный код очень прост поэтому вполне допустимо применение сортировки пузырьком для множества задач массивами малой размерности на простаивающих малозагруженных машинах алгоритм можно немного улучшить сделав следующее внутренний цикл можно модифицировать так чтобы он поочерёдно просматривал массив то начала то конца таким образом алгоритм называется сортировкой перемешиванием или шейкерной сортировкой сложность при этом не уменьшается сортировке пузырьком при каждом проходе по внутреннему циклу можно добавить определение очередного минимального элемента помещение его начало массива то есть объединить алгоритмы сортировки пузырьком сортировки выбором при этом число проходов по внутреннему циклу сокращается вдвое но более чем вдвое увеличивается число сравнений добавляется один обмен после каждого прохода по внутреннему циклу псевдокод объединённого алгоритма сортировки пузырьком сортировки выбором устойчивая реализация for to step min for to step if yi yi then swap yi yi if yij then swap yj ymin next int bubble_sort int array int array_size int int buf char swap_cnt if array_size return while arrayi buf arrayi arrayi arrayi arrayi buf swap_cnt if array_size swap_cnt swap_cnt return array пример работы алгоритма возьмём массив числами отсортируем значения по возрастанию используя сортировку пузырьком выделены те элементы которые сравниваются на данном этапе наглядная демонстрация алгоритма первый проход здесь алгоритм сравнивает два первых элемента меняет их местами меняет местами так как меняет местами так как теперь ввиду того что элементы стоят на своих местах алгоритм не меняет их местами второй проход меняет местами так как теперь массив полностью отсортирован но алгоритму это неизвестно поэтому ему необходимо сделать полный проход определить что перестановок элементов не было третий проход теперь массив отсортирован алгоритм может быть завершён примечания все приведённые реализации алгоритма имеют недостаток каждый раз во внешнем цикле длина проходимого участка уменьшается на единицу то время как следующий проход должен идти до места последнего обмена ссылки http sorting at анимация алгоритмов сортировки динамическая визуализация алгоритмов сортировки открытым исходным кодом литература категория алгоритмы сортировки