генети ческий алгори тм это эвристический алгоритм поиска используемый для решения задач оптимизации моделирования путём случайного подбора комбинирования вариации искомых параметров использованием механизмов аналогичных естественному отбору природе является разновидностью эволюционных вычислений помощью которых решаются оптимизационные задачи использованием методов естественной эволюции таких как наследование мутации отбор кроссинговер отличительной особенностью генетического алгоритма является акцент на использование оператора скрещивания который производит операцию рекомбинации решений кандидатов роль которой аналогична роли скрещивания живой природе история первые работы по симуляции эволюции были проведены году нильсом баричелли на компьютере установленном институте перспективных исследований принстонского университета его работа опубликованная том же году привлекла широкое внимание общественности года австралийский генетик алекс фразер опубликовал серию работ по симуляции искусственного отбора среди организмов множественным контролем измеримых характеристик положенное начало позволило компьютерной симуляции эволюционных процессов методам описанным книгах фразера барнелла кросби годов стать более видом деятельности среди биологов симуляции фразера включали все важнейшие элементы современных генетических алгоритмов вдобавок этому ганс иоахим бремерманн опубликовал серию работ которые также принимали подход использования популяции решений подвергаемой рекомбинации мутации отбору проблемах оптимизации исследования бремерманна также включали элементы современных генетических алгоритмов среди прочих пионеров следует отметить ричарда фридберга джорджа фридмана майкла конрада множество ранних работ были переизданы давидом фогелем хотя баричелли своей работе года симулировал способности машины играть простую игру искусственная эволюция стала общепризнанным методом оптимизации после работы инго рехенберга ханса пауля швефеля начале годов двадцатого века группа рехенсберга смогла решить сложные инженерные проблемы согласно стратегиям эволюции другим подходом была техника эволюционного лоренса дж фогеля которая была предложена для создания искусственного интеллекта эволюционное первоначально использовавшее конечные автоматы для предсказывания обстоятельств использовавшее разнообразие отбор для оптимизации логики предсказания генетические алгоритмы стали особенно популярны благодаря работе джона холланда начале годов его книге адаптация естественных искусственных системах его исследование основывалось на экспериментах клеточными автоматами проводившимися холландом на его трудах написанных университете мичигана холланд ввел формализованный подход для предсказывания качества следующего поколения известный как теорема схем исследования области генетических алгоритмов оставались основном теоретическими до середины годов когда была наконец проведена первая международная конференция по генетическим алгоритмам питтсбурге пенсильвания сша ростом интереса существенно выросла вычислительная мощь настольных компьютеров это позволило использовать новую вычислительную технику на практике конце компания general electric начала продажу первого мире продукта работавшего использованием генетического алгоритма им стал набор промышленных вычислительных средств другая компания axcelis inc выпустила evolver первый мире коммерческий продукт на генетическом алгоритме для настольных компьютеров журналист the new york times технологической сфере джон маркофф писал об evolver году описание алгоритма схема работы генетического алгоритма задача формализуется таким образом чтобы её решение могло быть закодировано виде вектора генотипа генов где каждый ген может быть битом числом или неким другим объектом классических реализациях генетического алгоритма га предполагается что генотип имеет фиксированную длину однако существуют вариации га свободные от этого ограничения некоторым обычно случайным образом создаётся множество генотипов начальной популяции они оцениваются использованием функции результате чего каждым генотипом ассоциируется определённое значение которое определяет насколько хорошо фенотип им описываемый решает поставленную задачу при выборе функции или fitness function англоязычной литературе важно следить чтобы её рельеф был гладким из полученного множества решений поколения учётом значения выбираются решения обычно лучшие особи имеют большую вероятность быть выбранными которым применяются генетические операторы большинстве случаев скрещивание crossover мутация mutation результатом чего является получение новых решений для них также вычисляется значение затем производится отбор селекция лучших решений следующее поколение этот набор действий повторяется итеративно так моделируется эволюционный процесс продолжающийся несколько жизненных циклов поколений пока не будет выполнен критерий остановки алгоритма таким критерием может быть нахождение глобального либо субоптимального решения исчерпание числа поколений отпущенных на эволюцию исчерпание времени отпущенного на эволюцию генетические алгоритмы служат главным образом для поиска решений многомерных пространствах поиска таким образом можно выделить следующие этапы генетического алгоритма задать целевую функцию для особей популяции создать начальную популяцию начало цикла размножение скрещивание мутирование вычислить значение целевой функции для всех особей формирование нового поколения селекция если выполняются условия остановки то конец цикла иначе начало цикла создание начальной популяции перед первым шагом нужно случайным образом создать начальную популяцию даже если она окажется совершенно вероятно что генетический алгоритм всё равно достаточно быстро переведёт её жизнеспособную популяцию таким образом на первом шаге можно особенно не стараться сделать слишком уж приспособленных особей достаточно чтобы они соответствовали формату особей популяции на них можно было подсчитать функцию fitness итогом первого шага является популяция состоящая из особей отбор селекция на этапе отбора нужно из всей популяции выбрать определённую её долю которая останется живых на этом этапе эволюции есть разные способы проводить отбор вероятность выживания особи должна зависеть от значения функции fitness сама доля выживших обычно является параметром генетического алгоритма её просто задают заранее по итогам отбора из особей популяции должны остаться sn особей которые войдут итоговую популяцию остальные особи погибают турнирная селекция сначала случайно выбирается установленное количество особей обычно две затем из них выбирается особь лучшим значением функции метод рулетки вероятность выбора особи тем вероятнее чем лучше её значение функции где вероятность выбора особи значение функции для особи количество особей популяции метод ранжирования вероятность выбора зависит от места списке особей отсортированном по значению функции где порядковый номер особи списке особей отсортированном по значению функции то есть если мы минимизируем значение функции равномерное ранжирование вероятность выбора особи определяется выражением где параметр метода сигма отсечение для предотвращения преждевременной сходимости генетического алгоритма используются методы масштабирующие значение целевой функции вероятность выбора особи тем больше чем оптимальнее значение масштабируемой целевой функции где среднее значение целевой функции для всей популяции отклонение значения целевой функции выбор родителей размножение генетических алгоритмах требует для производства потомка нескольких родителей обычно двух можно выделить несколько операторов выбора родителей панмиксия оба родителя выбираются случайно каждая особь популяции имеет равные шансы быть выбранной инбридинг первый родитель выбирается случайно вторым выбирается такой который наиболее похож на первого родителя аутбридинг первый родитель выбирается случайно вторым выбирается такой который наиболее не похож на первого родителя инбридинг аутбридинг бывают двух формах фенотипной генотипной случае фенотипной формы похожесть измеряется зависимости от значения функции чем ближе значения целевой функции тем особи более похожи случае генотипной формы похожесть измеряется зависимости от представления генотипа чем меньше отличий между генотипами особей тем особи похожее размножение скрещивание размножение разных алгоритмах определяется по разному оно конечно зависит от представления данных главное требование размножению чтобы потомок или потомки имели возможность унаследовать черты обоих родителей смешав их каким либо способом почему особи для размножения обычно выбираются из всей популяции не из выживших на первом шаге элементов хотя последний вариант тоже имеет право на существование дело том что главный недостаток многих генетических алгоритмов отсутствие разнообразия diversity особях достаточно быстро выделяется один единственный генотип который представляет собой локальный максимум затем все элементы популяции проигрывают ему отбор вся популяция забивается копиями этой особи есть разные способы борьбы таким нежелательным эффектом один из них выбор для размножения не самых приспособленных но вообще всех особей однако такой подход вынуждает хранить всех существовавших ранее особей что увеличивает вычислительную сложность задачи поэтому часто применяют методы отбора особей для скрещивания таким образом чтобы размножались не только самые приспособленные но другие особи обладающие плохой при таком подходе для разнообразия генотипа возрастает роль мутаций мутации мутациям относится все то же самое что размножению есть некоторая доля мутантов являющаяся параметром генетического алгоритма на шаге мутаций нужно выбрать mn особей затем изменить их соответствии заранее определёнными операциями мутации критика существует несколько поводов для критики насчёт использования генетического алгоритма по сравнению другими методами оптимизации повторная оценка функции фитнесс функции для сложных проблем часто является фактором ограничивающим использование алгоритмов искусственной эволюции поиск оптимального решения для сложной задачи высокой размерности зачастую требует очень затратной оценки функции реальных задачах таких как задачи структурной оптимизации единственный запуск функциональной оценки требует от нескольких часов до нескольких дней для произведения необходимых вычислений стандартные методы оптимизации не могут справиться проблемами такого рода таком случае может быть необходимо пренебречь точной оценкой использовать аппроксимацию пригодности которая способна быть вычислена эффективно очевидно что применение аппроксимации пригодности может стать одним из наиболее многообещающих подходов позволяющих обоснованно решать сложные задачи реальной жизни помощью генетических алгоритмов генетические алгоритмы плохо масштабируемы под сложность решаемой проблемы это значит что число элементов подверженных мутации очень велико если велик размер области поиска решений это делает использование данной вычислительной техники чрезвычайно сложным при решении таких проблем как например проектирование двигателя дома или самолёта для того чтобы сделать так чтобы такие проблемы поддавались эволюционным алгоритмам они должны быть разделены на простейшие представления данных проблем таким образом эволюционные вычисления используются например при разработке формы лопастей вместо всего двигателя формы здания вместо подробного строительного проекта формы фюзеляжа вместо разработки вида всего самолёта вторая проблема связанная со сложностью кроется том как защитить части которые решениями от дальнейшей разрушительной мутации частности тогда когда от них требуется хорошая совместимость другими частями процессе оценки пригодности некоторыми разработчиками было предложено что подход предполагающий развитие пригодности решений смог бы преодолеть ряд проблем защитой но данный вопрос всё ещё остаётся открытым для исследования решение является более пригодным лишь по сравнению другими решениями результате условие остановки алгоритма неясно для каждой проблемы во многих задачах генетические алгоритмы имеют тенденцию сходиться локальному оптимуму или даже произвольной точке не глобальному оптимуму для данной задачи это значит что они не знают каким образом пожертвовать кратковременной высокой пригодностью для достижения долгосрочной пригодности вероятность этого зависит от формы ландшафта пригодности отдельные проблемы могут иметь выраженное направление глобальному минимуму то время как остальные могут указывать направление для фитнесс функции на локальный оптимум эту проблему можно решить использованием иной фитнесс функции увеличением вероятности мутаций или использованием методов отбора которые поддерживают разнообразие решений популяции хотя теорема об отсутствии бесплатного обеда при поиске оптимизации доказывает что не существует общего решения данной проблемы общепринятым методом поддержания популяционного разнообразия является установка уровневого ограничения на численность элементов высоким сродством которое снизит число представителей сходных решений последующих поколениях позволяя другим менее сходным элементам оставаться популяции данный приём тем не менее может не увенчаться успехом зависимости от ландшафта конкретной проблемы другим возможным методом может служить простое замещение части популяции случайно элементами момент когда элементы популяции становятся слишком сходны между собой разнообразие важно для генетических алгоритмов генетического потому что перекрёст генов гомогенной популяции не несёт новых решений эволюционных стратегиях эволюционном разнообразие не является необходимостью так как большая роль них отведена мутации имеется много скептиков относительно применения генетических алгоритмов например стивен скиена профессор кафедры вычислительной техники университета стоуни брук известный исследователь алгоритмов лауреат премии института ieee пишет применение генетических алгоритмов генетические алгоритмы применяются для решения следующих задач оптимизация функций оптимизация запросов базах данных разнообразные задачи на графах задача коммивояжера раскраска нахождение паросочетаний настройка обучение искусственной нейронной сети задачи компоновки составление расписаний игровые стратегии теория приближений искусственная жизнь биоинформатика фолдинг белков синтез конечных автоматов настройка пид регуляторов пример простой реализации на поиск одномерном пространстве без скрещивания include include include include include int main srand unsigned int time null const size_t int an for мутация случайную сторону каждого элемента for size_t пример простой реализации на delphi поиск одномерном пространстве вероятностью выживания без скрещивания проверено на delphi xe program program apptype console res uses system generics defaults system generics collections system sysutils const nh div maxpopulation high integer var array of integer points birthrate integer iptr integer begin randomize частичная популяция for to do ai random repeat мутация for to do ai ai random or отбор лучшие конце tarray sort tcomparer default предустановка iptr addr anh points birthrate результаты скрещивания for to nh do begin inc points iptr случайный успех скрещивания random inc birthrate ai iptr iptr inc iptr end промежуточный итог inc until points or maxpopulation writeln format population rate score birthrate nh points end культуре фильме года виртуозность мозг главного злодея выращен генетическим алгоритмом использованием воспоминаний поведенческих черт преступников примечания книги ссылки эволюционные вычисления использование генетических алгоритмов проблеме автоматического написания программ реализация генетических алгоритмов среде matlab сергей николенко генетические алгоритмы слайды лекция из курса самообучающиеся системы us генерирование автоматов состояний помощью га субботін олійник олійник неітеративні еволюційні та мультиагентні методи синтезу нечіткологічних нейромережних моделей монографія під заг ред субботіна запоріжжя знту подборка статей по использованию генетических алгоритмов задачах оптимизации lakhmi jain martin fusion of neural networks fuzzy systems and genetic algorithms industrial applications crc press crc press llc лекция по генетическим алгоритмам категория алгоритмы оптимизации категория эволюционные алгоритмы