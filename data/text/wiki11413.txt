secure hash algorithm алгоритм хеширования описан rfc для входного сообщения произвольной длины максимум бит что примерно равно эксабайта алгоритм генерирует битное байт хеш значение называемое также дайджестом сообщения которое обычно отображается как число длиной цифр используется во многих приложениях протоколах также рекомендован качестве основного для государственных учреждений сша принципы положенные основу sha аналогичны тем которые использовались рональдом ривестом при проектировании md история году nsa совместно nist разработали алгоритм безопасного хеширования сейчас известный как sha опубликован документе fips pub для стандарта безопасного хеширования однако вскоре nsa отозвало данную версию сославшись на обнаруженную ими ошибку которая так не была раскрыта заменило его исправленной версией опубликованной году документе fips pub эта версия считается тем что называют sha позже на конференции crypto году два французских исследователя представили атаку на алгоритм sha которая не работала на алгоритме sha возможно это была ошибка открытая nsa описание алгоритма одна итерация алгоритма sha sha реализует хеш функцию построенную на идее функции сжатия входами функции сжатия являются блок сообщения длиной бит выход предыдущего блока сообщения выход представляет собой значение всех хеш блоков до этого момента иными словами хеш блока равен хеш значением всего сообщения является выход последнего блока инициализация исходное сообщение разбивается на блоки по бит каждом последний блок дополняется до длины кратной бит сначала добавляется бит потом нули чтобы длина блока стала равной бит оставшиеся бита записывается длина исходного сообщения битах big endian формате если последний блок имеет длину более но менее бит то дополнение выполняется следующим образом сначала добавляется бит затем нули вплоть до конца битного блока после этого создается ещё один битный блок который заполняется вплоть до бит нулями после чего оставшиеся бита записывается длина исходного сообщения битах big endian формате дополнение последнего блока осуществляется всегда даже если сообщение уже имеет нужную длину пять битовых переменных xefcdab badcfe xc определяются четыре нелинейные операции четыре константы ed eba bbcdc xca главный цикл главный цикл итеративно обрабатывает каждый битный блок итерация состоит из четырёх этапов по двадцать операций каждом блок сообщения преобразуется из битовых слов битовых слов по следующему правилу при здесь temp temp после этого прибавляются соответственно начинается следующая итерация итоговым значением будет объединение пяти битовых слов одно битное хеш значение псевдокод sha псевдокод алгоритма sha следующий замечание все используемые переменные бита инициализация переменных xefcdab badcfe xc предварительная обработка присоединяем бит сообщению присоединяем битов где наименьшее число такое что длина получившегося сообщения битах сравнима по модулю length mod добавляем длину исходного сообщения до предварительной обработки как целое битное big endian число битах процессе сообщение разбивается последовательно по бит for перебираем все такие части разбиваем этот кусок на частей слов по бита big endian wi слов по бита дополняются до битовых слов for from to wi wi xor wi xor wi xor wi циклический сдвиг влево инициализация хеш значений этой части основной цикл for from to if then and or not and else if then xor xor ed eba else if then and or and or and bbcdc else if then xor xor xca temp leftrotate wi leftrotate temp добавляем хеш значение этой части результату итоговое хеш значение должны быть преобразованы big endian digest hash append append append append вместо оригинальной формулировки fips pub приведены следующие эквивалентные выражения могут быть использованы на компьютере главном цикле xor and xor альтернатива and xor not and альтернатива and not and альтернатива and or and or альтернатива and or and xor альтернатива and and xor альтернатива and xor and xor and альтернатива примеры ниже приведены примеры хешей sha для всех сообщений подразумевается использование кодировки utf хеш панграммы на русском sha чащах юга жил бы цитрус да но фальшивый экземпляр fdfc хеш панграммы на английском sha the quick brown fox jumps over the lazy dog fd fc ed ee bb eb sha sha небольшое изменение исходного текста одна буква верхнем регистре приводит сильному изменению самого хеша это происходит вследствие лавинного эффекта sha sha ba baeb ae даже для пустой строки вычисляется нетривиальное хеш значение sha da ee bfef afd криптоанализ криптоанализ хеш функций направлен на исследование уязвимости различного вида атакам основные из них нахождение коллизий ситуация когда двум различным исходным сообщениям соответствует одно то же хеш значение нахождение прообраза исходного сообщения по его хешу при решении методом грубой силы первая задача требует среднем операций если использовать атаку дней рождения вторая требует операций от устойчивости хеш функции нахождению коллизий зависит безопасность электронной цифровой подписи использованием данного хеш алгоритма от устойчивости нахождению прообраза зависит безопасность хранения хешей паролей для целей аутентификации январе года винсент рэймен elisabeth oswald опубликовали сообщение об атаке на усечённую версию sha раунда вместо которая позволяет находить коллизии меньше чем за операций феврале года сяоюнь ван ицюнь лиза инь хунбо юй xiaoyun wang yiqun lisa yin hongbo yu представили атаку на полноценный sha которая требует менее операций методе авторы пишут мы представляем набор стратегий соответствующих методик которые могут быть использованы для устранения некоторых важных препятствий поиске коллизий sha сначала мы ищем близкие коллизии пути которые имеют небольшой вес хамминга векторе помех где каждый бит представляет шаговую локальную коллизию потом мы соответствующим образом корректируем путь из первого этапа до другого приемлемого пути чтобы избежать неприемлемых усеченных коллизий конце концов мы преобразуем два одноблоковых близких коллизии пути один двухблоковый коллизионный путь удвоенной вычислительной сложностью также они заявляют частности наш анализ основан на оригинальной атаке на sha near collision атаке на sha мультиблоковой методике также методикам модификации исходного сообщения использованных при атаках поиска коллизий на haval md ripemd md статья описанием алгоритма была опубликована августе года на конференции crypto этой же статье авторы опубликовали атаку на усечённый sha раундов которая позволяет находить коллизии за операций августе года на crypto эти же специалисты представили улучшенную версию атаки на полноценный sha вычислительной сложностью операций декабре года детали этого улучшения были проверены мартином кохраном кристоф де каньер кристиан рехберг позже представили версию атаки на sha за что были удостоены награды за лучшую статью на конференции asiacrypt ими была представлена двух блоковая коллизия на раундовый алгоритм вычислительной сложностью около операций существует масштабный проект стартовавший технологическом университете австрийского города грац который использует компьютеры соединенные через интернет для проведения исследований области криптоанализа вы можете поучаствовать проекте загрузив запустив бесплатную программу на своем компьютере хотя теоретически sha считается взломанным количество вычислительных операций сокращено раза на практике подобный взлом неосуществим так как займёт пять миллиардов лет бурт калински глава отдела лаборатории rsa предсказывает что первая атака по нахождению прообраза будет успешно осуществлена ближайшие лет ввиду того что теоретические атаки на sha оказались успешными nist планирует полностью отказаться от использования sha цифровых подписях из за блочной итеративной структуры алгоритмов также отсутствия специальной обработки конце хеширования все хеш функции семейства sha уязвимы атакам удлинением сообщения коллизии при частичном хешировании сообщения эти атаки позволяют подделывать сообщения подписанные только хешем или путём удлинения сообщения пересчёту хеша без знания значения ключа простейшим исправлением позволяющим защититься от этих атак является двойное хеширование блок нулей той же длины что блок хеш функции ноября года nist анонсировало конкурс по разработке нового алгоритма sha который продлился до года shappening октября marc stevens pierre karpman thomas peyrin опубликовали атаку на функцию сжатия алгоритма sha которая требует всего вычислений реальный взлом shattered нахождение коллизий февраля года специалисты из google cwi объявили практическом взломе алгоритма опубликовав pdf файла одинаковой контрольной суммой sha это потребовало перебора вариантов что заняло бы лет на gpu сравнение sha другими алгоритмами сравнение md md sha являются по сути улучшенными продолжениями md сходства четыре этапа каждое действие прибавляется ранее полученному результату размер блока обработки равный бит оба алгоритма выполняют сложение по модулю они рассчитаны на битную архитектуру различия sha на четвёртом этапе используется та же функция что на втором этапе md каждом действии используется уникальная прибавляемая константа sha константы используются повторно для каждой из четырёх групп sha добавлена пятая переменная sha использует циклический код исправления ошибок md четыре сдвига используемые на каждом этапе отличаются от значений используемых на предыдущих этапах sha на каждом этапе используется постоянное значение сдвига md четыре различных элементарных логических функции sha три md длина дайджеста составляет бит sha бит sha содержит больше раундов вместо выполняется на битном буфере по сравнению со битным буфером md таким образом sha должен выполняться приблизительно на медленнее чем md на той же аппаратуре брюс шнайер делает следующий вывод sha это md добавлением расширяющего преобразования дополнительного этапа улучшенным лавинным эффектом md это md улучшенным битовым хешированием дополнительным этапом улучшенным лавинным эффектом сравнение гост ряд отличительных особенностей гост при обработке блоков используются преобразования по алгоритму гост обрабатывается блок длиной бит выходное значение тоже имеет длину бит применены меры борьбы против поиска коллизий основанном на неполноте последнего блока обработка блоков происходит по алгоритму шифрования гост который содержит преобразования на блоках что существенно осложняет применение метода криптоанализа поиску коллизий алгоритма гост это существенный плюс по сравнению sha теоретическая криптостойкость гост равна что во много раз превосходит для sha сравнение другими sha таблице промежуточный размер хеша означает размер внутренней хеш суммы после каждой итерации вариации алгоритма размер выходного хеша бит промежуточный размер хеша бит размер блока бит максимальная длина входного сообщения бит размер слова бит количество раундов используемые операции найденные коллизии sha and or xor rotl есть sha and or xor rotl операций sha sha and or xor shr rotr нет sha and or xor shr rotr нет использование хеш функции используются системах контроля версий системах электронной подписи также для построения кодов аутентификации sha является наиболее из всего семейства sha применяется различных широко приложениях алгоритмах sha используется следующих приложениях mime дайджесты сообщений ssl дайджесты сообщений ipsec для алгоритма проверки целостности соединении точка точка ssh для проверки целостности переданных данных pgp для создания электронной цифровой подписи git для идентификации каждого объекта по sha хешу от хранимой объекте информации mercurial для идентификации ревизий bittorrent для проверки целостности загружаемых данных sha является основой блочного шифра shacal отказ от использования компания google давно выразила своё недоверие sha особенно качестве использования этой функции для подписи сертификатов tls ещё году вскоре после публикации работы марка стивенса группа разработчиков chrome объявила постепенном отказе от использования sha апреля года яндекс почта перестала поддерживать старые почтовые программы использующие sha см также хеш сумма sha md примечания литература ссылки rfc обзор sha от консорциума всемирной паутины взлом sha доклад взломе sha брюс шнайер взломе sha последствия удачных атак на sha категория хеш функции категория стандарты криптографии