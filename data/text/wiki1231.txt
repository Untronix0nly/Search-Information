алгори тм от арабского имени математика аль хорезми набор инструкций описывающих порядок действий исполнителя для достижения некоторого результата старой трактовке вместо слова порядок использовалось слово но по мере развития параллельности работе компьютеров слово стали заменять более общим словом порядок независимые инструкции могут выполняться произвольном порядке параллельно если это позволяют используемые исполнители ранее русском языке писали алгори сейчас такое написание используется редко но тем не менее имеет место исключение нормальный алгорифм маркова часто качестве исполнителя выступает компьютер но понятие алгоритма необязательно относится компьютерным программам так например чётко описанный рецепт приготовления блюда также является алгоритмом таком случае исполнителем является человек может быть некоторый механизм ткацкий станок пр можно выделить алгоритмы вычислительные них основном идет далее речь управляющие вычислительные по сути преобразуют некоторые начальные данные выходные реализуя вычисление некоторой функции семантика управляющих алгоритмов существенным образом может отличаться сводиться выдаче необходимых управляющих воздействий либо заданные моменты времени либо качестве реакции на внешние события этом случае отличие от вычислительного алгоритма управляющий может оставаться корректным при бесконечном выполнении понятие алгоритма относится первоначальным основным базисным понятиям математики вычислительные процессы характера арифметические действия над целыми числами нахождение наибольшего общего делителя двух чисел известны человечеству глубокой древности однако явном виде понятие алгоритма сформировалось лишь начале xx века частичная формализация понятия алгоритма началась попыток решения проблемы разрешения которую сформулировал давид гильберт году следующие этапы формализации были необходимы для определения эффективных вычислений или эффективного метода среди таких формализаций рекурсивные функции геделя эрбрана клини гг исчисление алонзо чёрча формулировка эмиля поста года машина тьюринга история термина файл image al kitāb al muḫtaṣar fī ḥisāb al ğabr wa muqābala jpg thumb px страница из алгебры аль хорезми хорезмского математика от имени которого происходит слово алгоритм файл abu abdullah muhammad bin musa al khwarizmi edit png thumb аль хорезми на советской формальное определение вычислительного алгоритма было дано годы xx века работах тьюринга поста чёрча тезис чёрча тьюринга винера маркова само слово алгоритм происходит от имени хорезмского учёного аль хорезми около года он написал сочинение китаб аль джебр валь мукабала книга сложении вычитании из оригинального названия которого происходит слово алгебра аль джебр восполнение этой книге впервые дал описание придуманной индии позиционной десятичной системы счисления персидский оригинал книги не сохранился аль хорезми сформулировал правила вычислений новой системе вероятно впервые использовал цифру для обозначения пропущенной позиции записи числа её индийское название арабы перевели как as sifr или просто sifr отсюда такие слова как цифра шифр приблизительно это же время индийские цифры начали применять другие арабские учёные первой половине xii века книга аль хорезми латинском переводе проникла европу переводчик имя которого до нас не дошло дал ей название algoritmi de numero indorum алгоритми счёте индийском таким образом имя учёного было вынесено заглавие книги сегодня считается что слово алгоритм попало европейские языки именно благодаря этому переводу течение нескольких следующих столетий появилось множество других трудов посвящённых всё тому же вопросу обучению искусству счёта помощью цифр все они имели названии слово algoritmi или algorismi про аль хорезми позднейшие авторы ничего не знали но поскольку первый перевод книги начинается словами dixit algorizmi аль хорезми говорил всё ещё связывали это слово именем конкретного человека очень была версия греческом происхождении книги англо норманнской рукописи xiii века написанной стихах читаем алгоризм был придуман греции это часть арифметики придуман он был мастером по имени алгоризм который дал ему своё имя поскольку его звали алгоризм он назвал свою книгу алгоризм около года английский астроном математик иоанн сакробоско написал труд по арифметике algorismus vulgaris на столетия ставший основным учебником по вычислениям десятичной позиционной системе счисления во многих европейских университетах во введении сакробоско назвал автором науки счёте мудреца по имени алгус algus популярной средневековой поэме роман розе жана де мена греческий философ алгус ставится один ряд платоном аристотелем евклидом птолемеем встречался также вариант написания имени аргус argus хотя согласно древнегреческой мифологии корабль арго был построен ясоном именно этому арго приписывалось строительство корабля мастер алгус или аргус стал средневековой литературе олицетворением счётного искусства уже упоминавшейся романе розе известной итальянской поэме цветок написанной дуранте имеются фрагменты которых говорится что даже mestre argus не сумеет подсчитать сколько раз ссорятся мирятся влюблённые английский поэт джефри чосер поэме книга герцогини пишет что даже славный счётчик аргус noble countour argu не сможет счесть чудовищ явившихся кошмарных видениях герою файл ada lovelace jpg thumb px баронесса ада лавлейс которую считают первым программистом однако со временем такие объяснения всё менее занимали математиков слово algorism или algorismus неизменно названиях математических сочинений обрело значение способа выполнения арифметических действий посредством арабских цифр то есть на бумаге без использования абака именно таком значении оно вошло во многие европейские языки например пометкой устар оно присутствует словаре английского языка webster new world dictionary изданном словарь брокгауза ефрона предлагает такую трактовку алгорифм кстати до революции использовалось написание алгориѳм через фиту производится от арабского слова аль горетм то есть корень алгоритм это искусство счёта помощью цифр но поначалу слово цифра относилось только нулю знаменитый французский трувер gautier de coincy одном из стихотворений использовал слова algorismus cipher которые означали цифру как метафору для характеристики абсолютно никчёмного человека очевидно понимание такого образа требовало соответствующей подготовки слушателей это означает что новая система счисления уже была им достаточно хорошо известна многие века абак был фактически единственным средством для практичных вычислений им пользовались купцы менялы учёные достоинства вычислений на счётной доске разъяснял своих сочинениях такой выдающийся мыслитель как герберт аврилакский ставший папой римским под именем сильвестра ii новое огромным трудом пробивало себе дорогу историю математики вошло упорное противостояние лагерей алгорисмиков абацистов иногда называемых гербекистами которые использование для вычислений абака вместо арабских цифр интересно что известный французский математик nicolas chuquet реестр города лиона был вписан как алгорисмик algoriste но прошло не одно столетие прежде чем новый способ счёта окончательно утвердился столько времени потребовалось чтобы выработать общепризнанные обозначения приспособить записи на бумаге методы вычислений западной европе учителей арифметики вплоть до xvii века продолжали называть магистрами абака как например математика никколо тарталью итак сочинения по искусству счёта назывались алгоритмами из многих сотен можно выделить такие необычные как написанный стихах трактат carmen de algorismo латинское carmen означает стихи александра де вилла деи alexander de villa dei ум или учебник венского астронома математика георга пурбаха georg peurbach opus algorismi jocundissimi веселейшее сочинение по алгоритму постепенно значение слова расширялось учёные начинали применять его не только сугубо вычислительным но другим математическим процедурам например около французский философ николай орем nicolaus oresme написал математический трактат algorismus proportionum вычисление пропорций котором впервые использовал степени дробными показателями фактически вплотную подошёл идее логарифмов когда же на смену абаку пришёл так называемый счёт на линиях многочисленные руководства по нему стали называть algorithmus linealis то есть правила счёта на линиях можно обратить внимание на то что первоначальная форма algorismi спустя какое то время потеряла последнюю букву слово приобрело более удобное для европейского произношения вид algorism позднее оно свою очередь подверглось искажению скорее всего связанному со словом arithmetic году готфрид лейбниц сочинении nova methodvs pro maximis et minimis itemque tangentibus впервые использовал слово алгоритм algorithmo ещё более широком смысле как систематический способ решения проблем исчисления xviii веке одном из германских математических словарей vollstandiges mathematisches lexicon изданном лейпциге термин algorithmus всё ещё объясняется как понятие четырёх арифметических операциях но такое значение не было единственным ведь терминология математической науки те времена ещё только формировалась частности выражение algorithmus infinitesimalis применялось способам выполнения действий бесконечно малыми величинами пользовался словом алгоритм леонард эйлер одна из работ которого так называется использование нового алгоритма для решения проблемы пелля de usu novi algorithmi in problemate pelliano solvendo мы видим что понимание эйлером алгоритма как синонима способа решения задачи уже очень близко современному однако потребовалось ещё почти два столетия чтобы все старинные значения слова вышли из употребления этот процесс можно проследить на примере проникновения слова алгоритм русский язык историки датируют годом один из списков древнерусского учебника арифметики известного как счётная мудрость это сочинение известно во многих вариантах самые ранние из них почти на сто лет старше восходит ещё более древним рукописям xvi по ним можно проследить как знание арабских цифр правил действий ними постепенно на руси полное название этого учебника сия книга глаголемая по еллински по гречески арифметика по немецки алгоризма по русски цифирная счётная мудрость таким образом слово алгоритм понималось первыми русскими математиками так же как западной европе однако его не было ни знаменитом словаре даля ни спустя сто лет толковом словаре русского языка под редакцией ушакова зато слово алгорифм можно найти популярном дореволюционном словаре братьев гранат первом издании большой советской энциклопедии бсэ изданном там там оно трактуется одинаково как правило по которому выполняется то или иное из четырёх арифметических действий десятичной системе счисления однако началу xx для математиков слово алгоритм уже означало любой арифметический или алгебраический процесс выполняемый по строго определённым правилам это объяснение также даётся следующих изданиях бсэ алгоритмы становились предметом всё более пристального внимания учёных постепенно это понятие заняло одно из центральных мест современной математике что же касается людей от математики далёких то началу сороковых годов это слово они могли услышать разве что во время учёбы школе сочетании алгоритм евклида несмотря на это алгоритм всё ещё воспринимался как термин сугубо специальный что подтверждается отсутствием соответствующих статей менее объёмных изданиях частности его нет даже десятитомной малой советской энциклопедии не говоря уже об однотомных словарях но зато спустя десять лет третьем издании большой советской энциклопедии алгоритм уже характеризуется как одна из основных категорий математики не обладающих формальным определением терминах более простых понятий абстрагируемых непосредственно из опыта как мы видим отличие даже от трактовки первым изданием бсэ разительное за сорок лет алгоритм превратился одно из ключевых понятий математики признанием этого стало включение слова уже не энциклопедии словари например оно присутствует академическом словаре русского языка именно как термин из области математики одновременно развитием понятия алгоритма постепенно происходила его экспансия из чистой математики другие сферы начало ей положило появление компьютеров благодаря которому слово алгоритм вошло во все школьные учебники информатики обрело новую жизнь вообще можно сказать что его сегодняшняя известность напрямую связана со степенью распространения компьютеров например третьем томе детской энциклопедии вычислительных машинах говорится немало но они ещё не стали чем то привычным воспринимаются скорее как некий атрибут светлого но достаточно далёкого будущего соответственно алгоритмы ни разу не упоминаются на её страницах но уже начале гг прошлого столетия когда компьютеры перестали быть экзотической диковинкой слово алгоритм стремительно входит обиход это чутко фиксируют издания энциклопедии кибернетики статье алгоритм он уже связывается реализацией на вычислительных машинах советской военной энциклопедии даже появляется отдельная статья алгоритм решения задачи на эвм за последние полтора два десятилетия компьютер стал неотъемлемым атрибутом нашей жизни компьютерная лексика становится всё более привычной слово алгоритм наши дни известно вероятно каждому оно уверенно шагнуло даже разговорную речь сегодня мы нередко встречаем газетах слышим выступлениях политиков выражения вроде алгоритм поведения алгоритм успеха или даже алгоритм предательства академик моисеев назвал свою книгу алгоритмы развития известный врач амосов алгоритм здоровья алгоритмы разума это означает что слово живёт обогащаясь всё новыми значениями смысловыми оттенками определения алгоритма свойства алгоритмов различные определения алгоритма явной или неявной форме содержат следующий ряд общих требований дискретность алгоритм должен представлять процесс решения задачи как выполнение некоторых простых шагов при этом для выполнения каждого шага алгоритма требуется конечный отрезок времени то есть преобразование исходных данных результат осуществляется во времени дискретно определённость каждый момент времени следующий шаг работы однозначно определяется состоянием системы таким образом алгоритм выдаёт один тот же результат ответ для одних тех же исходных данных современной трактовке разных реализаций одного того же алгоритма должен быть изоморфный граф другой стороны существуют вероятностные алгоритмы которых следующий шаг работы зависит от текущего состояния системы генерируемого случайного числа однако при включении метода генерации случайных чисел список исходных данных вероятностный алгоритм становится подвидом обычного понятность алгоритм должен включать только те команды которые доступны исполнителю входят его систему команд завершаемость конечность более узком понимании алгоритма как математической функции при правильно заданных начальных данных алгоритм должен завершать работу выдавать результат за определённое число шагов дональд кнут процедуру которая удовлетворяет всем свойствам алгоритма кроме возможно конечности называет методом вычисления однако довольно часто определение алгоритма не включает завершаемость за конечное время этом случае алгоритм метод вычисления определяет для вероятностных алгоритмов завершаемость как правило означает что алгоритм выдаёт результат вероятностью для любых правильно заданных начальных данных то есть может некоторых случаях не завершиться но вероятность этого должна быть равна массовость универсальность алгоритм должен быть применим разным наборам начальных данных завершение алгоритма определёнными результатами формальное определение разнообразные теоретические проблемы математики ускорение развития физики техники поставили на повестку дня точное определение понятия алгоритма первые попытки уточнения понятия алгоритма его исследования осуществляли первой половине xx века алан тьюринг эмиль пост жак эрбран курт гедель марков алонзо чёрч было разработано несколько определений понятия алгоритма но впоследствии было выяснено что все они определяют одно то же понятие см тезис чёрча тьюринга русский математик основоположник структурной лингвистики советском союзе успенский считал что понятие алгоритма впервые появилось эмиля бореля году статье об определенном интеграле там он написал вычислениях которые можно реально осуществить подчеркивая при этом намеренно оставляю стороне большую или меньшую практическую деятельность суть здесь та что каждая из этих операций осуществима конечное время при помощи достоверного метода машина тьюринга схематическая иллюстрация работы машины тьюринга основная идея лежащая основе машины тьюринга очень проста машина тьюринга это абстрактная машина автомат работающая лентой отдельных ячеек которых записаны символы машина также имеет головку для записи чтения символов из ячеек которая может двигаться вдоль ленты на каждом шаге машина считывает символ из ячейки на которую указывает головка на основе считанного символа внутреннего состояния делает следующий шаг при этом машина может изменить своё состояние записать другой символ ячейку или передвинуть головку на одну ячейку вправо или влево на основе исследования этих машин был выдвинут тезис тьюринга основная гипотеза алгоритмов этот тезис является аксиомой постулатом не может быть доказан математическими методами поскольку алгоритм не является точным математическим понятием рекурсивные функции каждым алгоритмом можно сопоставить функцию которую он вычисляет однако возникает вопрос можно ли произвольной функции сопоставить машину тьюринга если нет то для каких функций существует алгоритм исследования этих вопросов привели созданию годах теории рекурсивных функций класс вычислимых функций был записан образ напоминающий построение некоторой аксиоматической теории на базе системы аксиом сначала были выбраны простейшие функции вычисление которых очевидно затем были сформулированы правила операторы построения новых функций на основе уже существующих необходимый класс функций состоит из всех функций которые можно получить из простейших применением операторов подобно тезису тьюринга теории вычислимых функций была выдвинута гипотеза которая называется тезис чёрча доказательство того что класс вычислимых функций совпадает исчисляемыми по тьюрингу происходит два шага сначала доказывают вычисление простейших функций на машине тьюринга затем вычисление функций полученных результате применения операторов таким образом неформально алгоритм можно определить как четкую систему инструкций определяющих дискретный процесс который ведет от начальных данных на входе искомому результату на выходе если он существует за конечное число шагов если искомого результата не существует алгоритм или никогда не завершает работу либо заходит тупик нормальный алгоритм маркова нормальный алгоритм маркова это система применений подстановок которые реализуют определенные процедуры получения новых слов из базовых построенных из символов некоторого алфавита как машина тьюринга нормальные алгоритмы не выполняют самих вычислений они лишь выполняют преобразование слов путём замены букв по заданным правилам нормально вычислимой называют функцию которую можно реализовать нормальным алгоритмом то есть алгоритмом который каждое слово из множества допустимых данных функции превращает её начальные значения создатель теории нормальных алгоритмов марков выдвинул гипотезу которая получила название принцип нормализации маркова подобно тезисам тьюринга черча принцип нормализации маркова не может быть доказан математическими средствами стохастические алгоритмы однако приведенное выше формальное определение алгоритма некоторых случаях может быть слишком строгим иногда возникает потребность использовании случайных величин алгоритм работа которого определяется не только исходными данными но значениями полученными из называют стохастическим или от стохастические алгоритмы часто бывают эффективнее отдельных случаях единственным способом решить задачу на практике вместо генератора случайных чисел используют генератор псевдослучайных чисел однако следует отличать стохастические алгоритмы методы которые дают высокой вероятностью правильный результат отличие от метода алгоритм дает корректные результаты даже после продолжительной работы некоторые исследователи допускают возможность того что стохастический алгоритм даст некоторой заранее известной вероятностью неправильный результат тогда стохастические алгоритмы можно разделить на два типа алгоритмы типа лас вегас всегда дают корректный результат но время их работы не определено алгоритмы типа монте карло отличие от предыдущих могут давать неправильные результаты известной вероятностью другие формализации для некоторых задач названные выше формализации могут затруднять поиск решений осуществление исследований для преодоления препятствий были разработаны как модификации классических схем так созданы новые модели алгоритма частности можно назвать многоленточная машины тьюринга регистровая рам машина прототип современных компьютеров виртуальных машин конечные клеточные автоматы другие виды алгоритмов виды алгоритмов как логико математических средств отражают указанные компоненты человеческой деятельности тенденции сами алгоритмы зависимости от цели начальных условий задачи путей её решения следует подчеркнуть принципиальную разницу между алгоритмами вычислительного характера преобразующими некоторые входные данные выходные именно их формализацией являются упомянутые выше машины тьюринга поста рам нормальные алгорифмы маркова рекурсивные функции интерактивными алгоритмами уже тьюринга встречается машина от выбор ожидающая внешнего воздействия отличие от классической машины где все начальные данные заданы до начала вычисления выходные данные недоступны до окончания вычисления последние предназначены для взаимодействия некоторым объектом управления призваны обеспечить корректную выдачу управляющих воздействий зависимости от складывающейся ситуации отражаемой поступающими от объекта управления сигналами некоторых случаях алгоритм управления вообще не предусматривает окончания работы например поддерживает бесконечный цикл ожидания событий на которые выдается соответствующая реакция несмотря на это являясь полностью правильным можно также выделить алгоритмы механические алгоритмы или иначе жесткие например алгоритм работы машины двигателя задают определенные действия обозначая их единственной достоверной обеспечивая тем самым однозначный требуемый или искомый результат если выполняются те условия процесса задачи для которых разработан алгоритм гибкие алгоритмы например стохастические то есть вероятностные эвристические вероятностный стохастический алгоритм дает программу решения задачи несколькими путями или способами приводящими вероятному достижению результата эвристический алгоритм от греческого слова эврика алгоритм использующий различные разумные соображения без строгих обоснований линейный алгоритм набор команд указаний выполняемых последовательно во времени друг за другом разветвляющийся алгоритм алгоритм содержащий хотя бы одно условие результате проверки которого может осуществляться разделение на несколько альтернативных ветвей алгоритма циклический алгоритм алгоритм многократное повторение одного того же действия одних тех же операций над новыми исходными данными циклическим алгоритмам сводится большинство методов вычислений перебора вариантов цикл программы команд серия тело цикла которая может выполняться многократно для новых исходных данных до удовлетворения некоторого условия вспомогательный подчиненный алгоритм процедура алгоритм ранее разработанный целиком используемый при алгоритмизации конкретной задачи некоторых случаях при наличии одинаковых указаний команд для различных данных целью сокращения записи также выделяют вспомогательный алгоритм на всех этапах подготовки алгоритмизации задачи широко используется структурное представление алгоритма структурная блок схема граф схема алгоритма графическое изображение алгоритма виде схемы связанных между собой помощью стрелок линий перехода блоков графических символов каждый из которых соответствует одному шагу алгоритма внутри блока дается описание действия графическое изображение алгоритма широко используется перед задачи вследствие его наглядности так как зрительное восприятие обычно облегчает процесс написания программы её корректировки при возможных ошибках осмысливание процесса обработки информации можно встретить даже такое утверждение внешне алгоритм представляет собой схему набор прямоугольников других символов внутри которых записывается что вычисляется что вводится машину что выдается на печать другие средства отображения информации нумерация алгоритмов нумерация алгоритмов играет важную роль их исследовании анализе поскольку любой алгоритм можно задать виде конечного слова представить виде конечной символов некоторого алфавита множество всех конечных слов конечном алфавите счётное то множество всех алгоритмов также счётное это означает существование взаимно однозначного отображения между множеством натуральных чисел множеством алгоритмов то есть возможность присвоить каждому алгоритму номер нумерация алгоритмов является одновременно нумерацией всех алгоритмически исчисляемых функций причем любая функция может иметь бесконечное количество номеров существование нумерации позволяет работать алгоритмами так же как числами особенно полезна нумерация исследовании алгоритмов работающих другими алгоритмами алгоритмически неразрешимые задачи формализация понятия алгоритма позволила исследовать существование задач для которых не существует алгоритмов поиска решений впоследствии была доказана невозможность вычисления решений ряда задач что делает невозможным их решение на любом вычислительном устройстве функцию называют вычислимой если существует машина тьюринга которая вычисляет значение для всех элементов множества определения функции если такой машины не существует функцию называют невычислимой функция будет считаться невычислимой даже если существуют машины тьюринга способные вычислить значение для подмножества из всего множества входных данных случай когда результатом вычисления функции является логическое выражение истина или ложь или множество называют задачей которая может быть решаемой или нерешаемой зависимости от вычислимости функции важно точно указывать допустимое множество входных данных поскольку задача может быть решаемой для одного множества нерешаемой для другого одной из первых задач для которой была доказана нерешаемость является проблема остановки формулируется она следующим образом доказательство неразрешимости проблемы остановки важно тем что ней можно свести другие задачи например простую проблему остановки можно свести задаче остановки на пустой строке когда нужно определить для заданной машины тьюринга остановится ли она будучи запущенной на пустой строке доказав тем самым неразрешимость последней анализ алгоритмов вместе информационных технологий увеличился риск программных сбоев одним из способов избежания ошибок алгоритмах их реализациях служат доказательства корректности систем математическими средствами использование математического аппарата для анализа алгоритмов их реализаций называют формальными методами формальные методы предусматривают применение формальных спецификаций обычно набора инструментов для синтаксического анализа доказательства свойств спецификаций абстрагирование от деталей реализации позволяет установить свойства системы независимо от её реализации кроме того точность однозначность математических утверждений позволяет избежать многозначности неточности естественных языков по гипотезе ричарда мейса избежание ошибок лучше устранения ошибок по гипотезе хоара доказательство программ решает проблему корректности документации совместимости доказательство корректности программ позволяет выявлять их свойства по отношению ко всему диапазону входных данных для этого понятие корректности было разделено на два типа частичная корректность программа дает правильный результат для тех случаев когда она завершается полная корректность программа завершает работу выдает правильный результат для всех элементов из диапазона входных данных во время доказательства корректности сравнивают текст программы со спецификацией желаемого соотношения входных выходных данных для доказательств типа хоара эта спецификация имеет вид утверждений которые называют предусловиями постусловиями совокупности самой программой их ещё называют тройкой хоара эти утверждения записывают где это предусловие что должно выполняться перед запуском программы постусловие правильное после завершения работы программы формальные методы были успешно применены для широкого круга задач частности разработке электронных схем искусственного интеллекта автоматических систем на железной дороге верификации спецификации стандартов спецификации верификации программ время работы графики функций приведенных таблице ниже критерием оценки алгоритмов является время работы порядок роста работы зависимости от объёма входных данных для каждой конкретной задачи составляют некоторое число которое называют её размером например размером задачи вычисления произведения матриц может быть наибольший размер матриц множителей для задач на графах размером может быть количество ребер графа время которое тратит алгоритм как функция от размера задачи называют временной сложностью этого алгоритма асимптотику поведения этой функции при увеличении размера задачи называют асимптотичной временной сложностью для её обозначения используют нотацию большое например если алгоритм обрабатывает входные данные размером за время cn где некоторая константа то говорят что временная сложность такого алгоритма асимптотическая сложность важна тем что является характеристикой алгоритма не его конкретной реализации оптимизацией операций без замены алгоритма можно изменить только коэффициент но не асимптотику как правило именно асимптотическая сложность является главным фактором который определяет размер задач которые алгоритм способен обработать часто во время разработки алгоритма пытаются уменьшить асимптотическую временную сложность для наихудших случаев на практике же бывают случаи когда достаточным является алгоритм который обычно работает быстро грубо говоря анализ средней асимптотической временной сложности можно разделить на два типа аналитический статистический аналитический метод дает более точные результаты но сложен использовании на практике зато статистический метод позволяет быстрее осуществлять анализ сложных задач следующей таблице приведены асимптотические сложности комментариями сложность комментарий примеры устойчивое время работы не зависит от размера задачи ожидаемое время поиска хеш таблице log log очень медленный рост необходимого времени ожидаемое время работы поиска элементов log логарифмический рост удвоение размера задачи увеличивает время работы на постоянную величину вычисление двоичный поиск массиве из элементов линейный рост удвоение размера задачи удвоит необходимое время сложение вычитание чисел из цифр линейный поиск массиве из элементов log линеаритмичный рост удвоение размера задачи увеличит необходимое время чуть более чем вдвое сортировка слиянием или кучей элементов нижняя граница сортировки сопоставлением элементов квадратичный рост удвоение размера задачи увеличивает необходимое время четыре раза элементарные алгоритмы сортировки кубичный рост удвоение размера задачи увеличивает необходимое время восемь раз обычное умножение матриц рост увеличение размера задачи на приводит кратному увеличению необходимого времени удвоение размера задачи увеличивает необходимое время квадрат некоторые задачи коммивояжёра алгоритмы поиска полным перебором наличие исходных данных некоторого результата алгоритм это точно определённая инструкция последовательно применяя которую исходным данным можно получить решение задачи для каждого алгоритма есть некоторое множество объектов допустимых качестве исходных данных например алгоритме деления вещественных чисел делимое может быть любым делитель не может быть равен нулю алгоритм служит как правило для решения не одной конкретной задачи некоторого класса задач так алгоритм сложения применим любой паре натуральных чисел этом выражается его свойство массовости то есть возможности применять многократно один тот же алгоритм для любой задачи одного класса для разработки алгоритмов программ используется алгоритмизация процесс составления алгоритмов для решения поставленных прикладных задач алгоритмизация считается обязательным этапом процессе разработки программ решении задач на эвм именно для прикладных алгоритмов программ принципиально важны массовость также правильность результатов решения поставленных задач алгоритм это понятное точное предписание исполнителю совершить действий направленных на достижение цели представление алгоритмов формы записи алгоритма словесная или вербальная языковая формульно словесная псевдокод формальные алгоритмические языки схематическая графическая блок схемы дракон схемы структурограммы диаграммы насси шнейдермана обычно сначала на уровне идеи алгоритм описывается словами но по мере приближения реализации он обретает всё более формальные очертания формулировку на языке понятном исполнителю например машинный код эффективность алгоритмов хотя определении алгоритма требуется лишь конечность числа шагов требуемых для достижения результата на практике выполнение даже хотя бы миллиарда шагов является слишком медленным также обычно есть другие ограничения на размер программы на допустимые действия связи этим вводят такие понятия как сложность алгоритма временна по размеру программы вычислительная др для каждой задачи может существовать множество алгоритмов приводящих цели увеличение эффективности алгоритмов составляет одну из задач современной информатики гг xx века появилась даже отдельная её область быстрые алгоритмы частности известной всем детства задаче об умножении десятичных чисел обнаружился ряд алгоритмов позволяющих существенно асимптотическом смысле ускорить нахождение произведения см быстрое умножение ярким примером является алгоритм чудновского для вычисления числа пример качестве примера можно привести алгоритм евклида алгоритм евклида эффективный метод вычисления наибольшего общего делителя нод назван честь греческого математика евклида один из древнейших алгоритмов который используют до сих пор описан началах евклида примерно лет до именно книгах vii седьмой книге описан алгоритм для целых чисел десятой для длин отрезков существует несколько вариантов алгоритма ниже записанный псевдокоде рекурсивный вариант функция нод если возврат иначе возврат нод mod иллюстрация выполнения алгоритма евклида для вычисления нод чисел нод чисел шаг шаг шаг шаг шаг см также список алгоритмов метаалгоритм теория алгоритмов примечания литература ссылки слово алгоритм происхождение развитие шилов журнал потенциал источник исторических сведений об алгоритме энциклопедии кругосвет категория решение задач