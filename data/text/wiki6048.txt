экстрема льное программи рование xp одна из гибких методологий разработки программного обеспечения авторы методологии кент бек уорд каннингем мартин фаулер другие название методологии исходит из идеи применить полезные традиционные методы практики разработки программного обеспечения подняв их на новый экстремальный уровень так например практика выполнения ревизии кода заключающаяся проверке одним программистом кода написанного другим программистом экстремальном варианте представляет собой парное когда один программист занимается написанием кода его напарник это же время непрерывно просматривает только что написанный код основные приёмы xp двенадцать основных приёмов экстремального по первому изданию книги extreme programming explained могут быть объединены четыре группы короткий цикл обратной связи fine scale feedback разработка через тестирование test driven development игра планирование planning game заказчик всегда рядом whole team onsite customer парное pair programming непрерывный не пакетный процесс непрерывная интеграция continuous integration рефакторинг design improvement refactoring частые небольшие релизы small releases понимание разделяемое всеми простота проектирования simple design метафора системы коллективное владение кодом collective code ownership или выбранными шаблонами проектирования collective patterns ownership стандарт оформления кода coding standard or coding conventions социальная защищённость программиста programmer welfare часовая рабочая неделя sustainable pace forty hour week тестирование xp предполагает написание автоматических тестов программный код написанный специально для того чтобы тестировать логику другого программного кода особое внимание уделяется двум разновидностям тестирования юнит тестирование модулей функциональное тестирование разработчик не может быть уверен правильности написанного им кода до тех пор пока не сработают абсолютно все тесты модулей разрабатываемой им системы тесты модулей юнит тесты позволяют разработчикам убедиться том что каждый из них по отдельности работает корректно они также помогают другим разработчикам понять зачем нужен тот или иной фрагмент кода как он функционирует ходе изучения кода тестов логика работы тестируемого кода становится понятной так как видно как он должен использоваться тесты модулей также позволяют разработчику без каких либо опасений выполнять рефакторинг refactoring функциональные тесты предназначены для тестирования логики образуемой взаимодействием нескольких часто довольно внушительного размера частей они менее детальны чем юнит тесты но покрывают гораздо больше то есть тестов которые при своём выполнении затрагивают больший объём кода шанс обнаружить какое либо некорректное поведение очевидно больше по этой причине промышленном написание функциональных тестов нередко имеет больший приоритет чем написание юнит тестов для xp более приоритетным является подход называемый tdd от разработка через тестирование соответствии этим подходом сначала пишется тест который изначально не проходит так как логики которую он должен проверять ещё просто не существует затем реализуется логика необходимая для того чтобы тест прошёл tdd некотором смысле позволяет писать код более удобный использовании потому что при написании теста когда логики ещё нет проще всего позаботиться об удобстве будущей системы игра планирование основная цель игры планирование быстро сформировать приблизительный план работы постоянно обновлять его по мере того как условия задачи становятся всё более чёткими артефактами игры планирование является набор бумажных карточек на которых записаны пожелания заказчика customer stories приблизительный план работы по выпуску следующих одной или нескольких небольших версий продукта критическим фактором благодаря которому такой стиль планирования оказывается эффективным является то что данном случае заказчик отвечает за принятие бизнес решений команда разработчиков отвечает за принятие технических решений если не выполняется это правило весь процесс распадается на части заказчик всегда рядом заказчик xp это не тот кто оплачивает счета конечный пользователь программного продукта xp утверждает что заказчик должен быть всё время на связи доступен для вопросов парное парное предполагает что весь код создается парами программистов работающих за одним компьютером один из них работает непосредственно текстом программы другой просматривает его работу следит за общей картиной происходящего при необходимости клавиатура свободно передаётся от одного другому течение работы над проектом пары не фиксированы рекомендуется их перемешивать чтобы каждый программист команде имел хорошее представление обо всей системе таким образом парное усиливает взаимодействие внутри команды непрерывная интеграция если выполнять интеграцию разрабатываемой системы достаточно часто то можно избежать большей части связанных ней проблем традиционных методиках интеграция как правило выполняется самом конце работы над продуктом когда считается что все составные части разрабатываемой системы полностью готовы xp интеграция кода всей системы выполняется несколько раз день после того как разработчики убедились том что все тесты модулей корректно срабатывают рефакторинг рефакторинг refactoring это методика улучшения кода без изменения его xp подразумевает что однажды написанный код процессе работы над проектом почти наверняка будет неоднократно переделан разработчики xp безжалостно переделывают написанный ранее код для того чтобы улучшить его этот процесс называется рефакторингом отсутствие тестового покрытия провоцирует отказ от рефакторинга связи боязнью поломать систему что приводит постепенной деградации кода частые небольшие релизы версии releases продукта должны поступать эксплуатацию как можно чаще работа над каждой версией должна занимать как можно меньше времени при этом каждая версия должна быть достаточно осмысленной точки зрения полезности для бизнеса чем раньше выпускается первая рабочая версия продукта тем раньше заказчик начинает получать за счёт неё дополнительную прибыль следует помнить что деньги заработанные сегодня стоят дороже чем деньги заработанные завтра чем раньше заказчик приступит эксплуатации продукта тем раньше разработчики получат от него информацию том что соответствует требованиям заказчика эта информация может оказаться чрезвычайно полезной при планировании следующего выпуска простота проектирования xp исходит из того что процессе работы условия задачи могут неоднократно измениться значит разрабатываемый продукт не следует проектировать заблаговременно целиком полностью попытка детально спроектировать систему самом начале работы является напрасной тратой времени xp предполагает что проектирование это настолько важный процесс что его необходимо выполнять постоянно течение всего времени работы над проектом проектирование должно выполняться небольшими этапами учётом постоянно изменяющихся требований каждый момент времени следует пытаться использовать наиболее простой дизайн который подходит для решения текущей задачи менять его по мере того как условия задачи меняются метафора системы архитектура это представление компонентах системы их взаимосвязях между собой разработчикам необходимо проводить анализ архитектуры программного обеспечения для того чтобы понять каком месте системы необходимо добавить новую чем будет новый компонент метафора системы system metaphor это аналог того что большинстве методик называется архитектурой метафора системы даёт команде представление том каким образом система работает настоящее время каких местах добавляются новые компоненты какую форму они должны принять подбор хорошей метафоры облегчает для группы разработчиков понимание того каким образом устроена система иногда сделать это непросто настоящий момент боб мартин признал что метафора системы устарела должна быть заменена на domain driven design стандарты оформления кода все члены команды ходе работы должны соблюдать требования общих стандартов оформления кода благодаря этому члены команды не тратят время на споры вещах которые фактически никак не влияют на скорость работы над проектом обеспечивается эффективное выполнение остальных практик если команде не используются единые стандарты оформления кода разработчикам становится сложнее выполнять рефакторинг при смене партнёров парах возникает больше затруднений общем целом продвижение проекта затрудняется рамках xp необходимо добиться того чтобы было сложно понять кто является автором того или иного участка кода вся команда работает унифицированно как один человек команда должна сформировать набор правил затем каждый член команды должен следовать этим правилам процессе написания кода перечень правил не должен быть исчерпывающим или слишком объёмным задача состоит том чтобы сформулировать общие указания благодаря которым код станет понятным для каждого из членов команды стандарт оформления кода поначалу должен быть простым затем он может постепенно усложняться по мере наработки опыта группой разработчиков не нужно тратить слишком много времени на предварительную разработку стандарта коллективное владение коллективное владение означает что каждый член команды несёт ответственность за весь исходный код таким образом каждый вправе вносить изменения любой участок программы парное поддерживает эту практику работая разных парах все программисты знакомятся со всеми частями кода системы важное преимущество коллективного владения кодом том что оно ускоряет процесс разработки поскольку при появлении ошибки её может устранить любой программист право каждого программиста изменять код ведёт риску появления ошибок вносимых программистами которые считают что знают что делают но не рассматривают некоторые зависимости приверженцы экстремального считают что хорошо определённые юнит тесты решают эту проблему если нерассмотренные зависимости порождают ошибки то ближайший запуск юнит тестов будет неудачным выявит наличие проблемы литература кент бек экстремальное питер isbn кент бек мартин фаулер экстремальное планирование питер isbn кент бек экстремальное разработка через тестирование питер isbn кен ауэр рой миллер экстремальное постановка процесса первых шагов до победного конца питер isbn см также экстремальное управление проектами покер планирования ссылки ward cunningham wiki передний край xp xprogramming com сайт рона джеффриза статьи ресурсы по xp смежным вопросам обзоры книг extreme programming gentle introduction ненавязчивое введение xp дона уэллса maxkir com переводы статей отцов основателей идеологов xp topcoder соревнование по спортивному электронная библиотечка книг по экстремальному экстремальное реальность мифы тестирование свете экстремального часть it психология человеческий фактор парном почему многие не получают желаемого от его внедрения категория технологии организации