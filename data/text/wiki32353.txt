multics мультиплексная информационная вычислительная служба ранняя операционная система разделением времени исполнения программ основанная на концепции одноуровневой памяти разработка операционной системы multics была начата году изначально этом проекте были заняты массачусетский технологический институт mit также компании general electric ge bell labs компания bell labs вышла из проекта году году компьютерный бизнес компании general electric вместе multics отошёл компании honeywell которая продала его bull multics был задуман компанией general electric как коммерческий продукт стал таковым уже под руководством компании honeywell хотя так никогда не нашёл успеха на компьютерном рынке как бы там ни было система multics оказала очень большое влияние на компьютерную индустрию благодаря многим новаторским ценным идеям заложенным неё хотя система подвергалась многочисленным насмешкам со стороны критиков она всё же показала что заложенные неё концепции имеют право на долгосрочную жизнь мире операционных систем система multics имела множество характерных особенностей обеспечивавших её безотказность высокую например дополнительно поддержке модульности программного обеспечения система также была ориентирована на модульную поддержку используемых её работе электронных устройств что позволило наращивать вычислительные возможности системы простой заменой её модулей центрального процессора памяти дискового пространства отдельные для каждого пользователя списки доступа файлам обеспечили весьма гибкий механизм коллективного использования информации системе гарантирующей также обеспечение полной хранимой используемой пользователями информации также система multics обладала рядом стандартных механизмов позволявших инженерам анализировать вычислительные мощности системы также набором механизмов обеспечивавших оптимизацию работы самой операционной системы инновационные идеи multics была одной из первых операционных систем реализовавшей плоскую модель хранения данных чётко разделявшая концепции файлов называемых системе multics сегментами памяти вычислительных процессов память вычислительных процессов состояла из сегментов каждый из которых обладал своим адресным пространством для чтения или записи сегменты вычислительный процесс использовал инструкции центрального процессора системы операционная система брала на себя всю заботу по сохранению изменённых данных на устройстве внешней памяти компьютера таким образом multics была спроектирована реализована полностью файловая система которой файлы физически располагающиеся на разных физических устройствах внешней памяти логически объединяются один архив или древовидную иерархическую структуру промежуточными узлами которой являются именованные каталоги листьях содержатся файлы multics была также спроектирована реализована большая сегментно страничная виртуальная память позволившая использовать отображение файлов сегменты виртуальной памяти иными словами при открытии файла виртуальной памяти процесса образовывался сегмент который полностью отображался файл располагающийся во внешней памяти следует отметить что файловой системе ос multics на базовом уровне поддерживались файлы со страничной структурой более сложные организации являлись надстройкой дальнейшая работа файлом происходила на основе общего механизма управления виртуальной памятью одним из главных неудобств такого подхода появившегося основном из за различий электронных архитектур вычислительных машин на которой система работала было ограничение размера сегмента до битных слов что равно мегабайту поэтому для работы файлами бо льшими по размеру чем установленный лимит должен был использоваться дополнительный код исполняемых программах сами файлы по размеру бо льшие чем битных слов представлялись системой виде ряда соединённых воедино сегментов следует также сказать что до появления больших баз данных графических данных огромных объёмов данное ограничение по размеру файлов нарушалось крайне редко системе multics была впервые реализована следующая инновационная идея динамическое связывание dynamic linking исполняемой программы библиотеками кода благодаря динамическому связыванию исполняемый процесс мог запрашивать системы подключении дополнительных сегментов собственному адресному пространству именно сегментов содержащих полезный код для исполняемой программы таким образом программы смогли автоматически использовать внешние библиотеки кода хранимые отдельных сегментах создавая при этом динамические связи функциями хранимыми этих библиотеках динамическая связь внешним исполняемым кодом создавалась всего один раз во время первого вызова функции из библиотеки дальнейшем могла быть использована повторно так как каждому пользователю системе соответствовали отдельные процессы то различные внешние библиотеки могли быть подключены одной той же программе зависимости от потребностей пользователя равной степени важным являлось то что правильной настройкой системы безопасности multics код из одного сегмента мог получать доступ структурам данных совершенно другом процессе для такого взаимодействия между отдельными daemon процессами или просто демонами процесс пользователя должен был динамически подключить сегмент кода ассоциированный этим процессом вызывать находящиеся там методы код находящийся подключённом сегменте мог напрямую работать используемыми демоне структурами данных когда вызванный код из подключённого сегмента заканчивал работу выполнение возвращалось процесс через обычную процедуру возвращения из вызываемого метода стоит заметить что две приведённые выше идеи так до сих пор не были реализованы полной мере на сегодняшних самых операционных системах несмотря на большое развитие компьютерной техники начавшееся годах хотя своей нынешней реализации эти идеи формируют то что мы называем динамическими связями dynamic linking компьютерных системах отдельно стоит упомянуть том что система multics поддерживала весьма агрессивную всей системы на ходу позволяя подключать отключать настраивать центральные процессоры блоки памяти жёсткие диски другие устройства не останавливая при этом всю систему например mit во время профилактики системы multics было обычной практикой разделять систему которая была на две постепенно конфигурируя компьютерные устройства для создания двух независимых друг от друга систем одна из получившихся систем продолжала обслуживать всех подключённых пользователей другая позволяла проводить профилактику установку новых устройств или обновление программного обеспечения когда все необходимые мероприятия завершались систему вновь собирали единое целое без всяких перезагрузок как уже было упомянуто система multics могла работать на компьютерах по существу явившись одной из самых первых операционных систем multics была также одной из первых систем которой большое внимание уделялось безопасности взаимодействия между программами пользователями более того multics возможно была самой первой операционной системой задуманной изначально реализованной как безопасная несмотря на то что ранние версии системы multics всё таки неоднократно взламывались хакерами взломы системы приводили доработкам системы безопасности которые конечном счете определили широко подходы архитектуре безопасности операционных системах сделали саму систему multics более безопасной как только систему было установлено электронное оборудование второго поколения со встроенной поддержкой привилегий пользователей определяющих права пользователя на доступ данным программам взломы системы multics стали очень редким явлением дополнительно тому что multics одной из первых была реализована иерархическая файловая система имена файлов могли быть практически произвольной длины содержать любые символы файл или каталог могли иметь несколько имён короткое длинное также были доступны для использования символьные ссылки symlink между каталогами также multics был впервые реализован теперь уже стандартный подход использования стеков для каждого вычислительного процесса ядре системы отдельным стеком для каждого уровня безопасности вокруг ядра multics также явилась одной из первых операционных систем написанных на языке высокого уровня pl самой первой такой системой была mcp для компьютеров burroughs которая использовала диалект алгола история проекта изначально multics была разработана для битных мэйнфреймов ge позднее для машин серии honeywell компания bell labs вышла из проекта году несколько человек разрабатывавших систему multics этой компании перешли созданию системы unix позднее созданная система unix показала внешнее сходство системой multics том числе названиях используемых команд однако философия дизайна unix была совершенно другой ориентированной на создание системы как можно меньших размеров настолько простой насколько это будет возможно чём было её основное отличие от системы multics название unix изначально unics было образовано от multics буква названии unix означала uniplexed односложная слову multiplexed комплексная лежавшему основе названия системы multics для того чтобы подчеркнуть попытку создателей unix отойти от сложностей системы multics для выработки более простого подхода компания honeywell выкупила компьютерное подразделение компании ge продолжала разработку системы multics до года около многомиллионных установок было поставлено университетские индустриальные государственные вычислительные центры также начале годов во франции нескольких университетах были установлены компьютеры системой multics после того как компания honeywell прекратила поддержку системы multics пользователи мигрировали на другие системы том числе на системы unix последняя машина multics была остановлена октября года канадском министерстве обороны году исходный код документация multics были переданы компанией bull массачусетскому институту опубликованы на сайте mit дополнительные замечания удивительно что ядро системы multics находившееся постоянно памяти компьютера те далёкие годы часто высмеивавшееся за свой размер сложность занимало всего килобайт кода первые компьютеры ge имели память размером битных слов мегабайта поэтому ядро системы занимало не так уж много места стоит также заметить что вся операционная система включая сложный компилятор языка pl команды дополнительные библиотеки состояла из примерно полутора тысяч исходных файлов каждый из которых содержал примерно по строк кода виде весь этот код занимал около мегабайта что было огромным размером по тем временам компиляторы multics основном оптимизировали код по размеру не по эффективности использования центрального процессора что было обосновано стремлением экономии памяти системе см также фернандо корбато лидер проекта multics пока нём участвовал mit виктор высоцкий один из лидеров проекта besys предшественника multics луи пузен представивший термин оболочка shell командном языке системы multics примечания литература corbato vyssotsky знакомство описание системы multics corbato clingen saltzer multics первые семь лет corbató vyssotsky introduction and overview of the multics system afips is good introduction to the system corbató clingen saltzer multics the first seven years afips is an excellent review written after considerable period of use and improvement over the initial efforts donovan madnick operating systems is fundamental read on operating systems donovan systems programming is good introduction into systems programming and operating systems jerome saltzer introduction to multics mit project mac is considerably longer introduction to the system geared towards actual users elliott organick the multics system an examination of its structure mit press is the standard work on the system although it documents an early version and some features described therein never appeared in the actual system vyssotsky corbató graham structure of the multics supervisor afips describes the basic internal structure of the multics kernel jerome saltzer traffic control in multiplexed computer system mit project mac june is the original description of the idea of switching kernel stacks one of the classic papers of computer science daley neumann general purpose file system for secondary storage afips describes the file system including the access control and backup mechanisms feiertag organick the multics input output system describes the lower levels of the implementation bensoussan clingen daley the multics virtual memory concepts and design acm sosp describes the multics memory system in some detail paul green multics virtual memory tutorial and reflections is good in depth look at the multics storage system roger schell dynamic reconfiguration in modular computer system mit project mac describes the reconfiguration mechanisms paul karger roger schell multics security evaluation vulnerability analysis air force electronic systems division describes the classic attacks on multics security by tiger team jerome saltzer michael schroeder the protection of information in computer systems proceedings of the ieee september describes the fundamentals behind the first round of security upgrades another classic paper schroeder clark saltzer wells final report of the multics kernel design project mit lcs describes the security upgrades added to produce an even more improved version paul karger roger schell thirty years later lessons from the multics security evaluation ibm is an interesting retrospective which compares actual deployed security in today hostile environment with what was demonstrated to be possible decades ago it concludes that multics offered considerably stronger security than most systems commercially available in ссылки сайт всецело посвященный системе multics исходные коды multics документация по ос multics на сайте bitsavers org multicians org is comprehensive site with lot of material multics papers online multics glossary myths discusses numerous myths about multics in some detail including the myths that it failed that it was big and slow as well as few understandable multics security unix and multics multics general info and faq includes extensive overview of other software systems influenced by multics honeywell inc multics records charles babbage institute university of minnesota multics development records include the second multics system programmers manual multics technical bulletins that describe procedures applications and problems especially concerning security and returned request for comments forms that include technical papers and thesis proposals official source code archive at mit multics repository at stratus computer multics at universitaet mainz active project to emulate the honeywell dps multics cpu various scanned multics manuals multicians org and the history of operating systems critical review of multicians org plus capsule history of multics категория программное обеспечение лицензией mit категория свободные операционные системы