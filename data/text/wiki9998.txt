шаблон проектирования или паттерн разработке программного обеспечения повторяемая архитектурная конструкция представляющая собой решение проблемы проектирования рамках некоторого часто возникающего контекста обычно шаблон не является законченным образцом который может быть прямо преобразован код это лишь пример решения задачи который можно использовать различных ситуациях объектно ориентированные шаблоны показывают отношения взаимодействия между классами или объектами без определения того какие конечные классы или объекты приложения будут использоваться низкоуровневые шаблоны учитывающие специфику конкретного языка называются идиомами это хорошие решения проектирования характерные для конкретного языка или программной платформы потому не универсальные на наивысшем уровне существуют архитектурные шаблоны они охватывают собой архитектуру всей программной системы алгоритмы по своей сути также являются шаблонами но не проектирования вычисления так как решают вычислительные задачи история годы архитектор кристофер александр составил набор шаблонов проектирования области архитектуры эта идея не получила такого развития как позже области программной разработки году кент бэк kent beck вард каннингем ward cunningham взяли идеи александра разработали шаблоны применительно разработке программного обеспечения для разработки графических оболочек на языке smalltalk году эрих гамма erich gamma начал писать докторскую диссертацию при цюрихском университете об общей переносимости этой методики на разработку программ годах джеймс коплин james coplien трудился над разработкой идиом для на опубликовал году книгу advanced idioms этом же году эрих гамма заканчивает свою докторскую диссертацию переезжает сша где сотрудничестве ричардом хелмом richard helm ральфом джонсоном ralph johnson джоном влиссидесом john vlissides публикует книгу design patterns elements of reusable object oriented software этой книге описаны шаблона проектирования также команда авторов этой книги известна общественности под названием банда четырёх часто сокращается до gof именно эта книга стала причиной роста популярности шаблонов проектирования плюсы сравнении полностью самостоятельным проектированием шаблоны обладают рядом преимуществ основная польза от использования шаблонов состоит снижении сложности разработки за счёт готовых абстракций для решения целого класса проблем шаблон даёт решению своё имя что облегчает коммуникацию между разработчиками позволяя ссылаться на известные шаблоны таким образом за счёт шаблонов производится унификация деталей решений модулей элементов проекта снижается количество ошибок применение шаблонов концептуально сродни использованию готовых библиотек кода правильно шаблон проектирования позволяет отыскав удачное решение пользоваться им снова снова набор шаблонов помогает разработчику выбрать возможный наиболее подходящий вариант проектирования минусы хотя легкое изменение кода под известный шаблон может упростить понимание кода по мнению стива макконнелла применением шаблонов могут быть связаны две сложности во первых слепое следование некоторому выбранному шаблону может привести усложнению программы во вторых разработчика может возникнуть желание попробовать некоторый шаблон деле без особых оснований многие шаблоны проектирования объектно ориентированном проектировании можно рассматривать как идиоматическое воспроизведение элементов функциональных языков питер норвиг утверждает что из шаблонов описанных книге банды четырёх динамически типизируемых языках реализуются существенно проще чем либо оказываются незаметны пол грэхэм считает саму идею шаблонов проектирования антипаттерном сигналом том что система не обладает достаточным уровнем абстракции необходима её тщательная переработка нетрудно видеть что само определение шаблона как готового решения но не прямого обращения библиотеке по сути означает отказ от повторного использования пользу дублирования это очевидно может быть неизбежным для сложных систем при использовании языков не поддерживающих комбинаторы полиморфизм типов это принципе может быть исключено языках обладающих свойством гомоиконичности хотя не обязательно эффективно так как любой шаблон может быть реализован виде исполнимого кода типы шаблонов проектирования основные название оригинальное название описание описан design patterns основные шаблоны fundamental шаблон делегирования delegation pattern объект внешне выражает некоторое поведение но реальности передаёт ответственность за выполнение этого поведения связанному объекту шаблон функционального дизайна functional design гарантирует что каждый модуль компьютерной программы имеет только одну обязанность исполняет её минимумом побочных эффектов на другие части программы неизменяемый интерфейс immutable interface создание неизменяемого объекта интерфейс interface общий метод для компьютерных программ для того чтобы их было проще понять интерфейс маркер marker interface качестве атрибута как пометки объектной сущности применяется наличие или отсутствие реализации интерфейса маркера современных языках вместо этого могут применяться атрибуты или аннотации контейнер свойств property container позволяет добавлять дополнительные свойства для класса контейнер внутри класса вместо расширения класса новыми свойствами канал событий event channel расширяет шаблон publish subscribe создавая канал для событий использует объект представитель для подписки объект представитель для публикации события канале представитель существует отдельно от реального издателя или подписчика подписчик может получать опубликованные события от более чем одного объекта даже если он зарегистрирован только на одном канале порождающие шаблоны creational шаблоны проектирования которые абстрагируют процесс инстанцирования они позволяют сделать систему независимой от способа создания композиции представления объектов шаблон порождающий классы использует наследование чтобы изменять инстанцируемый класс шаблон порождающий объекты делегирует инстанцирование другому объекту абстрактная фабрика abstract factory класс который представляет собой интерфейс для создания компонентов системы строитель builder класс который представляет собой интерфейс для создания сложного объекта фабричный метод factory method определяет интерфейс для создания объекта но оставляет подклассам решение том какой класс инстанцировать отложенная инициализация lazy initialization объект во время первого обращения нему пул одиночек multiton гарантирует что класс имеет поименованные экземпляры объекта обеспечивает глобальную точку доступа ним объектный пул object pool класс который представляет собой интерфейс для работы набором готовых использованию объектов прототип prototype определяет интерфейс создания объекта через клонирование другого объекта вместо создания через конструктор получение ресурса есть инициализация resource acquisition is initialization raii получение некоторого ресурса совмещается инициализацией освобождение уничтожением объекта одиночка singleton класс который может иметь только один экземпляр структурные шаблоны structural определяют различные сложные структуры которые изменяют интерфейс уже существующих объектов или его реализацию позволяя облегчить разработку оптимизировать программу адаптер adapter wrapper объект обеспечивающий взаимодействие двух других объектов один из которых использует другой предоставляет несовместимый первым интерфейс мост bridge структура позволяющая изменять интерфейс обращения интерфейс реализации класса независимо компоновщик composite объект который объединяет себе объекты подобные ему самому декоратор или wrapper обёртка decorator класс расширяющий другого класса без использования наследования фасад facade объект который абстрагирует работу несколькими классами объединяя их единое целое единая точка входа front controller обеспечивает унифицированный интерфейс для интерфейсов подсистеме front controller определяет высокоуровневый интерфейс упрощающий использование подсистемы приспособленец flyweight это объект представляющий себя как уникальный экземпляр разных местах программы но фактически не являющийся таковым заместитель proxy объект который является посредником между двумя другими объектами который реализует ограничивает доступ объекту которому обращаются через него поведенческие шаблоны behavioral определяют взаимодействие между объектами увеличивая таким образом его гибкость цепочка обязанностей chain of responsibility предназначен для организации системе уровней ответственности команда action transaction command представляет действие объект команды заключает себе само действие его параметры интерпретатор interpreter решает часто встречающуюся но подверженную изменениям задачу итератор cursor iterator представляет собой объект позволяющий получить доступ элементам объекта агрегата без использования описаний каждого из объектов входящих состав агрегации посредник mediator обеспечивает взаимодействие множества объектов формируя при этом слабую связанность избавляя объекты от необходимости явно ссылаться друг на друга хранитель memento позволяет не нарушая инкапсуляцию зафиксировать сохранить внутренние состояния объекта так чтобы позднее восстановить его этих состояниях null object null object предотвращает нулевые указатели предоставляя объект по умолчанию наблюдатель или издатель подписчик observer определяет зависимость типа один ко многим между объектами таким образом что при изменении состояния одного объекта все зависящие от него оповещаются об этом событии servant используется для обеспечения общей группе классов спецификация specification служит для связывания бизнес логики состояние state используется тех случаях когда во время выполнения программы объект должен менять своё поведение зависимости от своего состояния стратегия strategy предназначен для определения семейства алгоритмов инкапсуляции каждого из них обеспечения их шаблонный метод template method определяет основу алгоритма позволяет наследникам переопределять некоторые шаги алгоритма не изменяя его структуру целом посетитель visitor описывает операцию которая выполняется над объектами других классов при изменении класса visitor нет необходимости изменять обслуживаемые классы простая политика simple policy event listener event listener single serving visitor оптимизирует реализацию шаблона посетитель который единожды используется затем удаляется hierarchical visitor предоставляет способ обхода всех вершин иерархической структуры данных напр древовидной concurrency параллелизм частные шаблоны параллельного concurrency используются для более эффективного написания многопоточных программ предоставляет готовые решения проблем синхронизации название оригинальное название описание active object active object служит для отделения потока выполнения метода от потока котором он был вызван использует шаблоны асинхронный вызов методов планировщик balking служит для выполнения действия над объектом только тогда когда тот находится корректном состоянии binding properties комбинирует несколько наблюдателей для обеспечения синхронизации свойств различных объектах messaging pattern messaging design pattern mdp позволяет компонентам приложениям обмениваться информацией сообщениями блокировка двойной проверкой double checked locking предназначен для уменьшения накладных расходов связанных получением блокировки event based asynchronous адресные проблемы асинхронным паттерном которые возникают программах несколькими потоками охраняемая приостановка guarded suspension используется для блокировки выполнения действия над объектом только тогда когда тот находится корректном состоянии half sync half async leaders followers блокировка lock один поток блокирует ресурс для предотвращения доступа или изменения его другими потоками монитор monitor объект предназначенный для безопасного использования более чем одним потоком reactor предназначен для синхронной передачи запросов сервису от одного или нескольких источников read write lock позволяет нескольким потокам одновременно считывать информацию из общего хранилища но позволяя только одному потоку текущий момент времени её изменять планировщик scheduler обеспечивает механизм реализации политики планирования но при этом не зависящих ни от одной конкретной политики предоставляет пул потоков для обработки заданий представленных обычно виде очереди служит для предоставления различных глобальных переменных для разных потоков однопоточное выполнение single thread execution препятствует конкурентному вызову метода тем самым запрещая параллельное выполнение этого метода кооперативный паттерн cooperative pattern обеспечивает механизм безопасной остановки потоков исполнения используя общий флаг для прекращения работы потоков шаблоны архитектуры системы model view controller mvc модель представление контроллер model view presenter model view viewmodel presentation abstraction control naked objects hierarchical model view controller view interactor presenter entity routing viper enterprise active record способ доступа данным реляционных баз данных объектно ориентированном business delegate composite entity составная сущность composite view dao data access object объект доступа данным dispatcher view front controller intercepting filter registry service activator service locator локатор служб service to worker session facade фасад сессии transfer object assembler transfer object объект перемещения value list handler обработчик списка значений view helper unit of work прочие repository хранилище другие типы шаблонов также на сегодняшний день существует ряд других шаблонов carrier rider mapper описывают предоставление доступа хранимой информации аналитические шаблоны описывают основной подход для составления требований для программного обеспечения requirement analysis до начала самого процесса программной разработки шаблоны описывают процесс общения между отдельными участниками сотрудниками организации организационные шаблоны описывают организационную иерархию предприятия фирмы антипаттерны anti design patterns описывают как не следует поступать при разработке программ показывая характерные ошибки дизайне реализации см также антипаттерн дизайн манифест обобщённое шаблоны шаблоны ee cqrs dependency injection книга design patterns от создателей шаблонов проектирования grasp uml примечания литература также isbn ссылки один из многих сайтов шаблонами проектирования на perl portland pattern repository список шаблонов проектирования на движке вики структурные шаблоны проектирования xml resign patterns проломы проектно проектирования пародия на паттерны eclipse culture of shipping erich gamma php design patterns reference and examples видео вебкаст design patterns вебкаст шаблонах проектирования шаблона javenue объектно ориентированное проектирование паттерны проектирования шаблоны java design patterns примеры реализации паттернов на java