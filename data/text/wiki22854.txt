brainfuck один из известнейших эзотерических языков придуман урбаном мюллером году известен своим минимализмом название языка можно перевести на русский как вынос мозга оно напрямую образовано от английского выражения brainfuck brain мозг fuck иметь половое сношение заниматься ерундой язык имеет восемь команд каждая из которых записывается одним символом исходный код программы на brainfuck представляет собой этих символов без какого либо дополнительного синтаксиса одним из мотивов урбана мюллера было создание языка как можно меньшим компилятором отчасти он был вдохновлён языком false для которого существовал компилятор размером байта существуют компиляторы языка brainfuck размером меньше байт программы на языке brainfuck писать сложно за что его иногда называют языком для мазохистов но при этом важно отметить что brainfuck является вполне естественным полным простым языком может использоваться при определении понятия вычислимости машина которой управляют команды brainfuck состоит из упорядоченного набора ячеек указателя текущей ячейки напоминая ленту головку машины тьюринга кроме того подразумевается устройство общения внешним миром см команды через поток ввода поток вывода язык brainfuck можно описать помощью эквивалентов языка си команда brainfuck эквивалент на си описание команды начало программы int char arr memset arr sizeof arr выделяется память под ячеек нулевыми начальными значениями перейти следующей ячейке перейти предыдущей ячейке arri увеличить значение текущей ячейке на putchar arri напечатать значение из текущей ячейки arri getchar ввести извне значение сохранить текущей ячейке while arri если значение текущей ячейки ноль перейти вперёд по тексту программы на ячейку следующую за соответствующей учётом вложенности если значение текущей ячейки не нуль перейти назад по тексту программы на символ учётом вложенности несмотря на внешнюю примитивность brainfuck бесконечным набором ячеек имеет тьюринговскую полноту следовательно по потенциальным возможностям не уступает настоящим языкам подобным си паскалю или java brainfuck подходит для экспериментов по генетическому из за простоты синтаксиса соответственно генерации исходного кода классическом brainfuck описанном мюллером размер ячейки один байт количество ячеек начальном состоянии указатель находится крайней левой позиции все ячейки заполнены нулями увеличение уменьшение значений ячеек происходит по модулю ввод вывод также происходит побайтно учётом кодировки ascii то есть результате операции ввода символ будет записан текущую ячейку как число операция вывода совершённая над ячейкой содержащей напечатает латинскую других вариантах языка размер количество ячеек может быть другим бо льшим есть версии где значение ячеек не целочисленно плавающей точкой пример программы программа на языке brainfuck печатающая hello world разбор программы подготовка памяти ячейки массива значений близких ascii кодам символов которые необходимо вывести через повторение раз приращения ячеек на соответственно присваивание ячейке счетчику значения вернуться началу цикла получение кодов букв их вывод вывод получение кода из ячейке вывод вывод получение кода из ячейке вывод вывод ll получение кода из ячейке вывод дважды вывод получение кода из ячейке вывод вывод пробела получение кода пробела из ячейке вывод вывод получение кода из ячейке вывод вывод код уже находится ячейке просто его выводим вывод получение кода из ячейке вывод вывод получение кода из ячейке вывод вывод получение кода из ячейке вывод вывод получение кода из ячейке вывод вывод кода перевода строки из ячейки принципе печать hello world можно реализовать проще но программа будет три лишним раза больше чем приведённый выше вариант интерпретатор brainfuck пример интерпретатора brainfuck написанный на языке perl usr bin perl open shift code grep for my print chr cpu if code eq cpu ord if code eq if code eq if cpu brc while brc brc if code eq brc if code eq else next elsif code eq if cpu next else brc if code eq while brc brc if code eq brc if code eq пример интерпретатора brainfuck написанный на языке include include include using namespace std static char cpu int main int argc char argv vector acc char ch ifstream infile argv while infile infile get ch acc push_back ch infile close unsigned int int brc for int if acci cpuj if acci if cpuj brc while brc if acci brc if acci brc else continue else if acci if cpuj continue else if acci brc while brc if acci brc if acci brc на языке brainfuck каждый начинающий программировать на brainfuck немедленно сталкивается со следующими проблемами отсутствие операции копирования значения отсутствие промежуточной аккумуляторной памяти отсутствие условных операторов их привычном виде отсутствие привычной арифметики операций умножения деления эти проблемы могут быть решены обозначим через сдвиг на ячеек вправо если влево если раз либо раз zero обнуление текущей ячейки add прибавление значения ячейки текущей значению ячейки при этом значение ячейки теряется обнуляется mov копирование значения ячейки текущей ячейку потерей обнулением значения ячейки zero add copy копирование значения ячейки текущей ячейку использованием промежуточной ячейки благодаря чему значение ячейки не теряется сохраняется zero zero mov ifelse если текущая ячейка то выполняется условие true если текущая ячейка то выполняется условие false относительный номер вспомогательной ячейки устанавливаем флаг для случая else здесь действия ветки true устанавливаем флаг для случая else выход из цикла здесь действия ветки false выход из цикла brainfuck почти не используется для практического за исключением работ отдельных энтузиастов используется преимущественно для головоломок задач для соревнований языки на основе brainfuck ook cow brainfuck описание ook ook moo значение текущей ячейки увеличивает на ook ook значение текущей ячейки уменьшают на ook ook moo следующая ячейка ook ook moo предыдущая ячейка ook ook конец цикла ook ook oom вывод значения текущей ячейки ook ook oom запрос значения текущей ячейки moo отсутствует выполняет инструкцию номером который берётся из текущей ячейки если значение текущей ячейке равно то это приводит бесконечному циклу moo отсутствует если значение текущей ячейки равно нулю то ввести его клавиатуры если же значение текущей ячейки не ноль то вывести его на экран ooo обнуляет значение текущей ячейке mmm отсутствует см также тьюринговская трясина диалекты реализации spoon lolcode whitespace feckfeck ещё описание множества диалектов этого языка можно найти вики энциклопедии эзотерических языков другие абстрактные исполнители формальные системы вычислений алгоритм маркова продукционное машина тьюринга автоматное машина поста автоматное рекурсивная функция теория вычислимости лямбда исчисление функциональное примечания ссылки немного brainfuck на русском языке пара инструментов для работы ним оригинальное описание bf на английском языке ссылки на bf ресурсы brainfuck interpreter with integrated debugger ide for windows русское жж сообщество любителей эзотерических языков статья на rsdn ru об эзотерических языках processing_bf оптимизирующий интерпретатор транслятор php написанный на языке php оптимизирующий интерпретатор на java переехал на brainfuck interpreter bfrun esco универсальный интерпретатор эзотерических языков интерпретатор brainfuck на javascript открытым исходным кодом переводчик brainfuck на perl обратно открытым исходным кодом интерпретатор brainfuck открытым исходным кодом статья создании транслятора brainfuck the brainfuck archive brainfuck on the esolang esoteric languages wiki visual brainfuck brainfuck ide compatible with windows and brainfuck developer brainfuck ide for windows also works with wine under linux bf brainfuck to translator ookie brainfuck and ook language interpreter ook jar another ook and brainfuck language interpreter this time written in java brainforce compiler wrap gcc and translator has lots of options to control wrapping values cell sizes etc esolang brainfuck interpreter for iphone written in objective le brainfuck javascript based optimizing interpreter also has many options including memory dumping brainfuck lightweight brainfuck interpreter written in brainfuck java an interpreter for the brainfuck language and its dialects written in the java programming language lex yacc based brainfuck interpreter in and python bfck open source brainfuck interpreter written in категория эзотерические языки категория модели вычислений