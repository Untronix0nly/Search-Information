мо дула modula язык общего назначения являющийся развитием паскаля разработанный никлаусом виртом году цели принципы разработки языка язык модула был разработан никлаусом виртом для создания системного программного обеспечения разработка которой началась году институте информатики цюриха этим определяются многие его особенности язык изначально проектировался как средство промышленного системного позволяющее писать надёжные понятные удобные сопровождении программы при этом язык должен был оставаясь языком высокого уровня со строгой типизацией поддержкой всех средств надёжного давать возможность обращаться непосредственно аппаратуре создавать специфические системные программы такие как обработчики прерываний драйверы устройств поддерживать параллельно исполняющихся процессов предками модулы были языки паскаль модула также язык потомок паскаля котором появилось понятие модуля средства параллельного единственная реализация модулы была создана году модулу можно рассматривать как первоначальный вариант своего рода альфа версию модулы синтаксически эти два языка очень близки кроме того по словам вирта на модулу оказал влияние язык разработанный xerox parc общая характеристика язык модула структурный модульный язык синтаксисом основанным на языке паскаль но заметно переработанным улучшенным его основные характерные особенности приведены ниже программа представляет собой набор модулей самостоятельных единиц компиляции которые могут компилироваться раздельно при этом программный модуль может но не обязан быть разделён на две части модуль определений модуль реализации модуль определений это внешний интерфейс модуля то есть набор экспортируемых им имён констант переменных типов заголовков процедур функций которые доступны внешним модулям модуль реализации содержит программный код частности конкретизацию описаний всего что перечислено модуле определений например некоторый тип запись может быть объявлен модуле определений указанием лишь его имени модуле реализации полной структурой этом случае внешние модули могут создавать значения данного типа вызывать процедуры функции работающие ним выполнять присваивание переменных но не имеют прямого доступа структуре значений поскольку эта структура не описана модуле определений если для этого же типа описать модуле определений структуру то она станет доступна помимо модулей глобального уровня модуле допускается создавать локальные модули импорт определений описанных прочих модулях полностью контролируется можно импортировать модули определений целиком но синтаксис позволяет существенно уточнять списки импорта например импортировать из модуля конкретные константы переменные процедуры функции только те которые необходимы все средства ввода вывода исключены из языка вместо них используются библиотечные модули на которые возложена задача реализации ввода вывода на конкретных системах однако имеется набор библиотек ввода вывода предоставляющих необходимые функции для типичных случаев ввод вывод основных типов данных использованием текстового терминала файловый ввод вывод язык введён минимум понятий примитивов для многопоточного добавлена также стандартная библиотека поддерживающая параллельные программы включены средства прямого доступа аппаратуре компьютера частности реализовано прямое отображение структур данных на память том числе прямым заданием адреса язык прост по структуре нём имеется только слов для сравнения аде их официальное сообщение языке содержащее исчерпывающее описание модулы занимает страниц полное описание сокращённого варианта пл занимает около страниц особенности синтаксиса описать особенности модулы проще всего путём сравнения языком паскаль наиболее важные отличия помимо введения модулей механизмов управляемого экспорта описаний состоят нижеследующем язык регистро зависимый прописные строчные буквы идентификаторах различаются все ключевые слова пишутся верхнем регистре синтаксис сделан более регулярным упрощён все синтаксические конструкции кроме цикла repeat until следуют принципу конструкция начинающаяся ключевого слова заканчивается ключевым словом частности условный оператор имеет общий вид if условие then операторы elsif условие then операторы elsif условие then операторы else операторы end благодаря этому исчезла необходимость постоянного использования составных операторов begin end лестниц операторов if при проверке условий циклы while for также предусматривают тело из набора операторов заканчиваются словом end добавлен безусловный цикл loop end процедуры функции объявляются ключевым словом procedure добавлен тип bitset битовое поле из языка исключён оператор безусловного перехода goto добавлен процедурный тип дающий возможность присваивать процедуры функции переменным позже эта возможность была включена паскаль где она изначально отсутствовала диалекты существует два основных диалекта модулы первый pim по названию книги никлауса вирта programming in modula где было дано развёрнутое описание языка основных системных библиотек существует трёх основных вариантах появлявшихся последовательно минимально отличающихся друг от друга второй основной диалект iso международной организацией по стандартизации основные отличия диалектов от первоначального описания языка перечислены далее pim требует обязательного использования директивы export модуле определений функция size является библиотечной должна импортироваться из модуля system pim удалена директива export из модулей определений изменение мотивировалось тем что всё содержимое модуля определений экспортируется так что использование export является избыточным функция size является доступна любом месте программы без импорта pim уточнено поведение операции mod для отрицательных операндов добавлено требование согласно которому все строки описанные как array of char должны завершаться нулевым символом ascii nul даже если строка занимает весь массив целиком iso добавлены типы данных complex and longcomplex добавлены исключения добавлена конструкция для кода завершения модуля finally полностью стандартизована библиотека ввода вывода внесены уточнения снявшие большинство оригинального описания сделано много мелких исправлений разъяснений достоинства недостатки можно определённо сказать что язык модула сохранив положительные черты паскаля имеет ряд особенностей делающих её языком гораздо более мощным лучше приспособленным как для системного так для прикладного основные преимущества модулы перед современными ему языками структурного следующие простота лаконичность определения языка полное определение синтаксиса нотации рбнф занимает менее страниц полные синтаксические диаграммы страниц официальное сообщение языке имеет объём страниц что для универсального языка такими возможностями едва ли не абсолютный минимум для сравнения официальное полное определение языка ада занимает машинописных страниц простой логичный однородный синтаксис очищенный от избыточных конструкций элементов провоцирующих ошибки написания модула первый из директивных языков котором удалось отказаться от оператора goto хорошо продуманный механизм разделения программы на единицы компиляции модули явно описываемыми интерфейсами полностью контролируемым импортом позволяющим импортировать как целые модули так отдельные элементы возможностью как указанием имени модуля так использования имён импортированных объектов исключение из языка средств ввода вывода большинства стандартных процедур функций перенос их библиотеки оформленные виде стандартных модулей что упрощает язык компилятор предоставляет реализатору полную свободу способах реализации стандартных процедур функций включение язык механизмов низкоуровневого том числе работы памятью данными указателями что позволяет писать на языке высокого уровня большинство низкоуровневых программ которые традиционно писались на ассемблере таких как драйвера обработчики прерываний наличие элементарных средств параллельного выбранных таким образом чтобы гарантировать их адекватную реализацию как на физически платформах так на платформах разделением времени существенным для времени создания языка было появление процедурного типа соответственно переменных которым можно динамически присваивать процедуры недостаткам языка можно отнести слабость механизмов параллельного частности организации взаимодействия параллельных процессов реализация этих средств переложена на системные библиотеки причём стандартной библиотеке имеются лишь простейшие средства управления параллельная программа на модуле использующая средства управления параллелизмом выходящие за эти рамки автоматически теряет переносимость отсутствие механизмов управления отображением абстрактных типов на память поддержка локальных модулей неоправданно усложняет компилятор поводами для использования вложенных модулей являются ограничение области видимости выделение частей программы для обеспечения синхронизации при параллельной обработке но их можно реализовать другими более простыми очевидными средствами явное разделение на модуль реализации модуль определения спорное решение оно усложняет работу компилятора вынуждает программиста изменения разных файлах можно отметить что потомке модулы обероне от такого разделения отказались вместо этого едином программном модуле экспортируемые элементы составляющие интерфейс модуля просто помечаются специальным образом можно также отметить отсутствие модуле ряда возможностей известных популярных на момент её создания что может быть отнесено как достоинствам так недостаткам языка зависимости от точки зрения конкретного критика отсутствуют динамические массивы строки переменного размера отсутствуют любые встроенные средства обработки исключительных ситуаций отсутствуют средства обобщённого использование ссср первые компиляторы для модула появились годах для эвм см электроника тогда же были выработаны технологии созданы первые пакеты прикладных программ на модуле такие работы велись частности на факультете кибернетика мифи внтк старт вычислительного центра сибирского отделения академии наук ссср разработал серию процессоров кронос аппаратной поддержкой языка модула целом можно сказать что модула не получила того распространения признания которого заслуживала по своим качествам язык завоевал определённую популярность академической среде европы был довольно популярен среди программистов ссср но не смог потеснить своего предшественника новые реализации языка паскаль включившие себя средства организации модулей позже средства объектного всегда обходили модулу по популярности система lilith для которой создавалась модула не получила широкой известности не смогла помочь модуле продвижении свою роль сыграло чрезвычайно широкое распространение дешёвых быстрых паскаль компиляторов фирмы borland international интересно что компилятор turbo modula для ос cp был не только создан borland но даже поступил продажу северной америке западной европе однако руководство компании прежде всего филипп кан приняло решение отказаться от развития этой системы чтобы не создавать конкурента крайне успешному turbo pascal результатом этого решения стало то что вице президент borland нильс йенсен один из основателей компании вместе со своей командой разработчиков году покинул borland выкупив права на turbo modula созданная им компания jpi jensen partners international выпустила под маркой topspeed линейку компиляторов для процессоров семейства assembler modula pascal ada настоящее время язык модула используется для бортового программного обеспечения спутников запускаемых рамках проекта глонасс конце компилятор gnu modula официально включен коллекцию gcc языки потомки модула дальнейшее развитие модулы разработанное совместно фирмами dec olivetti при поддержке вирта оберон дальнейшее развитие модулы созданное виртом году оберон использует автоматическое управление памятью со сборкой мусора также нём изменён ряд черт которые по опыту эксплуатации модулы автор счёл неудачными добавлена экономно реализованная объектная подсистема оберон свою очередь стал родоначальником целой ветви языков оберон оберон component pascal компонентный паскаль активный оберон oberonscript zonnon язык созданный юргом гуткнехтом на основе модулы активного оберона добавлением ряда новых элементов как оригинальных так заимствованных из других языков алма алма является дополненной версией императивного языка modula parallaxis это язык для параллельного данных simd системы разработанный томасом браунлом году язык основан на modula но расширен неавтономными параллельными конструкциями примечания литература вирт на языке модула перевод англ серебрякова ходукина под ред курочкина мир вирт алгоритмы структуры данных версия книги на языке модула москва мир isbn русск англ см также kronos ссылки gnu modula free modula pages freepages modula org ресурс пользователей языка примеры кода категория семейство языков модула