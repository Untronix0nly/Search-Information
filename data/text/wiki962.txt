произносится си шарп объектно ориентированный язык разработан годах группой инженеров компании microsoft под руководством андерса хейлсберга скотта вильтаумота как язык разработки приложений для платформы microsoft net framework впоследствии был как ecma iso iec относится семье языков подобным синтаксисом из них его синтаксис наиболее близок java язык имеет статическую типизацию поддерживает полиморфизм перегрузку операторов том числе операторов явного неявного приведения типа делегаты атрибуты события свойства обобщённые типы методы итераторы анонимные функции поддержкой замыканий linq исключения комментарии формате xml переняв многое от своих языков pascal модула smalltalk особенности java опираясь на практику их использования исключает некоторые модели себя как проблематичные при разработке программных систем например отличие от некоторых других языков не поддерживает множественное наследование классов между тем допускается множественное наследование интерфейсов особенности языка разрабатывался как язык прикладного уровня для clr как таковой зависит прежде всего от возможностей самой clr это касается прежде всего системы типов которая отражает bcl присутствие или отсутствие тех или иных выразительных особенностей языка диктуется тем может ли конкретная языковая особенность быть транслирована соответствующие конструкции clr так развитием clr от версии значительно обогатился сам подобного взаимодействия следует ожидать дальнейшем однако эта закономерность была нарушена выходом представляющего собой расширения языка не опирающиеся на расширения платформы net clr предоставляет как всем другим net ориентированным языкам многие возможности которых лишены классические языки например сборка мусора не реализована самом производится clr для программ написанных на точно так же как это делается для программ на vb net др название языка файл treblecsharp svg thumb px нота название си шарп от англ sharp диез происходит от буквенной музыкальной нотации где латинской букве соответствует нота до знак диез англ sharp означает повышение ноте звука на полутон что аналогично названию языка где обозначает инкремент переменной название также является игрой цепочкой так как символ можно представить состоящим из знаков из за технических ограничений на отображение стандартные шрифты браузеры того что знак диеза не представлен на стандартной клавиатуре компьютера при записи имени языка используют знак решётки это соглашение отражено спецификации языка ecma тем не менее на практике например при размещении рекламы коробочном дизайне майкрософт использует знак диеза названия языков не принято переводить поэтому язык называют используя транскрипцию си шарп стандартизация ecma ecma iso iso iec известно как минимум трёх независимых реализациях базирующихся на этой спецификации находящихся настоящее время на различных стадиях разработки mono начата компанией ximian продолжена её покупателем преемником novell затем xamarin dotgnu portable net разрабатываемые free software foundation версии на протяжении разработки языка было выпущено несколько его версий версия спецификация языка дата net framework visual studio ecma iso iec microsoft декабрь апрель январь январь net framework visual studio net октябрь апрель net framework visual studio net июнь сентябрь сентябрь ноябрь net framework visual studio август ноябрь net framework visual studio апрель апрель net framework visual studio декабрь июнь август net framework visual studio июль июль net framework visual studio март март net framework visual studio общая информация по версиям версия нововведения частичные типы обобщённые типы generics итераторы ключевое слово yield анонимные методы оператор null объединения nullable типы запросы интегрированные язык linq инициализаторы объектов коллекций лямбда выражения деревья выражений неявная типизация ключевое слово var анонимные типы методы расширения автоматические свойства динамическое связывание ключевое слово dynamic именованные опциональные аргументы обобщенная ковариантность библиотека tpl концепция задач классы task parallel класс memorycache классы параллельных коллекций шаблон tap асинхронные методы async await сведения вызывающем объекте компилятор как сервис импорт членов статических типов пространство имён фильтры исключений await блоках catch finally инициализаторы автосвойств автосвойства только для чтения null условные операции интерполяция строк оператор nameof инициализатор словаря функции сжатые до выражений out переменные сопоставление шаблоном шаблоны is шаблоны выражение switch кортежи распаковка кортежей деконструкторы локальные функции улучшения литералов локальные переменные возвращаемые значения по ссылке расширение списка типов возвращаемых асинхронными методами больше членов класса виде выражений throw выражения версия проект был начат декабре получил кодовое название cool style object oriented language версия была анонсирована вместе платформой net июне года тогда же появилась первая общедоступная бета версия окончательно вышел вместе microsoft visual studio net феврале года первая версия напоминала по своим возможностям java несколько их расширяя так имелись свойства выглядящие коде как поля объекта но на деле вызывающие при обращении ним методы класса индексаторы подобные свойствам но принимающие параметр как индекс массива события делегаты циклы foreach структуры передаваемые по значению автоматическое преобразование встроенных типов объекты при необходимости boxing атрибуты встроенные средства взаимодействия неуправляемым кодом dll com прочее кроме того решено было перенести некоторые возможности отсутствовавшие java беззнаковые типы перегрузку операторов некоторыми ограничениями отличие от передача параметров метод по ссылке методы переменным числом параметров оператор goto ограничениями также оставили ограниченную возможность работы указателями местах кода специально обозначенных словом unsafe при указании специальной опции компилятору версия проект спецификации впервые был опубликован microsoft октябре года году выходили бета версии проект кодовым названием whidbey окончательно вышел ноября года вместе visual studio net новые возможности версии частичные типы разделение реализации класса более чем на один файл обобщённые или типы generics отличие от шаблонов они поддерживают некоторые дополнительные возможности работают на уровне виртуальной машины вместе тем параметрами обобщённого типа не могут быть выражения они не могут быть полностью или частично не поддерживают шаблонных параметров по умолчанию от шаблонного параметра нельзя наследоваться новая форма итератора позволяющая создавать сопрограммы помощью ключевого слова yield подобно python ruby анонимные методы обеспечивающие замыкания оператор null объединения return obj obj означает нотации return obj null obj obj обнуляемые nullable типы значения обозначаемые вопросительным знаком например int null представляющие собой те же самые типы значения способные принимать также значение null такие типы позволяют улучшить взаимодействие базами данных через язык sql возможность создавать хранимые процедуры триггеры даже типы данных на net языках том числе на поддержка разрядных вычислений что кроме всего прочего позволяет увеличить адресное пространство использовать разрядные примитивные типы данных версия июне года андерс хейлсберг впервые рассказал на сайте microsoft планируемых расширениях языка сентябре года вышли проект спецификации бета версия устанавливаемая виде дополнения существующим visual studio net окончательно эта версия языка вошла visual studio net новые возможности версии появились следующие радикальные добавления языку ключевые слова select from where позволяющие делать запросы из xml документов коллекций эти запросы имеют сходство запросами sql реализуются компонентом linq сама фраза language integrated query переводится запрос интегрированный язык инициализация объекта вместе его свойствами customer new customer name james age можно записать как customer new customer name james age лямбда выражения listoffoo where delegate foo return size теперь можно записать как listoffoo where size деревья выражений лямбда выражения теперь могут представляться виде структуры данных доступной для обхода во время выполнения тем самым позволяя транслировать строго типизированные выражения другие домены например выражения sql неявная типизация вывод типов локальной переменной для неявной типизации вместо названия типа данных используется ключевое слово var затем уже при компиляции компилятор сам выводит тип данных исходя из присвоенного значения var hello вместо string hello анонимные типы var new name james методы расширения появилась возможность добавления новых методов уже существующие классы реализуется помощью ключевого слова this при первом параметре статической функции статического класса public static class public static int toint this string val return int parse val string int toint автоматические свойства компилятор сгенерирует закрытое private поле соответствующие аксессор мутатор для кода вида public string name get private set совместим по генерируемому msil коду улучшения языке чисто синтаксические реализуются на этапе компиляции например многие из интегрированных запросов linq можно осуществить используя безымянные делегаты сочетании предикатными методами над контейнерами наподобие list findall list removeall версия превью было представлено конце года вместе ctp версией visual studio visual basic были выпущены апреле года одновременно выпуском visual studio новые возможности версии возможность использования позднего связывания для использования языками динамической типизацией python ruby com объектами отражения reflection объектов изменяемой структурой dom появляется ключевое слово dynamic именованные опциональные параметры новые возможности com interop ковариантность обобщенных интерфейсов делегатов контракты коде code contracts библиотека параллельных задач tpl task parallel library концепция задач классы task taskfactory parallel добавлен класс memorycache который предназначен для кэширования контента он похож на класс cache asp net но его можно использовать при написании веб графических консольных приложений добавлено пространство имен system collections concurrent новые классы параллельных коллекций concurrentqueue concurrentstack concurrentbag которые предоставляют не только большую эффективность но более полную примеры dynamic calc getcalculator int sum calc add динамический вызов public void somemethod int int int опциональные параметры версия новые возможности версии шаблон tap task based asynchronous pattern tap использует один метод для представления инициализации завершения асинхронной операции асинхронные методы async await как реализация шаблона tap сведения вызывающем объекте версия новые возможности версии null условные операторы добавлены новые операторы int length customers length null if customers is null customer first customers null if customers is null функции сжатые до выражений expression bodied functions теперь определение метода может быть задано использованием лямбда синтаксиса public point move int dx int dy new point dx dy инициализаторы автосвойств автосвойства теперь можно при объявлении public string first get set jane автосвойства только для чтения автосвойства теперь могут быть объявлены без сеттеров public string first get jane инициализаторы индексов теперь можно не только объекты коллекции но словари var numbers new dictionary seven nine thirteen интерполяция строк вместо использования конструкций string format например var string format is year old name age теперь можно размещать код прямо строке var name is age year old фильтры исключений появилась возможность задавать условия для блоков catch try catch exception when log импорт статических функций типов теперь доступ статическим членам типов возможен без указания полного имени этих членов using static system console using static system math class program static void main writeline sqrt оператор nameof новый оператор который возвращает компактное строковое представление для переданного качестве аргумента типа writeline nameof person address zipcode prints zipcode для асинхронного была добавлена возможность использования операторов await внутри блоков catch finally resource res null try res await resource openasync you could do this catch await resource logasync res now you can do this finally if res null await res closeasync and this версия новые возможности версии out переменные которые позволяют объявить переменные сразу вызове метода причем областью видимости для таких переменных является внешний блок getcoordinates out int out int сопоставление шаблоном вводится понятие шаблона pattern который представляет собой синтаксическую конструкцию позволяющую проверить соответствие переменной определённой форме извлечь из неё информацию шаблоны is is теперь может использоваться не только типом но шаблоном качестве правого аргумента шаблоны выражение switch варианты использования switch были расширены теперь можно использовать любые типы не только примитивные использовать шаблоны выражениях case добавлять дополнительные условия выражениям case используя ключевое слово when кортежи добавлен новый значимый тип кортеж синтаксис работы данными этого типа string string string lookupname long id возвращаемый тип кортеж инициализируем данные return first middle last литерал кортежа распаковка кортежей была добавлена новая синтаксическая конструкция деконструктор позволяющая извлечь кортеж состоящий из членов класса локальные функции теперь функцию которая используется только теле какого либо метода можно объявить прямо теле этого метода улучшения литералов были добавлены бинарные литералы символ разделителя числовых литералах локальные переменные возвращаемые значения по ссылке расширена ключевого слова ref теперь можно возвратить данные из метода или сохранить их локальной переменной по ссылке расширение списка типов возвращаемых асинхронными методами больше членов класса виде выражений синтаксис функций сжатых до выражений expression bodied functions теперь применим для сеттеров геттеров конструкторов деструкторов throw выражения теперь можно использовать throw функциях сжатых до выражений expression bodied functions public string getlastname throw new пример hello world ниже представлен код классической программы hello world на для консольного приложения using system namespace example class program static void main console writeline hello world вывод заданного текста консоль console readkey ожидание нажатия клавиши пользователем код этой же программы для приложения windows forms assembly system dll assembly system drawing dll assembly system windows forms dll using system using system drawing using system windows forms namespace windowsforms public class program stathread public static void main new demoform showdialog public class demoform form label label new label public demoform label text hello world this controls add label this startposition centerscreen this backcolor color white this formborderstyle formborderstyle fixed реализации существует несколько реализаций реализация виде компилятора csc exe включена состав net framework включая net micro framework net compact framework его реализации под silverlight windows phone составе проекта rotor shared source common language infrastructure компании microsoft проект mono включает себя реализацию открытым исходным кодом проект dotgnu также включает компилятор открытым кодом dotnetanywhere ориентированная на встраиваемые системы реализация clr поддерживает практически всю спецификацию см также microsoft visual studio сравнение sharp java cosmos операционная система vala примечания литература ссылки основные материалы по visual руководство по на язык инструкции по практическое руководство создание приложений windows forms на доклад подробно описывающий новшества языке версии категория семейство языков sharp категория языки семейства категория языки платформы net категория языки веб категория языки автоматическим управлением памятью категория высокоуровневые языки