интерпретатор от толкователь программа разновидность транслятора выполняющая интерпретацию интерпретация построчный анализ обработка выполнение исходного кода программы или запроса отличие от компиляции где весь текст программы перед запуском анализируется транслируется машинный или байт код без её выполнения типы интерпретаторов простой интерпретатор анализирует тут же выполняет собственно интерпретация программу покомандно или построчно по мере поступления её исходного кода на вход интерпретатора достоинством такого подхода является мгновенная реакция недостаток такой интерпретатор обнаруживает ошибки тексте программы только при попытке выполнения команды или строки ошибкой интерпретатор компилирующего типа это система из компилятора переводящего исходный код программы промежуточное представление например байт код или код собственно интерпретатора который выполняет полученный промежуточный код так называемая виртуальная машина достоинством таких систем является большее быстродействие выполнения программ за счёт выноса анализа исходного кода отдельный разовый проход минимизации этого анализа интерпретаторе недостатки большее требование ресурсам требование на корректность исходного кода применяется таких языках как java php tcl perl rexx сохраняется результат парсинга исходного кода также различных субд случае разделения интерпретатора компилирующего типа на компоненты получаются компилятор языка простой интерпретатор анализом исходного кода причём исходный код для такого интерпретатора не обязательно должен иметь текстовый формат или быть байт кодом который понимает только данный интерпретатор это может быть машинный код какой то существующей аппаратной платформы примеру виртуальные машины вроде qemu bochs vmware включают себя интерпретаторы машинного кода процессоров семейства некоторые интерпретаторы например для языков лисп scheme python бейсик других могут работать режиме диалога или так называемого цикла чтения вычисления печати таком режиме интерпретатор считывает законченную конструкцию языка например expression языке лисп выполняет её печатает результаты после чего переходит ожиданию ввода пользователем следующей конструкции уникальным является язык forth который способен работать как режиме интерпретации так компиляции входных данных позволяя переключаться между этими режимами произвольный момент как во время трансляции исходного кода так во время работы программ следует также отметить что режимы интерпретации можно найти не только программном но аппаратном обеспечении так многие микропроцессоры интерпретируют машинный код помощью встроенных микропрограмм процессоры семейства начиная pentium например на архитектуре intel во время исполнения машинного кода предварительно транслируют его во внутренний формат микроопераций алгоритм работы простого интерпретатора прочитать инструкцию инструкцию определить соответствующие действия выполнить соответствующие действия если не достигнуто условие завершения программы прочитать следующую инструкцию перейти пункту достоинства недостатки интерпретаторов достоинства бо льшая переносимость программ программа будет работать на любой платформе на которой есть соответствующий интерпретатор как правило более совершенные наглядные средства диагностики ошибок исходных кодах меньшие размеры кода по сравнению машинным кодом полученным после обычных компиляторов недостатки программа не может выполняться отдельно без программы интерпретатора сам интерпретатор при этом может быть очень компактным программа выполняется медленнее поскольку промежуточный анализ исходного кода планирование его выполнения требуют дополнительного времени сравнении исполнением машинного кода который мог бы быть скомпилирован исходный код практически отсутствует оптимизация кода что приводит дополнительным потерям скорости работы программ см также jit интерпретация примечания