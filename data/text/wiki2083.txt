кэш или кеш от прятать произносится кэш промежуточный буфер быстрым доступом содержащий информацию которая может быть запрошена наибольшей вероятностью доступ данным кэше осуществляется быстрее чем выборка исходных данных из более медленной памяти или удаленного источника однако её объём существенно ограничен по сравнению хранилищем исходных данных история впервые слово cache компьютерном контексте было использовано году во время подготовки статьи для публикации журнале ibm systems journal статья касалась памяти разрабатываемой модели из серии ibm system редактор журнала лайл джонсон попросил придумать более описательный термин нежели буфер но из за отсутствия идей сам предложил слово cache статья была опубликована начале года авторы были премированы ibm их работа получила распространение впоследствии была улучшена слово кэш вскоре стало использоваться компьютерной литературе как общепринятый термин отображение кэша памяти цпу основной памяти кэш это память большей скоростью доступа предназначенная для ускорения обращения данным содержащимся постоянно памяти меньшей скоростью доступа далее основная память кэширование применяется цпу жёсткими дисками браузерами веб серверами службами dns wins кэш состоит из набора записей каждая запись ассоциирована элементом данных или блоком данных небольшой части данных которая является копией элемента данных основной памяти каждая запись имеет идентификатор часто называемый тегом определяющий соответствие между элементами данных кэше их копиями основной памяти когда клиент кэша цпу веб браузер операционная система обращается данным прежде всего исследуется кэш если кэше найдена запись идентификатором совпадающим идентификатором затребованного элемента данных то используются элементы данных кэше такой случай называется попаданием кэша если кэше не найдена запись содержащая затребованный элемент данных то он читается из основной памяти кэш становится доступным для последующих обращений такой случай называется промахом кэша процент обращений кэшу когда нём найден результат называется уровнем попаданий или коэффициентом попаданий кэш например веб браузер проверяет локальный кэш на диске на наличие локальной копии веб страницы соответствующей запрошенному url этом примере url это идентификатор содержимое веб страницы это элементы данных если кэш ограничен объёме то при промахе может быть принято решение отбросить некоторую запись для освобождения пространства для выбора отбрасываемой записи используются разные алгоритмы вытеснения при модификации элементов данных кэше выполняется их обновление основной памяти задержка во времени между модификацией данных кэше обновлением основной памяти управляется так называемой политикой записи кэше немедленной записью каждое изменение вызывает синхронное обновление данных основной памяти кэше отложенной записью или обратной записью обновление происходит случае вытеснения элемента данных периодически или по запросу клиента для отслеживания элементов данных записи кэша хранят признак модификации изменённый или грязный промах кэше отложенной записью может потребовать два обращения основной памяти первое для записи заменяемых данных из кэша второе для чтения необходимого элемента данных случае если данные основной памяти могут быть изменены независимо от кэша то запись кэша может стать неактуальной протоколы взаимодействия между кэшами которые сохраняют согласованность данных называют протоколами когерентности кэша аппаратная реализация кэш центрального процессора связи ростом частоты на которой функционируют процессоры повышением подсистемы оперативной памяти озу узким местом вычислительной системы стал интерфейс передачи данных кэш память может давать значительный выигрыш случае когда тактовая частота озу значительно меньше тактовой частоты процессора ряд моделей процессоров обладают собственным кэшем для минимизации времени доступа оперативной памяти озу которая медленнее чем регистры эти регистры буферы ввода вывода могут считаться кэшем нулевого уровня тактовая частота для кэш памяти обычно ненамного меньше частоты цп процессорах поддержкой виртуальной адресации часто вводят небольшой буфер трансляций адресов tlb его скорость важна так как он опрашивается на каждом обращении память проблема синхронизации между различными кэшами как одного так множества процессоров решается когерентностью кэша существует три варианта обмена информацией между кэш памятью различных уровней или как говорят кэш архитектуры инклюзивная эксклюзивная неэксклюзивная эксклюзивная кэш память предполагает уникальность информации находящейся различных уровнях кэша предпочитает фирма amd неэксклюзивной кэши могут вести себя как угодно уровни кэша кэш центрального процессора разделён на несколько уровней максимальное количество кэшей четыре универсальном процессоре настоящее время число уровней может достигать трёх кэш память уровня как правило больше по размеру медленнее по скорости доступа передаче данных чем кэш память уровня самым быстрым является кэш первого уровня cache level cache по сути он является неотъемлемой частью процессора поскольку расположен на одном ним кристалле входит состав функциональных блоков современных процессорах обычно разделен на два кэша кэш команд инструкций кэш данных гарвардская архитектура большинство процессоров без не могут функционировать работает на частоте процессора общем случае обращение нему может производиться каждый такт зачастую является возможным выполнять несколько операций чтения записи одновременно вторым по быстродействию является кэш второго уровня cache который обычно как расположен на одном кристалле процессором ранних версиях процессоров реализован виде отдельного набора микросхем памяти на материнской плате объём от кбайт до мбайт современных многоядерных процессорах кэш второго уровня находясь на том же кристалле является памятью раздельного пользования при общем объёме кэша мбайт на каждое ядро приходится по мбайта где количество ядер процессора кэш третьего уровня наименее но он может быть очень большим более мбайт медленнее предыдущих кэшей но всё равно значительно быстрее чем оперативная память системах находится общем пользовании предназначен для синхронизации данных различных существует четвёртый уровень кэша применение которого оправдано только для серверов мейнфреймов обычно он реализован отдельной микросхемой ассоциативность кэша одна из фундаментальных характеристик кэш памяти уровень ассоциативности отображает её логическую сегментацию которая вызвана тем что перебор всех строк кэша поисках необходимых данных потребовал бы десятков тактов свёл бы на нет весь выигрыш от использования встроенной цп памяти поэтому ячейки озу жёстко привязываются строкам кэш памяти каждой строке могут быть данные из фиксированного набора адресов что значительно сокращает время поиска при одинаковом объёме кэша схема большей будет наименее быстрой но наиболее эффективной после реализации прирост удельной эффективности на один поток растет мало кэширование внешних накопителей многие периферийные устройства хранения данных используют внутренний кэш для ускорения работы частности жёсткие диски используют кэш память от до мбайт модели поддержкой ncq tcq используют её для хранения обработки запросов устройства чтения cd dvd bd дисков также кэшируют прочитанную информацию для ускорения повторного обращения операционная система также использует часть оперативной памяти качестве кэша дисковых операций например для внешних устройств не обладающих собственной кэш памятью том числе жёстких дисков flash памяти гибких дисков часто для кэширования жёстких дисков предоставляется вся свободная не выделенная процессам оперативная память применение кэширования внешних накопителей обусловлено следующими факторами скорость доступа процессора оперативной памяти сотни более раз больше чем памяти внешних накопителей дисковых устройств хранения жесткие гибкие оптические диски максимальна при чтении записи нескольких последовательно расположенных блоков значительно уменьшается при одиночных запросах разные места диска что связано инерцией механического привода головки крайне неравномерная частота обращения различным блокам памяти внешних накопителей использование части блоков несколькими процессами одновременно по чтению записи например базах данных очень частое чтение части блоков индексные файлы каталоги файловой системе очень частая запись части блоков файлы логов журналов баз данных метаданные файловой системы при чтении кэш позволяет прочитать блок один раз затем хранить одну копию блока оперативной памяти для всех процессов выдавать содержимое блока мгновенно по сравнению запросом диску существует техника предзапроса фоновом режиме операционной системой считываются кэш также несколько следующих блоков после нужного при записи кэш позволяет сгруппировать короткие записи более крупные которые эффективнее обрабатываются накопителями либо избежать записи промежуточных модификаций при этом все промежуточные состояния блока видны процессам из оперативной памяти кэширование внешних устройств хранения значительно увеличивает системы за счёт оптимизации использования ввода вывода преимуществом технологии является прозрачная незаметная для программ автоматическая оптимизация использования памяти дисков при неизменности логики приложений работающих файлами недостатком кэширования записи является промежуток времени между запросом на запись от программы фактической записью блока на диск также изменение порядка выполнения записей что может приводить потерям информации или структур при сбое питания или зависании системы данная проблема сглаживается принудительной периодической синхронизацией записью изменённых строк кэша журналированием файловых систем программная реализация политика записи при кэшировании при чтении данных кэш память даёт однозначный выигрыш при записи данных выигрыш можно получить только ценой снижения надёжности поэтому различных приложениях может быть выбрана та или иная политика записи кэш памяти существуют две основные политики записи кэш памяти сквозная запись write through отложенная запись write back сквозная запись запись производится непосредственно основную память дублируется кэш то есть запись не кэшируется отложенная запись запись данных производится кэш запись же основную память производится позже при вытеснении или по истечении времени группируя одной операции несколько операций записи соседние ячейки технология обратной записи на некоторое время делает данные основной памяти неактуальными для самого цп эти неактуальности не заметны но перед обращением памяти другого ведущего системной шины контроллера dma bus master устройства шины pci кэш должен быть записан память принудительно при использовании обратной записи системе кэши различных цп должны быть согласованы или процессоры должны использовать одну кэш память алгоритм работы кэша отложенной записью изначально все заголовки буферов помещаются список свободных буферов если процесс намеревается прочитать или модифицировать блок то он выполняет следующий алгоритм пытается найти хеш таблице заголовок буфера заданным номером случае если полученный буфер занят ждёт его освобождения случае если буфер не найден хеш таблице берёт первый буфер из хвоста списка свободных случае если список свободных буферов пуст то выполняется алгоритм вытеснения см ниже случае если полученный буфер помечен как грязный выполняет асинхронную запись содержимого буфера во внешнюю память удаляет буфер из хеш таблицы если он был помещён неё помещает буфер хеш таблицу новым номером процесс читает данные полученный буфер освобождает его случае модификации процесс перед освобождением помечает буфер как грязный при освобождении буфер помещается голову списка свободных буферов таким образом если процесс прочитал некоторый блок буфер то велика вероятность что другой процесс при чтении этого блока найдёт буфер оперативной памяти запись данных во внешнюю память выполняется только тогда когда не хватает чистых буферов либо по запросу алгоритм вытеснения если список свободных буферов пуст то выполняется алгоритм вытеснения буфера алгоритм вытеснения существенно влияет на кэша существуют следующие алгоритмы lru вытесняется буфер дольше всех mru вытесняется последний использованный буфер вытесняется буфер использованный реже всех алгоритм вытеснения комбинирующий lru lfu запатентованный ibm применение того или иного алгоритма зависит от стратегии кэширования данных lru наиболее эффективен если данные гарантированно будут повторно использованы ближайшее время mru наиболее эффективен если данные гарантированно не будут повторно использованы ближайшее время случае если приложение явно указывает стратегию кэширования для некоторого набора данных то кэш будет функционировать наиболее эффективно кэширование выполняемое операционной системой кэш оперативной памяти состоит из следующих элементов набор страниц оперативной памяти разделённых на буферы равные по длине блоку данных устройства внешней памяти набор заголовков буферов описывающих состояние буфера хеш таблицы содержащей соответствие номера блока заголовку списки свободных буферов кэширование интернет страниц процессе передачи информации по сети может использоваться кэширование интернет страниц процесс сохранения часто запрашиваемых документов на промежуточных прокси серверах или машине пользователя целью предотвращения их постоянной загрузки сервера источника уменьшения трафика таким образом информация перемещается ближе пользователю управление кэшированием осуществляется при помощи http заголовков как вариант кэширование веб страниц может осуществляться помощью cms конкретного сайта для снижения нагрузки на сервер при большой посещаемости кэширование может производиться как память так файловый кэш недостаток кэширования заключается том что изменения внесенные на одном браузере могут не сразу отражаться другом браузере котором данные берутся из кэш памяти кэширование результатов работы многие программы записывают куда либо промежуточные или вспомогательные результаты работы чтобы не вычислять их каждый раз когда они понадобятся это ускоряет работу но требует дополнительной памяти оперативной или дисковой примером такого кэширования является индексирование баз данных см также алгоритмы кэширования когерентность кэша кэш процессора примечания литература бах дж архитектура операционной системы unix категория кэш категория информатика