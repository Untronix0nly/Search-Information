eiffel эйфель объектно ориентированный язык алголоподобным синтаксисом разработанный бертраном мейером этом языке впервые был реализован метод контрактного существуют компиляторы эйфеля для windows dos os unix большинство реализаций eiffel генерирует код си то есть являются своеобразным препроцессором далее этот код компилируется помощью компилятора си однако есть системы которые порождают непосредственно машинный код например visual eiffel ключевые особенности объектно ориентированная программная структура которой класс выступает качестве основной единицы декомпозиции дизайн по контракту тесно интегрирован другими языковыми конструкциями автоматическое управление памятью как правило осуществляется процессе сборки мусора наследование том числе множественное наследование переименование переопределения конструкция select выбор наследование без полиморфизма другие механизмы призванные сделать наследование безопасным ограниченное неограниченное обобщённое единая система типов использующая механизмы как значащих так ссылочных типов данных которых все типы включая базовые например integer являются классами типо безопасность статическая типизация статическая защита от вызовов по пустой ссылке используя механизм прикрепления типов агенты объекты сворачивающие вычисления внутри себя тесно связаны механизмами замыканий лямбда выражений единоразовые процедуры или процедуры выполняющиеся только один раз для совместного использования объекта инициализации традиционный синтаксис на основе ключевых слов языков алгол паскаль но без использования сепаратора точка запятой конце инструкции не является обязательной регистру hello world коротко class hello create make feature make do print hello world end end или развёрнуто соблюдая стиль написания note description программа здравствуй мир author elizabeth brown class hello create make feature make напечатать простое сообщение do print hello world end end примеры кода особенности языка пример объявления класса на eiffel class квадрат inherit прямоугольник квадрат подкласс прямоугольника может быть указано более одного блока inherit для каждого родительского класса может быть указан список наследуемых методов таким образом решается проблема конфликтов множественного наследования create перечень имен конструкторов feature свойства описываемые здесь являются видимыми для всех клиентов более точно такая запись эквивалентна записи feature any что означает что свойства определенные этом разделе доступны классу any всем его наследникам так как класс any является родителем всех классов истоком графа классов которых явном виде не заданы родительские классы то это означает доступность для использования любым классом feature child свойства описываемые здесь являются доступными для использования для класса child его наследников feature none свойства описываемые здесь являются скрытыми для использования клиентами более точно доступны только для класса none который является стоком графа классов end где свойства это общее название полей данных методов то есть атрибутов подпрограмм терминологии eiffel подпрограммы подклассах классах наследниках могут замещать переопределять наследуемые только при конформности то есть совпадении их сигнатур ещё пример class complex create make feature real_part imag_part real feature make real do real_part imag_part end end описание переменной выглядит сходно описанием переменных паскаль подобных языках тип например complex_num complex инициализация создание объекта вызовом конструктора create complex_num make ранее использовался несколько иной синтаксис при котором служебное слово create заменялось на двойной восклицательный знак complex_num make языке eiffel нет деструкторов но есть автоматический сборщик мусора когда на объект не останется ссылок он будет уничтожен сборщиком мусора язык eiffel поддерживает множественное наследование несколько разделов inherit абстрактные классы определяются добавлением слова deferred отложенный deferred class figure тело класса end отложенные свойства будут определяться классах наследниках для того чтобы можно было создать объект класса он не должен содержать ни одного отложенного свойства самым характерным свойством языка eiffel являются встроенные утверждения для создания принудительного контракта между вызывающим оператором вызываемым кодом подпрограмм см также планкалкюль все обращения свойствам объектов по умолчанию динамические хотя компиляторы могут разобраться где динамическое связывание может быть заменено на статическое естественно делают это такая особенность позволяет не вводить понятие virtual виртуальный наоборот вводится понятие frozen замороженное то есть свойство язык различает на уровне описаний два вида данных ссылочные expanded структурные развёрнутые что также применимо описаниям переменных это позволяет минимизировать разницу между ссылкой на объект самим объектом разница эта проявляется при присваивании копировании создании объектов переопределение операций для подпрограмм доступен синтаксис операций то есть инфиксный оператор является псевдонимом для метода plus для product class integer feature feature plus alias other like current like current do end product alias other like current like current do end end данный синтаксис является развитием способа переопределения операций языке клу отличие от клу eiffel позволяет также определение свободных операций знаки которых могут состоять из одного или более символов из следующего набора при условии что этот символ или комбинация символов не заняты синтаксисе eiffel для других целей вот примеры возможных свободных операций причины слабого распространения языка компиляторы eiffel от автора языка дороги не так распространены как компиляторы что своё время ограничило распространение этого языка свободных бесплатных альтернатив долгое время не было стиль оформления программ язык eiffel спроектирован максимальным уклоном простоту конструкций языка так нём определена лишь одна конструкция для цикла from начальная инициализация until условие выхода из цикла loop тело цикла end при на eiffel хорошим тоном считается придерживаться определённых правил оформления благодаря этому исходники читаются так как если бы это была документация дополнительным стимулом соблюдать правила является строгость самих компиляторов оформлению многие из них частности smarteiffel не позволяют неправильно оформлять исходные коды находя многие отступления от стиля выводя предупреждения или даже отказываясь компилировать вот некоторые рекомендации по оформлению исходных текстов служебные слова набираются жирным актуально для печати вывода на современные мониторы все идентификаторы курсивом отличие от си подобных языков eiffel отрицательно относятся сокращениям вместо drvmngr принято писать driver_manager все классы пишутся прописными буквами class list переменные пишутся строчными буквами count_of_sheeps integer константы всегда начинаются прописной gravity real рекомендуется использовать немоноширинный шрифт начале каждого класса желательно вставлять информацию нём кто написал когда класса вся эта информация записывается самом начале файла классом note description описание этого класса author вася пупкин class класс тело класса end после названия каждой процедуры на следующей строке желательно описывать результат её действия feature ip integer ip адрес локальной машины do тело запроса end особенностью eiffel является точки запятой конце синтаксических конструкций примечания литература bertrand meyer object oriented software construction nd edition prentice hall bertrand meyer eiffel the language invitation to eiffel from ise richard paige an overview of eiffel jean marc jezequel object oriented software engineering with eiffel ссылки http www elj com https web archive org web http cetus links org oo_eiffel html http www eiffel com news comp lang eiffel документация эйфель на русском категория объектно ориентированные языки категория языки формальных спецификаций