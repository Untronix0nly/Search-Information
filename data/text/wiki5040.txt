файл droste jpg thumb визуальная форма рекурсии эффект дросте рекурсивное изображение экрана визуальная форма рекурсии страницы википедии реку рсия определение описание изображение какого либо объекта или процесса внутри самого этого объекта или процесса то есть ситуация когда объект является частью самого себя термин рекурсия используется различных специальных областях знаний от лингвистики до логики но наиболее широкое применение находит математике информатике математике файл svg right thumb px треугольник серпинского математике рекурсия имеет отношение методу определения функций числовых рядов рекурсивно заданная функция определяет своё значение через обращение себе самой другими аргументами при этом возможно два варианта конечная рекурсивная функция она задаётся таким образом чтобы для любого конечного аргумента за конечное число рекурсивных обращений привести одному из отдельно определённых частных случаев вычисляемых без рекурсии классический пример рекурсивно определённый факториал целого числа здесь каждое следующее рекурсивное обращение делается аргументом меньшим на единицу поскольку по определению целое неотрицательное число через рекурсивных обращений вычисление функции гарантированно придёт частному случаю на котором рекурсия прекратится таким образом несмотря на рекурсивность определения вычисление функции для любого аргумента из области определения окажется конечным бесконечная рекурсивная функция она задаётся виде обращения самой себе во всех случаях по крайней мере для некоторых из аргументов подобным образом могут задаваться бесконечные ряды бесконечные непрерывные дроби так далее практическое вычисление точного значения здесь естественно невозможно поскольку потребует бесконечного времени требуемый результат находится аналитическими методами тем не менее если речь идёт не получении абсолютно точного значения вычислении заданного приближения искомого значения то тут некоторых случаях возможно прямое использование рекурсивного определения вычисления по нему ведутся до тех пор пока необходимая точность не будет достигнута примером может служить разложение непрерывную дробь числа где прямой расчёт по приведённой формуле вызовет бесконечную рекурсию но можно доказать что значение при возрастании стремится единице поэтому несмотря на бесконечность ряда значение числа эйлера конечно для приближённого вычисления значения достаточно искусственно ограничить глубину рекурсии некоторым наперёд заданным числом по достижении его использовать вместо единицу другим примером рекурсии математике является числовая заданная рекуррентной формулой когда каждый следующий член вычисляется как результат функции от предыдущих членов таким образом помощью конечного выражения представляющего собой совокупность рекуррентной формулы набора значений для первых членов ряда может даваться определение бесконечной рекурсией тесно связана математическая индукция она является естественным способом доказательства свойств функций на натуральных числах рекурсивно заданных через свои меньшие значения математике отдельно рассматривается класс так называемых примитивно рекурсивных функций определение примитивно рекурсивной функции также рекурсивно оно задаёт набор примитивных функций набор правил функция является примитивно рекурсивной если она может быть представлена как комбинация примитивно рекурсивных функций образованная по этим правилам примеры рекурсии математике метод гаусса жордана для решения систем линейных алгебраических уравнений является рекурсивным уже упоминавшийся факториал целого числа числа фибоначчи определяются помощью рекуррентного соотношения первое второе числа фибоначчи равны для число фибоначчи равно сумме го го чисел фибоначчи практически все геометрические фракталы задаются форме бесконечной рекурсии например треугольник серпинского стандартный пример вычислимой рекурсивной функции не являющейся примитивно рекурсивной функция аккермана для неотрицательных целых чисел следующим образом функции файл hanoi flow chart ru svg thumb right px блок схема рекурсивного алгоритма решения ханойской башни рекурсия вызов функции процедуры из неё же самой непосредственно простая рекурсия или через другие функции сложная или косвенная рекурсия например функция вызывает функцию функция функцию количество вложенных вызовов функции или процедуры называется глубиной рекурсии рекурсивная программа позволяет описать повторяющееся или даже потенциально бесконечное вычисление причём без явных повторений частей программы использования циклов структурно рекурсивная функция на верхнем уровне всегда представляет собой команду ветвления выбор одной из двух или более альтернатив зависимости от условия условий которое данном случае уместно назвать условием прекращения рекурсии имеющую две или более альтернативные ветви из которых хотя бы одна является рекурсивной хотя бы одна терминальной рекурсивная ветвь выполняется когда условие прекращения рекурсии ложно содержит хотя бы один рекурсивный вызов прямой или опосредованный вызов функцией самой себя терминальная ветвь выполняется когда условие прекращения рекурсии истинно она возвращает некоторое значение не выполняя рекурсивного вызова правильно написанная рекурсивная функция должна гарантировать что через конечное число рекурсивных вызовов будет достигнуто выполнение условия прекращения рекурсии результате чего цепочка рекурсивных вызовов прервётся выполнится возврат помимо функций выполняющих один рекурсивный вызов каждой рекурсивной ветви бывают случаи параллельной рекурсии когда на одной рекурсивной ветви делается два или более рекурсивных вызова параллельная рекурсия типична при обработке сложных структур данных таких как деревья простейший пример параллельно рекурсивной функции вычисление ряда фибоначчи где для получения значения го члена необходимо вычислить реализация рекурсивных вызовов функций практически применяемых языках средах как правило опирается на механизм стека вызовов адрес возврата локальные переменные функции записываются стек благодаря чему каждый следующий рекурсивный вызов этой функции пользуется своим набором локальных переменных за счёт этого работает корректно оборотной стороной этого довольно простого по структуре механизма является то что на каждый рекурсивный вызов требуется некоторое количество оперативной памяти компьютера при чрезмерно большой глубине рекурсии может наступить переполнение стека вызовов вопрос желательности использования рекурсивных функций неоднозначен одной стороны рекурсивная форма может быть структурно проще нагляднее особенности когда сам реализуемый алгоритм по сути рекурсивен кроме того некоторых декларативных или чисто функциональных языках таких как пролог или haskell просто нет синтаксических средств для организации циклов рекурсия них единственный доступный механизм организации повторяющихся вычислений другой стороны обычно рекомендуется избегать рекурсивных программ которые приводят или некоторых условиях могут приводить слишком большой глубине рекурсии так широко учебной литературе пример рекурсивного вычисления факториала является скорее примером того как не надо применять рекурсию так как приводит достаточно большой глубине рекурсии имеет очевидную реализацию виде обычного циклического алгоритма имеется специальный тип рекурсии называемый хвостовой рекурсией структура рекурсивного алгоритма такова что рекурсивный вызов является последней выполняемой операцией функции его результат непосредственно возвращается качестве результата функции интерпретаторы компиляторы функциональных языков поддерживающие оптимизацию кода исходного или исполняемого автоматически преобразуют хвостовую рекурсию итерации благодаря чему обеспечивается выполнение алгоритмов хвостовой рекурсией ограниченном объёме памяти такие рекурсивные вычисления даже если они формально бесконечны например когда помощью рекурсии организуется работа командного интерпретатора принимающего команды пользователя никогда не приводят исчерпанию памяти однако далеко не всегда стандарты языков чётко определяют каким именно условиям должна удовлетворять рекурсивная функция чтобы транслятор гарантированно преобразовал её итерацию одно из редких исключений язык scheme диалект языка lisp описание которого содержит все необходимые сведения теоретически любую рекурсивную функцию можно заменить циклом стеком однако такая модификация как правило бессмысленна так как приводит лишь замене автоматического сохранения контекста стеке вызовов на ручное выполнение тех же операций тем же расходом памяти исключением может быть ситуация когда рекурсивный алгоритм приходится моделировать на языке котором рекурсия запрещена доказательство корректности программ отличие от явно циклических программ для доказательства корректности рекурсивных нет необходимости искусственно вводить инвариант аналитическое доказательство корректности рекурсивной функции сводится методу математической индукции то есть доказательству следующих утверждений корректность рекурсивного обращения доказывается что результат вычисляемый любой рекурсивной ветви функции будет верным при условии что параметры функции заданы корректно соответствующие рекурсивные вызовы вернут верный результат корректность всех терминальных ветвей доказывается что все терминальные ветви возвращают верные значения как правило это доказательство тривиально так как терминальные ветви обычно никаких вычислений не содержат достижимость терминальной ветви для любого корректного набора параметров после конечного числа рекурсивных вызовов доказывается что изменение параметров вызова функции которое производится при рекурсивном обращении через конечное число рекурсивных вызовов приведёт одному из наборов параметров для которых существует терминальная ветвь из суммы первого второго утверждений следует что случае достижения терминальной ветви это значит во всех случаях когда вычисление функции окажется конечным функция вернёт правильный результат третье положение доказывает что конечным будет любое вычисление следовательно любой вызов функции корректными параметрами вернёт правильный результат очевидной технической оговоркой если глубина рекурсии не окажется настолько большой что вызовет переполнение памяти данные рекурсивное определение данных возникает тогда когда структура данных запись объект содержит вложенный объект структурно аналогичный самому себе или что бывает чаще ссылку на такой же объект преимущество рекурсивного определения объекта заключается том что такое конечное определение способно описать потенциально бесконечную структуру данных подобные структуры используются при описании списков графов пример описания списка struct element_of_list struct element_of_list next указатель на следующий элемент того же типа int data некие данные поскольку бесконечное число вложенных объектов невозможно разместить конечной памяти реальности такие рекурсивно определённые структуры всегда конечны заключительных терминальных ячейках обычно записываются пустые указатели являющиеся одновременно флагами указывающими программе обрабатывающей структуру что достигнут её конец рекурсивная структура данных зачастую обуславливает применение рекурсии для обработки этих данных последние годы стала популярной концепция так называемых ленивых вычислений согласно которой данные обрабатываемые программой вычисляются лишь тогда когда них возникает необходимость реализация этой концепции привела появлению некоторых языках haskell python возможности описывать потенциально бесконечные том числе рекурсивные без явного ограничения на порождение объектов свободно работать ними физике классическим примером бесконечной рекурсии являются два поставленные друг напротив друга зеркала них образуются два коридора из уменьшающихся отражений зеркал другим примером бесконечной рекурсии является эффект самовозбуждения положительной обратной связи электронных схем усиления когда сигнал выхода попадает на вход усиливается снова попадает на вход схемы снова усиливается усилители для которых такой режим работы является штатным называются автогенераторы лингвистике лингвистике рекурсией называют способность языка порождать вложенные предложения конструкции базовое предложение кошка съела мышь может быть за счёт рекурсии расширено как ваня догадался что кошка съела мышь далее как катя знает что ваня догадался что кошка съела мышь так далее рекурсия считается одной из лингвистических универсалий то есть свойственна любому естественному языку однако последнее время активно обсуждается возможное отсутствие рекурсии одном из языков амазонии пираха которое отмечает лингвист культуре большая часть шуток рекурсии касается бесконечной рекурсии которой нет условия выхода например известно высказывание чтобы понять рекурсию нужно сначала понять рекурсию весьма популярна шутка рекурсии напоминающая словарную статью рекурсия см рекурсия тема рекурсии присутствует во многих рассказах очерках аргентинского писателя хорхе луиса борхеса несколько рассказов станислава лема посвящены возможным казусам при бесконечной рекурсии рассказ про ийона тихого путешествие четырнадцатое из звёздных дневников ийона тихого котором герой последовательно переходит от статьи сепульках статье сепуляции оттуда статье сепулькариях которой снова стоит отсылка статье сепульки нашёл следующие краткие сведения сепульки важный элемент цивилизации ардритов см планеты энтеропия см см сепулькарии последовал этому совету прочёл сепулькарии устройства для сепуления см поискал сепуление там значилось сепуление занятие ардритов см планеты энтеропия см см сепульки лем звёздные дневники ийона тихого путешествие четырнадцатое рекурсивный герб россии рассказ из кибериады разумной машине которая обладала достаточным умом ленью чтобы для решения поставленной задачи построить себе подобную поручить решение ей итогом стала бесконечная рекурсия когда каждая новая машина строила себе подобную передавала задание ей рекурсивные акронимы gnu gnu not unix php php hypertext preprocessor wine wine is not an emulator герб российской федерации является рекурсивно определённым графическим объектом правой лапе изображённого на нём двуглавого орла зажат скипетр который венчается уменьшенной копией герба так как на этом гербе правой лапе орла также находится скипетр получается бесконечная рекурсия рассказ генри каттнера порочный круг стихотворение детского поэта андрея усачева жучок стихотворение лермонтова сон поисковая система google при запросе рекурсия выводит надпись возможно вы имели виду рекурсия см также математическая индукция корекурсия рекуррентная формула возвратная рефлексивное отношение порочный круг фрактал примечания ссылки статья фонде рекурсия категория алгоритмы категория управление потоком категория обратная связь категория идиомы