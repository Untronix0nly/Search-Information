transmission control protocol tcp протокол управления передачей один из основных протоколов передачи данных интернета предназначенный для управления передачей данных стеке протоколов tcp ip выполняет функции транспортного уровня модели osi механизм tcp предоставляет поток данных предварительной установкой соединения осуществляет повторный запрос данных случае потери данных устраняет дублирование при получении двух копий одного пакета гарантируя тем самым отличие от udp целостность передаваемых данных уведомление отправителя результатах передачи реализации tcp обычно встроены ядра ос существуют реализации tcp работающие пространстве пользователя когда осуществляется передача от компьютера компьютеру через интернет tcp работает на верхнем уровне между двумя конечными системами например браузером веб сервером tcp осуществляет надёжную передачу потока байтов от одного процесса другому tcp реализует управление потоком управление перегрузкой рукопожатие надежную передачу заголовок сегмента tcp структура заголовка бит порт источника source port порт назначения destination port порядковый номер sequence number sn номер подтверждения acknowledgment number ack sn длина заголовка зарезервировано флаги размер окна контрольная сумма указатель важности опции необязательное но используется практически всегда данные порт источника порт назначения эти битные поля содержат номера портов числа которые определяются по специальному списку порт источника идентифицирует приложение клиента которого отправлены пакеты ответные данные передаются клиенту на основании этого номера порт назначения идентифицирует порт на который отправлен пакет порядковый номер порядковый номер выполняет две задачи если установлен флаг syn то это изначальный порядковый номер isn initial sequence number первый байт данных которые будут переданы следующем пакете будет иметь номер равный isn противном случае если syn не установлен первый байт данных передаваемый данном пакете имеет этот порядковый номер поскольку поток tcp общем случае может быть длиннее чем число различных состояний этого поля то все операции порядковым номером должны выполняться по модулю это накладывает практическое ограничение на использование tcp если скорость передачи системы такова чтобы течение msl максимального времени жизни сегмента произошло переполнение порядкового номера то сети может появиться два сегмента одинаковым номером относящихся разным частям потока приёмник получит некорректные данные номер подтверждения acknowledgment number ack sn бита если установлен флаг ack то это поле содержит порядковый номер октета который отправитель данного сегмента желает получить это означает что все предыдущие октеты номерами от isn до ack включительно были успешно получены длина заголовка смещение данных длина заголовка data offset занимает бита указывает значение длины заголовка измеренное битовых словах минимальный размер составляет байт пять битовых слов максимальный байт пятнадцать битовых слов длина заголовка определяет смещение полезных данных относительно начала сегмента например data offset равное говорит том что заголовок занимает пятнадцать битных слова строк бита каждой строке бит байт зарезервировано зарезервировано бит для будущего использования должно устанавливаться ноль из них два уже определены cwr congestion window reduced поле окно перегрузки уменьшено флаг установлен отправителем чтобы указать что получен пакет установленным флагом ece rfc ece ecn echo поле эхо ecn указывает что данный узел способен на ecn явное уведомление перегрузки для указания отправителю перегрузках сети rfc флаги управляющие биты это поле содержит битовых флагов urg поле указатель важности задействовано ack поле номер подтверждения задействовано psh инструктирует получателя протолкнуть данные накопившиеся приёмном буфере приложение пользователя rst оборвать соединения сбросить буфер очистка буфера syn синхронизация номеров fin бит флаг будучи установлен указывает на завершение соединения размер окна количество байт данных начиная последнего номера подтверждения которые может принять получатель данного пакета иначе говоря получатель пакета располагает для приёма данных буфером длиной размер окна байт контрольная сумма поле контрольной суммы это битное дополнение сумме всех битных слов заголовка включая псевдозаголовок данных если сегмент по которому вычисляется контрольная сумма имеет длину не кратную ти битам то длина сегмента увеличивается до кратной ти за счёт дополнения нему справа нулевых битов заполнения биты заполнения не передаются сообщении служат только для расчёта контрольной суммы при расчёте контрольной суммы значение самого поля контрольной суммы принимается равным указатель важности битовое значение положительного смещения от порядкового номера данном сегменте это поле указывает порядковый номер октета которым заканчиваются важные urgent данные поле принимается во внимание только для пакетов установленным флагом urg используется для внеполосных данных опции могут применяться некоторых случаях для расширения протокола иногда используются для тестирования на данный момент опции практически всегда включают байта nop данном случае байт задающих timestamps вычислить длину поля опции можно через значение поля смещения механизм действия протокола отличие от традиционной альтернативы udp который может сразу же начать передачу пакетов tcp устанавливает соединения которые должны быть созданы перед передачей данных tcp соединение можно разделить на стадии установка соединения передача данных завершение соединения состояния сеанса tcp упрощённая диаграмма состояний tcp более подробно tcp efsm diagram на английском языке состояния сеанса tcp closed начальное состояние узла фактически фиктивное listen сервер ожидает запросов установления соединения от клиента syn sent клиент отправил запрос серверу на установление соединения ожидает ответа syn received сервер получил запрос на соединение отправил ответный запрос ожидает подтверждения established соединение установлено идёт передача данных fin wait одна из сторон назовём её узел завершает соединение отправив сегмент флагом fin close wait другая сторона узел переходит это состояние отправив свою очередь сегмент ack продолжает одностороннюю передачу fin wait узел получает ack продолжает чтение ждёт получения сегмента флагом fin last ack узел заканчивает передачу отправляет сегмент флагом fin time wait узел получил сегмент флагом fin отправил сегмент флагом ack ждёт msl секунд перед окончательным закрытием соединения closing обе стороны инициировали закрытие соединения одновременно после отправки сегмента флагом fin узел также получает сегмент fin отправляет ack находится ожидании сегмента ack подтверждения на свой запрос разъединении установка соединения процесс начала сеанса tcp также называемый рукопожатие состоит из трёх шагов клиент который намеревается установить соединение посылает серверу сегмент номером флагом syn сервер получает сегмент запоминает номер пытается создать сокет буферы управляющие структуры памяти для обслуживания нового клиента случае успеха сервер посылает клиенту сегмент номером флагами syn ack переходит состояние syn received случае неудачи сервер посылает клиенту сегмент флагом rst если клиент получает сегмент флагом syn то он запоминает номер посылает сегмент флагом ack если клиент одновременно получает флаг ack что обычно происходит то он переходит состояние established если клиент получает сегмент флагом rst то он прекращает попытки соединиться если клиент не получает ответа течение секунд то он повторяет процесс соединения заново если сервер состоянии syn received получает сегмент флагом ack то он переходит состояние established противном случае после тайм аута он закрывает сокет переходит состояние closed процесс называется трёхэтапным согласованием так как несмотря на то что возможен процесс установления соединения использованием четырёх сегментов syn сторону сервера ack сторону клиента syn сторону клиента ack сторону сервера на практике для экономии времени используется три сегмента пример базового этапного согласования tcp tcp closed listen syn sent syn received established established established established строке tcp начинает передачу сегмента syn говорящего об использовании номеров начиная со строке tcp передаёт syn подтверждение для принятого syn адрес tcp надо отметить что поле подтверждения показывает ожидание tcp приёма номера подтверждающего syn номером строке tcp отвечает пустым сегментом подтверждением ack для сегмента syn от tcp строке tcp передаёт некоторые данные отметим что номер подтверждения сегмента строке ack совпадает номером строке seq поскольку ack не занимает пространства номеров если это сделать придётся подтверждать подтверждения ack для ack существуют расширения протокола tcp сокращающие количество пакетов при установлении соединения например ранее также существовало расширение tcp для прозрачного шифрования данных предлагается использовать расширение tcpcrypt передача данных при обмене данными приёмник использует номер содержащийся получаемых сегментах для восстановления их исходного порядка приёмник уведомляет передающую сторону номере до которой он успешно получил данные включая его поле номер подтверждения все получаемые данные относящиеся промежутку подтверждённых игнорируются если полученный сегмент содержит номер больший чем ожидаемый то данные из сегмента буферизируются но номер подтверждённой не изменяется если впоследствии будет принят сегмент относящийся ожидаемому номеру то порядок данных будет автоматически восстановлен исходя из номеров сегментах для того чтобы передающая сторона не отправляла данные интенсивнее чем их может обработать приёмник tcp содержит средства управления потоком для этого используется поле окно сегментах направляемых от приёмника передающей стороне поле окно указывается текущий размер приёмного буфера передающая сторона сохраняет размер окна отправляет данных не более чем указал приёмник если приёмник указал нулевой размер окна то передача данных направлении этого узла не происходит пока приёмник не сообщит большем размере окна некоторых случаях передающее приложение может явно затребовать протолкнуть данные до некоторой принимающему приложению не буферизируя их для этого используется флаг psh если полученном сегменте обнаруживается флаг psh то реализация tcp отдаёт все на текущий момент данные принимающему приложению проталкивание используется например интерактивных приложениях сетевых терминалах нет смысла ожидать ввода пользователя после того как он закончил набирать команду поэтому последний сегмент содержащий команду обязан содержать флаг psh чтобы приложение на принимающей стороне смогло начать её выполнение завершение соединения завершение соединения можно рассмотреть три этапа посылка серверу от клиента флага fin на завершение соединения сервер посылает клиенту флаги ответа ack fin что соединение закрыто после получения этих флагов клиент закрывает соединение подтверждение отправляет серверу ack что соединение закрыто известные проблемы максимальный размер сегмента tcp требует явного указания максимального размера сегмента mss случае если виртуальное соединение осуществляется через сегмент сети где максимальный размер блока mtu менее чем стандартный mtu ethernet байт протоколах туннелирования таких как gre ipip также pppoe mtu туннель меньше чем стандартный поэтому сегмент tcp максимального размера имеет длину пакета больше чем mtu это приводит фрагментации уменьшению скорости передачи полезных данных если на каком либо узле фрагментация запрещена то со стороны пользователя это выглядит как зависание соединений при этом зависание может происходить произвольные моменты времени именно тогда когда отправитель использовал сегменты длиннее допустимого размера для решения этой проблемы на маршрутизаторах применяются правила firewall добавляющие параметр mss во все пакеты инициирующие соединения чтобы отправитель использовал сегменты допустимого размера mss может также управляться параметрами операционной системы обнаружение ошибок при передаче данных хотя протокол осуществляет проверку контрольной суммы по каждому сегменту используемый алгоритм считается слабым так году ошибка передаче одного бита не обнаруженная сетевыми средствами привела остановке серверов системы amazon web services общем случае распределенным сетевым приложениям рекомендуется использовать дополнительные программные средства для гарантирования целостности передаваемой информации атаки на протокол недостатки протокола проявляются успешных теоретических практических атаках при которых злоумышленник может получить доступ передаваемым данным выдать себя за другую сторону или привести систему нерабочее состояние реализация псевдозаголовок tcp заголовок не содержит информации об адресе отправителя получателя поэтому даже при совпадении порта получателя нельзя точностью сказать что сообщение пришло нужное место поскольку назначением протокола tcp является надёжная доставка сообщений то этот момент имеет принципиальное значение эту задачу можно было решить разными способами самый очевидный добавить информацию об адресе назначения заголовок tcp однако это во первых приводит дублированию информации что снижает долю полезной информации переносимой tcp сегментом во вторых нарушает принцип инкапсуляции модели osi поэтому разработчики протокола пошли другим путём использовали дополнительный псевдозаголовок tcp псевдозаголовок ipv биты ip адрес отправителя source address ip адрес получателя destination address протокол protocol длина tcp сегмента tcp length tcp псевдозаголовок ipv биты ip адрес отправителя source address ip адрес получателя destination address длина tcp сегмента tcp length протокол верхнего уровня next header протокол protocol протокол верхнего уровня next header содержит себе значение двоичном виде идентификатор tcp протокола длина tcp сегмента tcp length содержит себе длину tcp сегмента байтах tcp заголовок данные длина псевдозаголовка не учитывается псевдозаголовок не включается tcp сегмент он используется для расчета контрольной суммы перед отправлением сообщения при его получении получатель составляет свой псевдозаголовок используя адрес хоста которого пришло сообщение собственный адрес затем считает контрольную сумму освобождение от расчёта контрольной суммы многие реализации стека tcp ip предоставляют возможности использования аппаратной поддержки для автоматического расчёта контрольной суммы сетевом адаптере до передачи сеть или после приёма из сети для верификации это может освобождать операционную систему от использования ценных тактов процессора при вычислении контрольной суммы эта функция может приводить тому что анализаторы трафика перехватывающие исходящие пакеты до их передачи сетевой адаптер не знающие делегировании расчёта контрольной суммы сетевому адаптеру могут сообщать об ошибке контрольной суммы исходящих пакетах см также sctp tcp hijacking bic tcp порт tcp ip ip udp ссылки rfc transmission control protocol rfc на русском спецификация протокола tcp литература категория протоколы транспортного уровня категория tcp ip