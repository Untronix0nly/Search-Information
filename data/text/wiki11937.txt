ассоциативный массив абстрактный тип данных интерфейс хранилищу данных позволяющий хранить пары вида ключ значение поддерживающий операции добавления пары также поиска удаления пары по ключу insert ключ значение find ключ remove ключ предполагается что ассоциативный массив не может хранить две пары одинаковыми ключами паре значение называется значением ассоциированным ключом семантика названия вышеупомянутых операций разных реализациях ассоциативного массива могут отличаться операция find ключ возвращает значение ассоциированное заданным ключом или некоторый специальный объект undef означающий что значения заданным ключом нет две другие операции ничего не возвращают за исключением возможно информации том успешно ли была выполнена данная операция ассоциативный массив точки зрения интерфейса удобно рассматривать как обычный массив котором качестве индексов можно использовать не только целые числа но значения других типов например строки поддержка ассоциативных массивов есть во многих языках высокого уровня таких как perl php python ruby tcl javascript др для языков которые не имеют встроенных средств работы ассоциативными массивами существует множество реализаций виде библиотек примеры примером ассоциативного массива является телефонный справочник значением данном случае является совокупность адрес ключом номер телефона один номер телефона имеет одного владельца но один человек может иметь несколько номеров расширения ассоциативного массива указанные три операции часто дополняются другими наиболее популярные расширения включают следующие операции clear удалить все записи each пробежаться по всем хранимым парам min найти пару минимальным значением ключа max найти пару максимальным значением ключа последних двух случаях необходимо чтобы на ключах была определена операция сравнения реализации ассоциативного массива существует множество различных реализаций ассоциативного массива самая простая реализация может быть основана на обычном массиве элементами которого являются пары ключ значение для ускорения операции поиска можно упорядочить элементы этого массива по ключу осуществлять нахождение методом бинарного поиска но это увеличит время выполнения операции добавления новой пары так как необходимо будет раздвигать элементы массива чтобы образовавшуюся пустую ячейку поместить новую запись наиболее популярны реализации основанные на различных деревьях поиска так например стандартной библиотеке stl языка контейнер map реализован на основе красно чёрного дерева языках ruby tcl python используется один из вариантов хэш таблицы есть другие реализации каждой реализации есть свои достоинства недостатки важно чтобы все три операции выполнялись как среднем так худшем случае за время где текущее количество хранимых пар для деревьев поиска том числе для красно чёрных деревьев это условие выполнено реализациях основанных на хэш таблицах среднее время оценивается как что лучше чем реализациях основанных на деревьях поиска но при этом не гарантируется высокая скорость выполнения отдельной операции время операции insert худшем случае оценивается как операция insert выполняется долго когда коэффициент заполнения становится высоким необходимо перестроить индекс хэш таблицы хэш таблицы плохи также тем что на их основе нельзя реализовать быстро работающие дополнительные операции min max алгоритм обхода всех хранимых пар порядке возрастания или убывания ключей поддержка ассоциативных массивов языках библиотека stl языка здесь приведено простейшее консольное приложение предоставляющее интерфейс телефонной книжки оно реализовано на основе контейнера map include include include using namespace std int main string cmd name phone map book while cin cmd if cmd add cin name phone book name phone cout name try string book at name cout name book erase name cout для организации ассоциативного массива используется тип dictionary dictionary dic new dictionary dic add sally smart dic add john doe dic add random hacker доступ значению показ сообщения messagebox show dic sally smart для перебора элементов можно использовать цикл foreach порядок элементов не гарантируется если порядок важен можно использовать либо использовать метод расширение sort из linq цикл по элементам показом каждого элемента foreach keyvaluepair kvp in dic messagebox show string format phone number for is kvp key kvp value java языке java ассоциативный массив именуется отображением map имеет соответствующий интерфейс стандартном java api java util map стандартный java sdk включает себя ряд реализаций этого интерфейса hashmap linkedhashmap enummap treemap другие map map new hashmap map put apricot map put banana map put cherry string map get перебор элементов коллекции for map entry pair map entryset system out printf ключ значение pair getkey pair getvalue kotlin отличие от многих языков kotlin существуют неизменяемые изменяемые ассоциативные массивы map mutablemap это относится любым коллекциям спискам множествам создание ассоциативного массива осуществляется помощью идиомы mapof to to val customer mapof name to dmitrii age to languages to listof russian english japanese address to mapof city to khabarovsk street to muraviev amurskiy zipcode to перебор элементов коллекции val map mapof api domain io to localhost to for host port in map ruby класс hash из стандартной библиотеки ruby поддерживает операции find insert delete each keys values также множество других ниже приведён код примерами выполнения отдельных операций телефонная книга phone_book ivan anna phone_book ivan равно phone_book peter добавили новую пару phone_book delete anna удалили пару anna phone_book each do key value выведем все записи puts key value end puts phone_book values вывести все номера телефонов ниже приведён код реализацией консольного приложения телефонная книжка require yaml book while line stdin readline cmd name phone line split case cmd when insert bookname phone when find puts name phone is bookname when del book delete name when view book each when save file open name when load book yaml load_file name when quit exit else puts bad command cmd end end python встроенный python тип ассоциативного массива называется словарём элементами которого являются пары ключей соответствующих им значений dict здесь были показаны два способа написания литерала словаря что ключом может быть объект любого неизменяемого нотации python типа добавление нового объекта словарь не требует предварительных проверок если ранее ключу уже соответствовало некоторое значение оно будет перезаписано подробнее см python tutorial dictionaries другие операции со словарем if in проверка наличия ключа del удаление ключа значения val get default value получение значения по ключу или значения по умолчанию случае отсутствия ключа val setdefault default value получение значения по ключу или значения по умолчанию случае отсутствия ключа при этом значение записывается словарь keys список ключей values список значений items список пар ключ значение на python весьма просто можно написать свой класс который будет вести себя подобно словарю для этого необходимо лишь определить своем классе соответствующие методы см python reference manual emulating container types расширить свойства встроенного типа словаря dict можно путём наследования класса см пример perl ассоциативный массив perl принято называть его хешем является встроенным типом данных хеш можно создавать поэлементно либо целиком присвоив ему значения списка котором элементы записаны виде пар ключ значение внутри пары элементы могут разделяться как традиционным путём например запятой так при помощи оператора поэлементное присваивание hash horse colt hash sheep lamb вывод количества ключей хеша напечатает print scalar keys hash присваивание списка значения для ключей horse sheep будут потеряны hash cat kitten dog puppy cow calf print hash cat напечатает kitten print keys hash вывод всех ключей напечатает catdogcow print values hash вывод всех значений напечатает kittenpuppycalf print hash напечатает delphi delphi до версии не имело прямых средств работы ассоциативными массивами однако вы можете имитировать ассоциативные массивы используя различного рода списковые классы для этого tbucketlist tstringlist как все другие потомки tstrings также memo listbox др например procedure tform button click sender tobject var integer string begin with tstringlist create do создание анонимного списка без объявления var секции try values sally smart добавление новой записи values john doe добавление ещё одной записи values sally smart замена значения существующей записи values john doe удаление записи со сдвигом списка savetofile restore txt сохранения списка во внешний файл loadfromfile restore txt восстановление списка из файла text сохранения списка строке единым текстом cr lf ами text восстановление списка из строки единым текстом cr lf ами очистка наполнение списка из специальной строки настраиваемыми разделителями delimiter quotechar тремя записями пар строковый ключ значение ключа delimitedtext sally smart john doe random hacker tstringlist как все потомки tstrings наделены этими свойствами см выше поэтому возможно их взаимодействие том числе врапперами над ассоциативными массивами хранящимися системных списках memo полях listbox ах assign listbox items очистка восстановление списка из listbox memo lines values random hacker memo поле addstrings memo lines добавление строчек из списка memo поля clear просто очистка списка доступ значению вывод его message box showmessage values sally smart проход по ассоциативному массиву доступ ключам значениям по индексу for to count do showmessage format number for namesi valuefromindexi finally free автоуничтожение списка ассоциативного массива end end pl sql субд oracle начиная версии позволяет использовать качестве ключей помимо binary_integer pls_integer также строки varchar длиной до declare type year_type is table of number index by varchar year_sales year_type tot_sales number begin year_sales year_sales year_sales tot_sales year_sales year_sales year_sales dbms_output put_line total sales tot_sales end php hash cat kitten dog puppy hash cow calf print hash cat напечатает kitten print_r array_keys hash вывод всех ключей print_r array_values hash вывод всех значений print_r hash напечатает array cat kitten dog puppy cow calf purebasic purebasic начиная версии появилась встроенная поддержка ассоциативных массивов его называют отображением пример обычного ассоциативного массива создали ассоциативный массив newmap country заполнение массива данными country ge germany country fr france country uk united kingdom debug country fr вывод результата fr отладочное окно перебор всех элементов отображением их значений отладочном окне foreach country debug country next пример каждым элементом является структура данных ассоциативного массива structure car описание структуры weight speed price endstructure newmap cars car создание ассоциативного массива заполнение массива данными cars ferrari weight cars speed cars price cars lamborghini gallardo weight cars speed cars price перебор всех элементов отображением их значений отладочном окне foreach cars debug car name mapkey cars имя ключа текущего элемента массива debug weight str cars weight next javascript ecmascript есть специальный объект map но он не везде поддерживается обычные массивы могут иметь только числовые индексы потому для эмуляции ассоциативных массивов ключами которых могут быть том числе строковые значения можно использовать объекты конструкция вида myvar key value key value создает объект myvar набором полей каждое из которых имеет свой ключ значение дальнейшем доступ элементам этого объекта может выполняться как использованием нотации объектов полей myvar key так нотации массивов ключей myvar key var hash cat kitten my dog puppy если ключ содержит символы отличные от алфавитно цифровых он заключается кавычки cow calf document write hash cat document write hash my dog hash parrot kesha добавление элемента хэш выполняется присваиванием нужного значения по пока еще не существующему ключу document write hash parrot delete hash parrot для удаления элемента используется оператор delete delete hash my dog hash my parrot kesha document write hash my parrot for var in hash document write name is hashp для обхода элементов хэша javascript есть специальный вид цикла for in go компилируемом языке go ассоциативные массивы названы отображениями map их поддержка отличие от языков встроена язык то есть не требует подключения каких либо модулей package package main import fmt func main elements make mapstringstring elements hydrogen elements he helium fmt println elements he make mapstringint aaa bbb fmt println aaa см также индексный массив хэш таблица дерево поиска красно чёрное дерево ссылки классы или модули реализующие ассоциативный массив или его расширение различных языках контейнер map stl страница помощи std map на msdn страница помощи std map на sgi stl страница помощи std hashmap sgi stl класс hash ruby модуль array tcl класс dict python класс treedictionary интерфейс map java nist dictionary of algorithms and data structures associative array nist dictionary of algorithms and data structures association list массивы php индексные ассоциативные многомерные массивы примечания категория структуры данных категория статьи примерами кода python