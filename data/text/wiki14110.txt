инкапсуляция от информатике упаковка данных функций единый компонент инкапсуляция зачастую рассматривается как понятие присущее исключительно объектно ооп но обширно встречается других см подтипизация на записях полиморфизм записей вариантов ооп инкапсуляция тесно связана принципом абстракции данных не путать абстрактными типами данных реализации которых предоставляют возможность инкапсуляции но имеют иную природу это частности приводит другому заблуждению рассмотрению инкапсуляции неотрывно от сокрытия частности сообществе или java принято рассматривать инкапсуляцию без сокрытия как неполноценную однако некоторые языки например smalltalk python реализуют инкапсуляцию полной мере но не предусматривают возможности скрытия принципе другие standard ml ocaml жёстко разделяют эти понятия как ортогональные предоставляют их семантически различном виде см сокрытие языке модулей ml подробности общем случае разных языках термин инкапсуляция относится одной или обеим одновременно следующим нотациям механизм языка позволяющий ограничить доступ одних компонентов программы другим языковая конструкция позволяющая связать данные методами для обработки этих данных пренебрегая формализмом способствуя интуитивному восприятию инкапсуляцию можно определить помощью латинского размещение оболочке изоляция закрытие чего либо инородного целью исключения влияния на окружающее обеспечение доступности главного выделение основного содержания путём помещения всего мешающего второстепенного некую условную капсулу чёрный ящик однако данное определение является лишь приближением примеры ada package stacks is type stack_type is private procedure push stack in out stack_type val integer private type stack_data is array of integer type stack_type is record max integer data stack_data end record end stacks class public int данные открытого интерфейса int returnsomething метод открытого интерфейса private int aa ab скрытые данные void do_something скрытый метод класс инкапсулирует свойства aa ab метод do_something представляя внешний интерфейс returnsomething целью инкапсуляции является обеспечение согласованности внутреннего состояния объекта для инкапсуляции используются публичные свойства методы объекта переменные за редким исключением не должны быть публично доступными инкапсуляцию можно на простом примере допустим нам необходимо хранить вещественное значение его строковое представление например для того чтобы не производить каждый раз конвертацию случае частого использования пример реализации без инкапсуляции таков class noencapsulation public double valuedouble public string valuestring при этом мы можем отдельно изменять как само значение value так его строковое представление некоторый момент может возникнуть их несоответствие например результате исключения пример реализации использованием инкапсуляции class private double valuedouble private string valuestring public double valuedouble get return valuedouble set valuedouble value valuestring value tostring public string valuestring get return valuestring set double tmp_value convert todouble value здесь может возникнуть исключение valuedouble tmp_value valuestring value здесь доступ переменным valuedouble valuestring возможен только через свойства valuedouble valuestring если мы попытаемся присвоить свойству valuestring некорректную строку возникнет исключение момент конвертации то внутренние переменные останутся прежнем согласованном состоянии поскольку исключение вызывает выход из процедуры delphi delphi для создания скрытых полей или методов их достаточно объявить секции private tmyclass class private fmyfield integer procedure setmyfield const value integer function getmyfield integer public property myfield integer read getmyfield write setmyfield end для создания интерфейса доступа скрытым полям delphi введены свойства php class private скрытое свойство private скрытое свойство private function dosomething скрытый метод actions public function returnsomething открытый метод actions этом примере закрыты свойства для класса целью предотвращения повреждения этих свойств другим кодом которому необходимо предоставить только права на чтение java class private int private int private void dosomething скрытый метод actions public int getsomething открытый метод return javascript var function private var var function actions скрытый метод public this getproperty function открытый интерфейс return this setproperty function value открытый интерфейс value или var function private var var function actions скрытый метод public return getproperty function открытый интерфейс return setproperty function value открытый интерфейс value примечания категория статьи примерами кода категория статьи примерами кода sharp категория статьи примерами кода php категория статьи примерами кода паскаль категория инкапсуляция категория объектно ориентированное категория информатика