scheme это функциональный язык один из двух наиболее популярных наши дни диалектов языка лисп другие популярные диалекты это common lisp clojure авторы языка scheme из массачусетского института создали его середине годов введение при разработке scheme упор был сделан на элегантность простоту языка философия языка подчёркнуто минималистская его цель не сваливать кучу разные полезные конструкции средства напротив удалить слабости ограничения вызывающие необходимость добавления язык новых возможностей результате scheme содержит минимум примитивных конструкций позволяет выразить все что угодно путём надстройки над ними качестве примера можно указать что язык использует механизма организации циклов хвостовая рекурсия итеративный подход котором используются временные переменные для сохранения промежуточного результата scheme начинался попытки понять модель акторов карла хьюитта для чего стил сассман написали крошечный интерпретатор лиспа затем добавили механизм создания акторов посылки сообщений scheme был первым диалектом лиспа применяющим исключительно статические не динамические области видимости переменных гарантирующим оптимизацию хвостовой рекурсии поддерживающим данные булевского типа вместо традиционных nil он также был одним из первых языков непосредственно поддерживающих продолжения начиная со спецификации rs язык приобрел исключительно мощное удобное средство для записи макросов на основе шаблонов синтаксического преобразования соблюдением гигиены scheme также реализована сборка мусора то есть автоматическое освобождение памяти от неиспользуемых более объектов качестве базовых структур данных язык использует списки одномерные массивы векторы соответствии декларируемым минимализмом пока нет стандартного синтаксиса для поддержки структур именованными полями также средств ооп все это может быть реализовано программистом по его предпочтению хотя большинство реализаций языка предлагают готовые механизмы как курьёз можно отметить что первоначальное название языка schemer было изменено на настоящее из за ограничения на длину имён файлов примеры простые математические операции вызов каждой операции или функции представляется списком котором символ операции который сущности является именем функции всегда занимает начальную позицию предикаты типа number number foo string foo по соглашению имена всех предикатов заканчиваются символом проверки на равенство equal foo bar eqv eq определение макросов для традиционных операций push pop define syntax push syntax rules push set cons define syntax pop syntax rules pop let car set cdr определение функций факториал неэффективном рекурсивном стиле define fact if определение функции должно соответствовать следующему прототипу define имя функции lambda аргументы реализация функции хотя на практике чаще используют сокращённую форму define имя функции аргументы реализация функции ввод вывод для ввода вывода scheme используется тип порт rs sec rs определяет два стандартных порта доступные как current input port current output port отвечающие стандартным потокам ввода вывода unix большинство реализаций также предоставляют current error port перенаправление ввода вывода поддерживается стандарте помощью процедур with input from file with output to file реализаций также имеются строковые порты помощью которых многие операции ввода вывода могут выполняться со строковым буфером вместо файла используя процедуры из srfi стандарт rs определяет более сложные процедуры для работы портами много новых типов портов следующие примеры написаны на rs scheme write read read вывод порт по умолчанию current output port let hello lambda display hello world newline hello передача порта качестве аргумента let hello lambda display hello world newline hello current output port перенаправление вывода файл let hello lambda display hello world newline with output to file outputfile hello явное открытие файла закрытие порта let hello lambda display hello world newline output port open output file outputfile hello output port close output port output port call with output file let hello lambda display hello world newline call with output file outputfile hello подобные процедуры есть для ввода rs scheme предоставляет предикаты input port output port для символьного ввода вывода существуют write char read char peek char char ready для чтения записи выражений scheme используются процедуры read write если порт достиг конца файла при операции чтения возвращается eof объект который может быть распознан предикатом eof object srfi из за минимализма scheme многие общие процедуры синтаксические формы не определены стандарте для того чтобы сохранить ядро языка малым способствовать стандартизации расширений сообществе scheme принят процесс scheme request for implementation запрос на реализацию помощью которого предлагаемые расширения проходят тщательное обсуждение это способствует переносимости кода многие srfi поддерживаются всеми или большинством реализаций scheme достаточно широко поддерживаются реализациями следующие srfi проверка наличия расширений помощью cond expand библиотека для списков гомогенные числовые векторы строковые порты receive привязка нескольким значениям record типы библиотека для строк библиотека наборов символов синтаксис для процедур переменной арности обобщенный set поддержка многопоточности типы данных процедуры работы со временем многомерные массивы нотация для фиксации аргументов процедуры без каррирования источники случайных битов базовое форматирование строк локализация вложенные многострочные комментарии специальная форма рекурсивного выполнения args fold процессор аргументов программы parameter objects потоки данных eager comprehensions библиотека векторов примитивы для выражения ленивых итерационных алгоритмов битовые операции более общий cond векторы октетов процедуры сравнения полный список принятых srfi доступен на http srfi schemers org final srfis html основные реализации gnu guile официальный язык расширений проекта gnu этот интерпретатор scheme реализован как библиотека позволяющая приложениям создавать внутренний интерпретатор scheme mit scheme свободная gpl licensed реализация для платформы под gnu linux freebsd ibm os win chicken scheme интерпретатор scheme поддерживающий трансляцию gambit scheme racket ранее plt scheme jscheme bigloo проект armpit scheme реализует интерпретатор для на базе архитектуры arm литература учебники structure and interpretation of computer programs видео лекции structure and interpretation of computer programs harold abelson gerald jay sussman the scheme programming language kent dybvig учебник htdp how to design programs second edition см также реализации языка scheme примечания ссылки на русском языке сообщество livejournal посвящённое языку scheme на английском языке large collection of scheme resources большая коллекция ресурсов по scheme gauche интерпретатор scheme kawa программа для scheme написанная на java которая компилирует тексты scheme программ java bytecode любая java библиотека может быть легко использована kawa сообщество schemewiki org категория семейство языков лисп категория языки для образования категория языки автоматическим управлением памятью