резидентная программа или tsr программа от завершиться остаться резидентной операционной системе ms dos программа вернувшая управление оболочке операционной системы command com либо надстройке над операционной системой norton commander но оставшаяся оперативной памяти персонального компьютера резидентная программа активизируется каждый раз при возникновении прерывания вектор которого эта программа изменила на адрес одной из своих процедур при работе ms dos резидентные программы широко использовались для достижения различных целей например русификаторы клавиатуры программы доступа локальной сети менеджеры отложенной печати вирусы по способу инициализации вызова операционной системой резидентные программы необходимо отличать от настоящих драйверов ms dos встраиваемых операционной системой своё ядро во время загрузки эпоху многозадачных ос резидентными иногда называют программы загруженные постоянно работающие фоновом режиме но применение этого термина некорректно по отношению многозадачным ос основные понятия резидентные программы могут переключать на себя обработку прерываний например связанных выводом на печать или обращением клавиатуре такие программы тоже обычно запускаются через файл autoexec bat или при необходимости они перехватывают прерывания предназначенные для работы клавиатурой как только пользователь нажимает заранее определенную комбинацию клавиш резидентная программа активизируется поверх имеющегося на экране изображения выводится диалоговое окно резидентной программы иногда резидентные программы используют вместо загружаемых драйверов для обслуживания нестандартной аппаратуры этом случае резидентная программа может встроить свой обработчик через который все прикладные программы смогут обращаются аппаратуре аналогично работают резидентные модули некоторых систем управления базами данных субд прикладная программа посылает запросы базе данных через прерывание устанавливаемое при запуске такой субд на резидентные программы накладываются многочисленные ограничения затрудняющие работу программиста например резидентным программам не разрешается использовать прерывания ms dos когда вздумается это связано тем что ms dos самого начала проектировалась как однозадачная операционная система поэтому функции прерываний ms dos не обладают свойством повторной входимости представьте себе такую ситуацию пусть обычная программа вызвала какую либо функцию прерывания ms dos на выполнение которой требуется относительно много времени например запись на диск так как пользователь может активизировать резидентную программу любой момент то если не принять специальных мер возможен повторный вызов той же самой функции обработка которой ещё не завершена этом случае мы получим повторный вызов функции ms dos который недопустим из за того что функции ms dos не реентерабельны функции bios также далеко не все реентерабельны резидентная программа может смело вызывать разве лишь прерывание int которое предназначено для работы клавиатурой если резидентной программе нужно вывести что нибудь на экран то вместо прерывания int следует выполнить запись символов их атрибутов видеопамять без принятия специальных мер резидентная программа не может вызывать многие функции библиотеки транслятора так как последние вызывают прерывания ms dos например функция malloc вызывает прерывание ms dos для определения размера свободной памяти системе программы есть две возможности остаться резидентной памяти использовать прерывание int или функцию прерывания int для использования прерывания int сегментный регистр cs должен указывать на psp программы при этом регистр dx следует записать смещение последнего байта программы плюс один байт нетрудно заметить что этот способ больше всего подходит для com программ так как помощью прерывания int невозможно оставить памяти резидентной программу длиннее кбайт другой более удобный способ заключается вызове функции прерывания int регистре al вы можете указать код завершения программы регистр dx должен содержать длину резидентной части программы параграфах здесь уже нет указанного выше ограничения на размер программы для того чтобы оставить резидентной памяти программу размер которой превышает кбайт вы можете использовать только последний метод но не стоит увлекаться большими резидентными программами так как занимаемая ими память нужна другим программам структура резидентной программы сначала памяти располагаются данные затем обработчики прерываний вектора наконец секция инициализации которая имеет точку входа init именно эту точку передается управление при запуске программы основная задача секции инициализации установить резидент памяти она нужна лишь при установке программы потом её из памяти удаляют эту секцию располагают старших адресах так как обрезать мы можем только старшие адреса функции секции инициализации заключаются следующем перехватываются вектора пpерываний установка своих обработчиков программа завершается что памяти остается только резидентная часть передача параметров обработчикам пpерываний isr значения этих параметров помещаются резидентную область данных качестве параметра может быть горячая клавиша вызова резидента решение проблемы повторного запуска tsr чтобы не размножать копии tsr памяти то есть секция инициализации должна определить есть программа памяти или нет удаление резидента из памяти во первых восстановить старые вектора пpерываний из секции данных во вторых удалить окружение tsr psp tsr функция минимизации памяти занятой резидентом инициализация резидентной программы для использования прерывания сегментный регистр cs должен указывать на psp программы регистре dx должно быть записано смещение последнего байта программы плюс один байт нетрудно заметить что этот способ остаться резидентной больше всего подходит для программ формате com вы не сможете оставить резидентной программу длиннее килобайт другой более удобный способ использовать функцию прерывания int регистре al вы можете указать код завершения программы регистр dx этом случае должен содержать длину резидентной части программы параграфах здесь уже нет ограничения килобайта на длину программы использование этой функции единственная возможность оставить резидентной программу длиннее килобайт но не стоит увлекаться длинными tsr программами так как обычно освободить память занимаемую ставшей уже ненужной резидентной программой можно только помощью перезагрузки операционной системы библиотека функций quick содержит специальную функцию для оставления программы резидентной памяти эта функция использует прерывание int функция имеет имя первый параметр функции код завершения то что записывается регистр al второй длина резидентной части программы параграфах решение проблемы повторного запуска нужно определить была уже запущена tsr или нет возможно несколько вариантов определения запуска tsr использование статической памяти компьютера этом случае по некоторому фиксированному адресу располагается флаг который устанавливается момент первого запуска tsr при следующих запусках этот флаг анализируется если то tsr уже установлен если то флаг устанавливается происходит попытка повторной загрузки tsr такую статическую ячейку можно выбрать области векторов напримеp пусть неиспользуемый вектоp ff использует этот флаг младших адресах или можно использовать память озу дисплея за пределами кбайт озу имеются области памяти которые на экране не отображаются эту память можно использовать под флаг недостаток этого метода заключается том что разные tsr могут использовать один тот же флаг результате может быть заблокированна загрузка новой tsr резидентная сигнатура сигнатура это некоторая кодовая идея состоит том что тексте резидентной части прграммы размещается специальная сигнатура напримеp имя программы при повторном запуске tsr сканируется вся память компьютера на предмет поиска такой сигнатуры если сигнатура встречается дважды как минимум то это свидетельствует попытке загрузке этот метод используют антивирусные программы для повышения надежности скорости работы метода сканирование памяти осуществляется по блокам при этом анализироваться будут только блоки psp фиксированное смещение относительно psp метод мультиплексного пpерывания наиболее часто используется на практике рамках dos существует пpерывание int fh которое используется для некоторой нестандартной связи между прикладной программой ос суть нестандартной связи заключаетса том что пользователь может написать собственные функции для пpерывания int fh напримеp пусть при загрузке резидента устанавливается новый обработчик вектора fh старый обработчик включает себя тело нового пусть есть обработчик функции ах авсh результатом работы этой функции должно быть al ffh эти два кода играют роль сигнатуры секция инициализации делает следующее mov ax abch int fh cmp al ffh если равно то копия есть иначе копии нет достоинство широкое использование недостаток набоp сигнатуры достаточно ограничен сигнатура может случайно совпасть надежность меньше чем го метода анализ окружения процесса по имени задачи определить загружена такая программа памяти или нет недостаток если переименуем резидент то можно загрузить его копию ещё раз взаимодействие новых старых обработчиков прерываний isr при установке резидентной программы память осуществляется перехват векторов при этом между старыми новыми обработчиками пpерываний возможны следуюшие схемы взаимодействия исключение старого обработчика взаимодействия нет недостаток если старый обработчик реализует какие то полезные функции которые нужно оставить то эти функции нужно будет продублировать новом напримеp если рассмотреть обработчик пpерывания клавиатуры int то его функции достаточно сложные принимает код клавиатуры сообщает клавиатуре что код принят обрабатывает код то есть из scan кода делает ascii код помещает код буфеp клавиатуры очередь вызов старого обработчика посредством команды jmp возврат осуществляется из старого обработчика возникает цепочка между обработчиками пpерываний недостаток часто бывает необходимо чтобы новые функции выполнялись после старых по этой схеме это невозможно вызов старого обработчика командой call уровни сложности tsr взаимодействие новых isr друг другом зависимости от взаимодействия новых isr выделяют различные уровни сложности простейшие tsr их характеристики isr не взаимодействуют друг другом или всего один isr резидентная функция rf не использует своей работе функции bios или dos время исполнения rf настолько мало что нет необходимости защищаться от повторной активизации при работе rf используется стек текущего процесса rf должна быть простая чтобы стек часто не использовать нужно иметь как минимум свободных байта стеке для того чтобы реализовать rf примером такой tsr может являться щелкающая клавиатура tsr го уровня сложности общая характеристика использование функций bios работа дисками клавиатурой вывод на экран int int int резидентная секция программы состоит из нескольких isr rf использует пpерывания bios используется защита от повторной активизации rf используется стек текущего процесса если посмотреть на функции bios во время их работы то можно заметить что они это относиться функциям работы диском int экраном int это свойство которое позволяет программе или какому то её фрагменту пpерываться выполняться начала вновь то есть программа может пpерывать сама себя функции bios классически нужно будет написать новый обработчик int пусть резидентная функция вызывается при нажатии какой либо клавиши то нужно использовать обработчик пpерываний клавиатуры int который должен проверить флаг идет работа диском или нет если флаг равен нулю то можно вызывать нашу программу rf которая работает int защита делается только от пpерывания int так как остальные пpерывания используют функции dos tsr го уровня сложности это такие программы которых резидентная функция использует функции dos напримеp rf использует int int можно бы было решить эту проблему так же как int но этот метод не работает так как функции dos не всегда имеют стандартное завершение есть некоторые выходы которые нельзя таким функциям относятся oc есть специальный флаг флаг активности dos которая называется indos этот флаг равен если функция int не выполняется не равен если она выполняется программе необходимо анализировать indos есть стандартная функция для получения флага indos это ah пpерывания int результате этой функции es bx indos эту функцию надо выполнить секции инициализации должны зафиксировать адрес этого флага indos статической ячейке памяти затем использовать её обработчиках пpерываний tsr го уровня сложности некоторые функции пpерывания int выполняются очень долго напримеp ввод клавиатуры ожиданием если происходит запрос на вызов резидентной функции или rf этот момент времени то реально вызова rf не произойдет до тех поp пока не завершится int пока не нажмется какая то клавиша enter все функции dos разделены на класса ch это клавиатура экран dh это работа файлами выполняется достаточно быстро когда выполняется группа то можно выполнять функции другой группы но не первой наоборот для решения проблемы запуска резидентной функции момент выполнения функций группы используется специальное пpерывание int пользователь может перехватить вектоp int выполнить соответствующие действия из группы напримеp пусть наша резидентная функция использует только группу функций если dos активна то tsr вызывает только int если не активна то вызывает пpерывания только от таймера вывод на экран можно осуществлять непосредственно озу дисплея минуя dos bios для работы клавиатурой используют функции bios для работы экраном клавиатурой используются функции группы но экран клавиатура рассматриваются как устройство con работа ним ведется как файлом см также демон программа службы windows категория программное обеспечение категория dos