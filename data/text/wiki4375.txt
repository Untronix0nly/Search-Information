udp протокол датаграмм один из ключевых элементов tcp ip набора сетевых протоколов для интернета udp компьютерные приложения могут посылать сообщения данном случае называемые датаграммами другим хостам по ip сети без необходимости сообщения для установки специальных каналов передачи или путей данных протокол был разработан дэвидом ридом году официально определён rfc udp использует простую модель передачи без неявных рукопожатий для обеспечения надёжности упорядочивания или целостности данных таким образом udp предоставляет ненадёжный сервис датаграммы могут прийти не по порядку дублироваться или вовсе исчезнуть без следа udp подразумевает что проверка ошибок исправление либо не нужны либо должны исполняться приложении чувствительные ко времени приложения часто используют udp так как сбросить пакеты чем ждать задержавшиеся пакеты что может оказаться невозможным системах реального времени при необходимости исправления ошибок на сетевом уровне интерфейса приложение может задействовать tcp или sctp разработанные для этой цели природа udp как протокола без сохранения состояния также полезна для серверов отвечающих на небольшие запросы от огромного числа клиентов например dns потоковые мультимедийные приложения вроде iptv voice over ip протоколы туннелирования ip многие онлайн игры служебные порты udp приложения используют датаграммные сокеты для установки соединения между хостами приложение связывает сокет его конечной точкой передачи данных которая является комбинацией ip адреса порта службы порт это программная структура определяемая номером порта битным целочисленным значением то есть от до порт зарезервирован хотя является допустимым значением порта источника случае если процесс отправитель не ожидает ответных сообщений iana разбила номера портов на три группы порты номерами от до используются для обычных хорошо известных служб unix подобных операционных системах для использования таких портов необходимо разрешение порты номерами от до предназначены для iana служб порты по могут быть использованы для любых целей поскольку официально не разработаны для какой то определённой службы они также используются как динамические временные порты которые запущенное на хосте программное обеспечение может случайным образом выбрать для самоопределения по сути они используются как временные порты основном клиентами при связи серверами структура пакета udp минимальный ориентированный на обработку сообщений протокол транспортного уровня rfc udp не предоставляет никаких гарантий доставки сообщения для вышестоящего протокола не сохраняет состояния отправленных сообщений по этой причине udp иногда называют unreliable datagram protocol англ ненадёжный протокол датаграмм udp обеспечивает многоканальную передачу помощью номеров портов проверку целостности помощью контрольных сумм заголовка существенных данных надёжная передача случае необходимости должна реализовываться приложением биты порт отправителя source port порт получателя destination port длина датаграммы length контрольная сумма checksum данные data заголовок udp состоит из четырёх полей каждое по байта бит два из них необязательны использованию ipv розовые ячейки таблице то время как ipv необязателен только порт отправителя порт отправителя этом поле указывается номер порта отправителя предполагается что это значение задаёт порт на который при необходимости будет посылаться ответ противном же случае значение должно быть равным если хостом источником является клиент то номер порта будет скорее всего динамическим если источником является сервер то его порт будет одним из хорошо известных порт получателя это поле обязательно содержит порт получателя аналогично порту отправителя если хостом получателем является клиент то номер порта динамический если получатель сервер то это будет хорошо известный порт длина датаграммы поле задающее длину всей датаграммы заголовка данных байтах минимальная длина равна длине заголовка байт теоретически максимальный размер поля байт для udp датаграммы байт на заголовок на данные фактический предел для длины данных при использовании ipv помимо байт на udp заголовок требуется ещё на ip заголовок на практике также следует учитывать что если длина ipv пакета udp будет превышать mtu для ethernet по умолчанию байт то отправка такого пакета может вызвать его фрагментацию что может привести тому что он вообще не сможет быть доставлен если промежуточные маршрутизаторы или конечный хост не будут поддерживать ip пакеты также rfc указывается минимальная длина ip пакета байт которую должны поддерживать все участники ipv рекомендуется отправлять ip пакеты большего размера только том случае если вы уверены что принимающая сторона может принять пакеты такого размера следовательно чтобы избежать фрагментации udp пакетов возможной их потери размер данных udp не должен превышать mtu max ip header size udp header size байт для того чтобы быть уверенным что пакет будет принят любым хостом размер данных udp не должен превышать минимальная длина ip пакета max ip header size udp header size байт jumbogram мах ipv пакеты udp могут иметь больший размер максимальное значение составляет байт из которых байт соответствуют заголовку остальные байт данным следует заметить что большинство современных сетевых устройств отправляют принимают пакеты ipv длиной до байт без их разделения на отдельные пакеты неофициально такие пакеты называют jumbo пакетами хотя понятие jumbo официально относится ipv тем не менее jumbo пакеты поддерживают не все устройства перед организацией связи помощью udp ip ipv посылок длиной превышающей байт нужно проверять возможность такой связи опытным путём на конкретном оборудовании контрольная сумма поле контрольной суммы используется для проверки заголовка данных на ошибки если сумма не сгенерирована передатчиком то поле заполняется нулями поле не является обязательным для ipv расчёт контрольной суммы перед расчётом контрольной суммы если длина udp сообщения байтах нечётна то udp сообщение дополняется конце нулевым байтом псевдозаголовок добавочный нулевой байт не отправляются вместе сообщением они используются только при расчёте контрольной суммы поле контрольной суммы udp заголовке во время расчёта контрольной суммы принимается нулевым для расчёта контрольной суммы псевдозаголовок udp сообщение разбивается на двухбайтные слова затем рассчитывается сумма всех слов арифметике обратного кода то есть кода котором отрицательное число получается из положительного инверсией всех разрядов числа существует два нуля обозначается xffff обозначается результат записывается соответствующее поле udp заголовке значение контрольной суммы равное обратном коде зарезервировано означает что для посылки контрольная сумма не вычислялась случае если контрольная сумма вычислялась получилась равной то поле контрольной суммы заносят значение xffff обратном коде при получении сообщения получатель считает контрольную сумму заново уже учитывая поле контрольной суммы если результате получится то есть xffff то контрольная сумма считается сошедшейся если сумма не сходится данные были повреждены при передаче либо контрольная сумма неверно посчитана на передающей стороне то решение дальнейших действиях принимает принимающая сторона как правило большинстве современных устройств работающих udp ip пакетами имеются настройки позволяющие либо игнорировать такие пакеты либо пропускать их на дальнейшую обработку невзирая на неправильность контрольной суммы пример расчёта контрольной суммы для примера рассчитаем контрольную сумму нескольких битных слов xf xc для этого можно сначала сложить попарно числа рассматривая их как разрядные беззнаковые числа последующим приведением дополнительному коду путём прибавления единицы результату если при сложении произошёл перенос старший разряд то есть де факто этой операцией мы переводим отрицательное число из дополнительного обратный код или что равноценно можно считать что перенос прибавляется младшему разряду числа xf перенос старший разряд число положительное xc конце выполняется инверсия всех битов получившегося числа xf или иначе xffff xf это есть искомая контрольная сумма приведены другие способы расчёта контрольной суммы частности использованием разрядной арифметики псевдозаголовки псевдозаголовок для ipv если udp работает над ipv контрольная сумма вычисляется при помощи псевдозаголовка который содержит некоторую информацию из заголовка ipv псевдозаголовок не является настоящим ipv заголовком используемым для отправления ip пакета таблице приведён псевдозаголовок используемый только для вычисления контрольной суммы биты адрес источника адрес получателя нули протокол длина udp порт источника порт получателя длина контрольная сумма данные адреса источника получателя берутся из ipv заголовка значения поля протокол для udp равно поле длина udp соответствует длине заголовка данных вычисление контрольной суммы для ipv необязательно если она не используется то значение равно псевдозаголовок для ipv при работе udp над ipv контрольная сумма обязательна метод для её вычисления был опубликован rfc при вычислении контрольной суммы опять используется псевдозаголовок имитирующий реальный ipv заголовок биты адрес источника адрес получателя длина udp нули следующий заголовок порт источника порт получателя длина контрольная сумма данные адрес источника такой же как ipv заголовке адрес получателя финальный получатель если ipv пакете не содержится заголовка маршрутизации routing то это будет адрес получателя из ipv заголовка противном случае на начальном узле это будет адрес последнего элемента заголовка маршрутизации на узле получателе адрес получателя из ipv заголовка значение следующий заголовок равно значению протокола для udp длина udp длина udp заголовка данных надёжность решения проблемы перегрузок из за недостатка надёжности приложения udp должны быть готовы некоторым потерям ошибкам дублированиям некоторые из них например tftp могут при необходимости добавить элементарные механизмы обеспечения надёжности на прикладном уровне но чаще такие механизмы не используются udp приложениями даже мешают им потоковые медиа игры реальном времени voip примеры приложений часто использующих протокол udp этих конкретных приложениях потеря пакетов обычно не является большой проблемой если приложению необходим высокий уровень надёжности то можно использовать другой протокол tcp или воспользоваться методами кодирования более серьёзной потенциальной проблемой является то что отличие от tcp основанные на udp приложения не обязательно имеют хорошие механизмы контроля избегания перегрузок чувствительные перегрузкам udp приложения которые потребляют значительную часть доступной пропускной способности могут поставить под угрозу стабильность интернете сетевые механизмы были предназначены для того чтобы свести минимуму возможные эффекты от перегрузок при нагрузках такие сетевые элементы как маршрутизаторы использующие пакетные очереди техники сброса часто являются единственным доступным инструментом для замедления избыточного udp трафика dccp англ datagram congestion control protocol протокол контроля за перегрузками датаграмм разработан как частичное решение этой потенциальной проблемы помощью добавления конечному хосту механизмов для отслеживания перегрузок для udp потоков вроде потоковых медиа приложения многочисленные ключевые интернет приложения используют udp их числе dns где запросы должны быть быстрыми состоять только из одного запроса за которым следует один пакет ответа простой протокол управления сетями snmp протокол маршрутной информации rip протокол динамической конфигурации узла dhcp голосовой видеотрафик обычно передается помощью udp протоколы потокового видео реальном времени аудио разработаны для обработки случайных потерь пакетов так что качество лишь незначительно уменьшается вместо больших задержек при повторной передаче потерянных пакетов поскольку tcp udp работают одной той же сетью многие компании замечают что недавнее увеличение udp трафика из за этих приложений реального времени мешает tcp приложений вроде систем баз данных или бухгалтерского учёта так как бизнес приложения приложения реальном времени важны для компаний развитие качества решений проблемы некоторыми рассматривается качестве важнейшего приоритета сравнение udp tcp tcp ориентированный на соединение протокол что означает необходимость рукопожатия для установки соединения между двумя хостами как только соединение установлено пользователи могут отправлять данные обоих направлениях надёжность tcp управляет подтверждением повторной передачей тайм аутом сообщений производятся многочисленные попытки доставить сообщение если оно потеряется на пути сервер вновь запросит потерянную часть tcp нет ни пропавших данных ни случае многочисленных тайм аутов разорванных соединений упорядоченность если два сообщения последовательно отправлены первое сообщение достигнет приложения получателя первым если участки данных прибывают неверном порядке tcp отправляет неупорядоченные данные буфер до тех пор пока все данные не могут быть упорядочены переданы приложению тяжеловесность tcp необходимо три пакета для установки сокет соединения перед тем как отправить данные tcp следит за надёжностью перегрузками потоковость данные читаются как поток байтов не передается никаких особых обозначений для границ сообщения или сегментов udp более простой основанный на сообщениях протокол без установления соединения протоколы такого типа не устанавливают выделенного соединения между двумя хостами связь достигается путём передачи информации одном направлении от источника получателю без проверки готовности или состояния получателя приложениях для голосовой связи через интернет протокол voice over ip tcp ip udp имеет преимущество над tcp котором любое рукопожатие помешало бы хорошей голосовой связи voip считается что конечные пользователи реальном времени предоставят любое необходимое подтверждение получении сообщения ненадёжный когда сообщение посылается неизвестно достигнет ли оно своего назначения оно может потеряться по пути нет таких понятий как подтверждение повторная передача тайм аут если два сообщения отправлены одному получателю то порядок их достижения цели не может быть предугадан легковесность никакого упорядочивания сообщений никакого отслеживания соединений это небольшой транспортный уровень разработанный на ip датаграммы пакеты посылаются по отдельности проверяются на целостность только если они прибыли пакеты имеют определенные границы которые соблюдаются после получения то есть операция чтения на сокете получателе выдаст сообщение таким каким оно было изначально послано нет контроля перегрузок udp сам по себе не избегает перегрузок для приложений большой пропускной способностью возможно вызвать коллапс перегрузок если только они не реализуют меры контроля на прикладном уровне ссылки на rfc rfc протокол датаграмм rfc интернет протокол спецификация версии ipv rfc ipv jumbograms rfc management information base for the udp rfc unicast udp usage guidelines for application designers см также udp lite sctp список портов tcp udp примечания ссылки kurose ross computer networking top down approach th ed boston ma pearson education isbn forouzan tcp ip protocol suite st ed new delhi india tata mcgraw hill publishing company limited content ipv com udp protocol overview ipv com retrieved august clark data networks ip and the internet st ed west sussex england john wiley sons ltd rfc postel august rfc user datagram protocol internet engineering task force retrieved from http tools ietf org html rfc deering hinden december rfc internet protocol version ipv specification internet engineering task force retrieved from http tools ietf org html rfc the impact of udp on data applications com retrieved august iana port assignments семенов протокол udp категория интернет протоколы категория протоколы транспортного уровня