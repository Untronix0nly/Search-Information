right чередь абстрактный тип данных дисциплиной доступа элементам первый пришёл первый вышел fifo добавление элемента принято обозначать словом enqueue поставить очередь возможно лишь конец очереди выборка только из начала очереди что принято называть словом dequeue убрать из очереди при этом выбранный элемент из очереди удаляется способы реализации очереди существует несколько способов реализации очереди языках массив первый способ представляет очередь виде массива двух целочисленных переменных start end файл queue gif обычно start указывает на голову очереди end на элемент который заполнится когда очередь войдёт новый элемент при добавлении элемента очередь qend записывается новый элемент очереди end уменьшается на единицу если значение end становится меньше то мы как бы циклически обходим массив значение переменной становится равным извлечение элемента из очереди производится аналогично после извлечения элемента qstart из очереди переменная start уменьшается на такими алгоритмами одна ячейка из всегда будет незанятой так как очередь элементами невозможно отличить от пустой что компенсируется простотой алгоритмов преимущества данного метода возможна незначительная экономия памяти по сравнению со вторым способом проще разработке недостатки максимальное количество элементов очереди ограничено размером массива при его переполнении требуется перевыделение памяти копирование всех элементов новый массив связный список второй способ основан на работе динамической памятью очередь представляется качестве линейного списка котором добавление удаление элементов идет строго соответствующих его концов преимущества данного метода размер очереди ограничен лишь объёмом памяти недостатки сложнее разработке требуется больше памяти при работе такой очередью память сильнее фрагментируется работа очередью несколько медленнее реализация на двух стеках методы очереди могут быть реализованы на основе двух стеков как показано ниже процедура enqueue push функция dequeue если пуст если пуст сообщить об ошибке очередь пуста пока не пуст push pop вернуть pop такой способ реализации наиболее удобен качестве основы для построения персистентной очереди очереди различных языках практически во всех развитых языках реализованы очереди cli для этого предусмотрен класс system collections queue методами enqueue dequeue stl также присутствует класс queue определённый заголовочном файле queue нём используется та же терминология push pop что стеках применение очередей очередь используется как реальной жизни когда нужно совершить какие то действия порядке их поступления выполнив их последовательно примером может служить организация событий windows когда пользователь оказывает какое то действие на приложение то приложении не вызывается соответствующая процедура ведь этот момент приложение может совершать другие действия ему присылается сообщение содержащее информацию совершенном действии это сообщение ставится очередь только когда будут обработаны сообщения пришедшие ранее приложение выполнит необходимое действие клавиатурный буфер bios организован виде кольцевого массива обычно длиной машинных слов двух указателей на следующий элемент нём на первый незанятый элемент см также коллекция массив список стек двухсторонняя очередь очередь приоритетом примечания ссылки определение nist категория очередь