object pascal язык разработанный фирме apple computer году группой ларри теслера который никлаусом виртом произошёл от более ранней объектно ориентированной версии паскаль называвшейся clascal который был доступен на компьютере apple lisa изменения object pascal от borland сравнении turbo pascal изменения коснулись групп целых символьных строковых типов которые стали разделяться на две категории фундаментальные fundamental типы их представление памяти число битов наличие знака строго фиксируется выдерживается неизменным во всех последующих реализациях object pascal для любых операционных систем компьютерных платформ родовые generic типы их представление памяти не фиксируется будет реализовано оптимальным способом зависимости от реализации для конкретной операционной системы компьютерной платформы интерфейсы см интерфейсы delphi перегрузка процедур функций не ооп введена перегрузка процедур функций не являющихся членами объекта или класса перегружаются помощью ключевого слова overload отличающиеся типами числом параметров процедуры функции procedure calc integer overload procedure calc string integer overload динамический массив введен для устранения рутинных операций выделения возвращения памяти heap область кучу для того чтобы избежать случайных ошибок утечки памяти элементы массива должны быть одинаковыми нумерация элементов начинается нуля пример объявления var myflexiblearray array of real использование var array of integer begin setlength выделяем память под один элемент end начиная delphi xe стали возможны следующие действия динамическими массивами var array of integer begin end insert вставка массива начиная индекса delete удаляем элемента начиная индекса concat то есть динамическими массивами можно работать также как обычными строками динамическом массиве тоже возможно задание открытого массива параметров но тип их должен быть объявлен ранее например type array of char function find integer динамическая типизация операторы динамической проверки приведения типов языке object pascal фирмы borland появилась динамическая типизация также оператор динамического приведения типов as оператор is для динамической проверки типов также открытом массиве параметров стала возможна передача параметров различного типа variant open array parameters вариантный тип языке object pascal был введен вариантный тип данных variant тип которых не известен на этапе компиляции может изменяться на этапе выполнения программы однако этот тип данных поглощает больше памяти по сравнению переменными операции над данными типа variant выполняются медленнее более того недопустимые операции над данными этого типа чаще приводят ошибкам на этапе выполнения программы то время как подобные ошибки над данными другого типа были бы выявлены ещё на этапе компиляции вариантные переменные могут принимать различные значения целые строковые булевские currency ole строки быть массивами элементов этих же типов массивом значений вариантного типа также содержать com corba объекты чьи методы свойства могут быть доступны посредством этого типа однако variant не может содержать данные структурных типов указатели int начиная delphi может variant можно смешивать выражениях операторах другими вариантами числовыми строковыми булевскими данными при этом компилятор автоматически выполняет преобразование типа варианты содержащие строки не могут однако индексироваться vi не допустимо var variant integer double string begin значение типа integer значение типа real hello world значение типа string end параметры типа вариантного открытого массива стала возможна передача параметров различного типа оригинале он назван как variant open array parameters тип данных определяется динамически процессе выполнения программы так же как обычном открытом массиве функция high вызывается для определения числа элементов массива для объявления используются ключевые слова array of const пример function output const args array of const string var integer begin result for to high args do with argsi do case vtype of vtstring result result vstring vtpchar result result vpchar vtinteger result result inttostr vinteger vtboolean result result booltostr vboolean vtchar result result vchar vtextended result result floattostr vextended vtobject result result vobject classname vtclass result result vclass classname vtvariant result result string vvariant vtint result result inttostr vint vtansistring result result string vansistring vtcurrency result result currtostr vcurrency end result result end output test true tform передача открытого массива параметров будет возвращена строка test tform как видно имеет свою внутреннюю структуру обращение которой дает возможность определить тип данных строке вызова функции создается массив помощью конструктора открытого массива который использует квадратные скобки различия объектных моделях для введения новой объектной модели введено ключевое слово class turbo pascal ключевое слово object введены операторы для проверки приведения классов is as динамически ходе выполнения программы появились указатели на методы для чего введено новое использование ключевого слова object type tmymethod procedure sender object of object изменения синтаксиса из за изменения размещения объектов turbo pascal можно было работать как динамическими так со статическими экземплярами объектов объектной модели object pascal программист работает только динамическими экземплярами классов выделяемых heap области куче связи этим изменен синтаксис обращения полям методам объектов ранее для работы динамическими экземплярами объектов использованием обращения конструктору сочетании функцией new необходимо было использовать обращение по указателю теперь тип класса стал являться по умолчанию также указателем пример для сравнения объектная модель turbo pascal type pmyobject tmyobject tmyobject object tobject myfield pmytype constructor init end var myobject pmyobject begin myobject new pmyobject init myobject myfield end новая объектная модель object pascal type tmyobject class tobject myfield tmytype constructor create end var myobject tmyobject begin myobject tmyobject create myobject myfield end было изменено соглашение об именовании конструкторов деструкторов старой объектной модели вызов new отвечал за распределение памяти обращение конструктору выделенную область памяти новой модели эти действия выполняет конструктор create начиная версии delphi xe появились статические методы класса появилась возможность ограничивать видимость членов класса методы свойства которые предназначены для использования только реализации производных классов это дает возможность защищать исходный код от модификации пользователями класса такие методы содержатся секции protected защищённые объявлении класса визуальное объектно ориентированное появились понятия свойства property связанные со свойствами ключевые слова read write stored default nodefault index свойства визуальных объектов видимых интегрированной среде разработки объявляются помощью нового слова published качестве секции объявлении класса являющегося визуальным объектом обобщения type объявление generic tlist class items array of procedure add value end implementation реализация procedure tlist add value begin setlength items length items itemslength items value end общий класс может быть просто специализирован для конкретного типа использованием ключевого слова specialize type tintegerlist specialize tlist tpointerlist specialize tlist tstringlist specialize tlist перегрузка операторов разработчики tmt pascal модификация object pascal первыми ввели полноценную перегрузку операторов что впоследствии было перенято разработчиками других диалектов языка delphi delphi free pascal др пример объявление type tvector packed record double procedure from const double class operator add const left right tvector tvector class operator implicit const tvector tpoint end реализация implementation class operator tvector add const left right tvector tvector begin result left right result left right result left right end class operator tvector implicit const tvector tpoint begin result round result round end использование var tvector begin from from canvas polygon end поддержка различными разработчиками начиная версии среды delphi фирма borland стала официально называть язык object pascal как delphi язык object pascal поддерживается развивается другими разработчиками наиболее серьёзные реализации object pascal помимо delphi это topspeed pascal версия языка turbo pascal мультиязыковой среды topspeed tmt pascal virtual pascal pascalabc net free pascal gnu pascal язык oxygene является диалектом object pascal для платформы net дальнейшим его развитием новыми возможностями языка является оператор асинхронный отложенный вызовы методов асинхронное выполнение блока кода параллельные циклы анонимные конструкторы элементы контрактного аспектно др компилятор без ограничений примеры hello world различных объектных расширениях языка program type thelloworld object procedure put end var helloworld thelloworld procedure thelloworld put begin writeln hello world end begin new helloworld helloworld put dispose helloworld end delphi для обеспечения обратной совместимости free pascal также поддерживают этот вариант синтаксиса program type phelloworld thelloworld thelloworld object procedure put end var helloworld phelloworld это указатель на thelloworld procedure thelloworld put begin writeln hello world end begin new helloworld helloworld put dispose helloworld end free pascal этот вариант синтаксиса доступен режимах objfpc delphi program type thelloworld class определение класса procedure put end procedure thelloworld put описание процедуры метода put класса thelloworld begin writeln hello world end var helloworld thelloworld определение переменной указателя на экземпляр класса begin helloworld thelloworld create конструктор возвращает значение указателя на экземпляр класса helloworld put helloworld free деструктор уничтожает экземпляр класса освобождает область памяти end примечания категория object pascal