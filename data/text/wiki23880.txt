сжатие данных без потерь метод сжатия данных видео аудио графики документов представленных цифровом виде при использовании которого закодированные данные однозначно могут быть восстановлены точностью до бита пикселя вокселя при этом оригинальные данные полностью из сжатого состояния этот тип сжатия принципиально отличается от сжатия данных потерями для каждого из типов цифровой информации как правило существуют свои оптимальные алгоритмы сжатия без потерь сжатие данных без потерь используется во многих приложениях например оно используется во всех файловых архиваторах оно также используется как компонент сжатии потерями сжатие без потерь используется когда важна идентичность сжатых данных оригиналу обычный пример исполняемые файлы исходный код некоторые графические файловые форматы например png используют только сжатие без потерь тогда как другие tiff flif или gif могут использовать сжатие как потерями так без потерь сжатие комбинаторика легко доказывается теорема доказательство не ограничивая общности можно предположить что уменьшился файл длины ровно обозначим алфавит как рассмотрим множество этом множестве исходных файлов то время как сжатых не более чем поэтому функция декомпрессии неоднозначна противоречие теорема доказана впрочем данная теорема нисколько не бросает тень на сжатие без потерь дело том что любой алгоритм сжатия можно модифицировать так чтобы он увеличивал размер не более чем на бит если алгоритм уменьшил файл пишем потом сжатую если увеличил пишем затем исходную так что несжимаемые фрагменты не приведут бесконтрольному раздуванию архива реальных же файлов длины намного меньше чем говорят что данные имеют низкую информационную энтропию например маловероятно чтобы буквосочетание щы встретилось осмысленном тексте оцифрованном звуке уровень не может за один семпл прыгнуть от до тому же за счёт специализации алгоритмов на некоторый тип данных текст графику звук удаётся добиться высокой степени сжатия так применяющиеся архиваторах универсальные алгоритмы сжимают звук примерно на треть раза то время как flac раза большинство алгоритмов малопригодны для файлов чужих типов например звуковые данные плохо сжимаются алгоритмом рассчитанным на тексты метод сжатия без потерь общих чертах смысл сжатия без потерь таков исходных данных находят какую либо закономерность учётом этой закономерности генерируют вторую которая полностью описывает исходную например для кодирования двоичных которых много нулей мало единиц мы можем использовать такую замену таком случае шестнадцать битов будут преобразованы тринадцать битов такая подстановка является префиксным кодом то есть обладает такой особенностью если мы запишем сжатую строку без пробелов мы всё равно сможем расставить ней пробелы значит восстановить исходную наиболее известным префиксным кодом является код хаффмана большинство алгоритмов сжатия без потерь работают две стадии на первой генерируется статистическая модель для входящих данных вторая отображает входящие данные битовом представлении используя модель для получения вероятностных то есть часто встречаемых данных которые используются чаще чем невероятностные статистические модели алгоритмов для текста или текстовых бинарных данных таких как исполняемые файлы включают преобразование барроуза уилера блочно сортирующая пре обработка которая делает сжатие более эффективным lz lz используется deflate lzw алгоритмы кодирования через генерирование битовых алгоритм хаффмана также используется deflate арифметическое кодирование методы сжатия без потерь полный список смотрите категория сжатие данных многоцелевые кодирование длин серий простая схема дающая хорошее сжатие данных которые содержат много повторяющихся значений lzw используется gif во многих других deflate используется gzip версии zip как часть процесса сжатия png lzma используется zip сжатие аудио apple lossless alac apple lossless audio codec audio lossless coding также известен как mpeg als direct stream transfer dst dolby truehd dts hd master audio free lossless audio codec flac meridian lossless packing mlp monkey audio monkey audio ape optimfrog realplayer realaudio lossless shorten shn tak om verlustfreier udio ompressor нем tta true audio lossless wavpack wavpack lossless wma lossless windows media lossless сжатие графики abo adaptive binary optimization btpc calic crew ctw dpcm gif без потерь только для изображений содержащих не более цветов jbig потерями или без изображений lossless jpeg расширение стандарта сжатия jpeg обеспечивающее сжатие без потерь jpeg ls стандарт сжатия без потерь почти без потерь jpeg режиме сжатия без потерь loco mrp pgf progressive graphics file сжатие без потерь png portable network graphics pwc tiff исключая режимы сжатия потерями tmw truevision tga hd photo включая метод сжатия без потерь flif free lossless image format сжатие видео animation codec camstudio video codec corepng ffv huffyuv ограничен yuy rgb не совместим ffvhuff оригинальный не обновлялся года ffvhuff улучшенный по сжатию huffyuv поддерживает ещё yv обратно совместим исходным кодеком lagarith lcl msu lossless video codec qbit lossless codec sheervideo tscc techsmith screen capture codec wmc wavelet media codec motion jpeg сжатие текстов ppm архиватор ha автор harry hirvola использующий алгоритм ppm известен высокой степенью сжатия на текстовых файлах по этому параметру он превосходил первые версии появившегося несколько лет спустя rar поэтому популярные конце годов компакт диски наподобие библиотека кармане использовали именно ha примеры алгоритмов семейство алгоритмов лемпеля зива rle run length encoding кодирование длин серий примеры форматов их реализаций универсальные zip zip rar gzip paq др звук flac free lossless audio codec monkey audio ape tta true audio tte la losslessaudio realaudio lossless wavpack др изображения bmp png видео huffyuv см также сжатие данных потерями lossy сжатие звука без потерь примечания ссылки lossless кодирование видео linux краткое сравнение lossless аудиокодеков категория сжатие данных