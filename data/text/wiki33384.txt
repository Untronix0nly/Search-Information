алгоритм соединения хэшированием разновидность алгоритма соединения алгоритм получает на вход две таблицы условие соединения результатом его работы является таблица результатами соединения меньшая из двух входных таблиц помещается специальную структуру данных памяти хэш таблицу которая обеспечивает очень высокую скорость поиска затем для каждой строки из большей таблицы выполняется поиск значений соответствующих условию соединения результаты помещаются выходную таблицу на псевдокоде алгоритм можно описать примерно так хэштаблица меньшаятаблица имена колонок меньшейтаблицы по которым будет делаться соединение для каждой строки из большаятаблица вывести хэштаблица имена колонок большойтаблицы по которым делается соединение преимущества соединение хэшированием существенно быстрее соединения вложенными циклами при относительно небольшом размере меньшей таблицы это самый эффективный вид соединения недостатки условием соединения может быть только равенство большая потребность памяти для построения хэш таблицы что крайне ограничивает алгоритма при увеличении размеров меньшей таблицы хэш таблица должна быть построена полностью до того как первый результат будет записан результирующую таблицу что делает этот вид соединения неприемлемым при необходимости получить первую строку результата как можно быстрее реальных системах используются более изощрённые схемы хэширования чем приведённом примере основном нацеленные на уменьшение потребности памяти для построения хэш таблицы например данные обеих таблиц разбиваются на части хэш таблица строится только для одной из этих частей ссылки craig freedman материалы статьи hash join категория субд категория хеширование