at синтаксис один из форматов записи мнемоники инструкций процессора особенности отличия at ассемблера gas от intel ассемблера masm tasm fasm nasm комментарий начинается символа не свою очередь символ разделяет команды позволяет записывать несколько команд одной строке отсутствие префикса операнда указывает на адрес памяти поэтому movl foo eax помещает адрес переменной foo регистр eax movl foo eax помещает eax содержимое переменной foo имена регистров начинаются символа то есть eax dl вместо eax dl это позволяет включать код внешние переменные не опасаясь ошибок не используя префиксов подчёркиванием например eax ebx ecx edx размер операнда определяется как суффикс имени инструкции суффиксы от byte операнды размером байт от word операнды размером слово байта от long операнды размером байта от quad операнды размером байт от ten операнды размером байт от octo операнды размером байт movb al ah movw ax bx movl ebx eax порядок операндов вначале источник затем приёмник не наоборот как синтаксисе intel например mov eax ebx intel movl ebx eax at числовые константы имеют следующую форму записи intel at знак доллар начале mov ebx intel movl ebx at для записи считывания значения из определённого адреса регистр знак доллара отсутствует movl xffff eax сегмент смещение только реальном режиме ffh intel xff at регистр смещение es bx intel es bx at указания на индексные методы адресации отличаются тем что используются круглые не квадратные скобки sub eax ebx ecx intel subl ebx ecx eax at записать eax значение ecx ebx отличаются мнемоники некоторых команд например cdq называется cltd at отличаются команды ассемблера такие как объявление констант резервирование места см также intel синтаксис язык ассемблера at книга по ассемблеру linux на wikibooks использование ассемблера linux англ синтаксис ассемблера английской википедии категория ассемблер