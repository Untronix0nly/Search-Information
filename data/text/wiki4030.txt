переме нная императивном поименованная либо адресуемая иным способом область памяти адрес которой можно использовать для осуществления доступа данным данные находящиеся переменной то есть по данному адресу памяти называются значением этой переменной других парадигмах например функциональной логической понятие переменной оказывается несколько иным таких языках переменная определяется как имя которым может быть связано значение или даже как место location для хранения значения область видимости или время существования переменной некоторых языках задаётся классом памяти классификация статическая динамическая типизация переменных если тип данных определяется на этапе компиляции имеет место статическая типизация если на этапе выполнения программы динамическая последнем случае иногда говорят что переменная не имеет типа хотя данные содержащиеся ней безусловно относятся определённому типу данных но выясняется это уже во время выполнения программы большинстве случаев статическая типизация позволяет уменьшить затраты ресурсов при выполнении программы поскольку для динамической типизации требуются затраты ресурсов на выяснение типов данных их приведение выражениях со смешанными типами статическая типизация позволяет проводить проверку типов на этапе компиляции программы это также упрощает обнаружение ошибок ещё на этапе разработки когда их исправление обходится менее дорого тем не менее во многих случаях необходимо применение динамической типизации например необходимость поддержания совместимости при переходе на новый формат представления данных например старая часть проекта посылает процедуре дату символьной строкой новые объекты используют более современный числовой тип статические динамические переменные адрес поименованной ячейки памяти также может определяться как на этапе компиляции так во время выполнения программы по времени создания переменные бывают статическими динамическими первые создаются момент запуска программы или подпрограммы вторые создаются процессе выполнения программы динамическая адресация нужна только тогда когда количество поступающих на хранение данных заранее точно не известно такие данные размещают специальных динамических структурах тип которой выбирается соответствии со спецификой задачи возможностями выбранной системы это может быть стек куча очередь даже файл том смысле который заложил вирт паскаль является динамической структурой локальные глобальные переменные области видимости по зоне видимости различают локальные глобальные переменные первые доступны только конкретной подпрограмме вторые всей программе модульного объектного появились ещё общие переменные доступные для определённых уровней иерархии подпрограмм область видимости иногда задаётся классом памяти ограничение видимости может производиться путём введения пространств имён ограничение зоны видимости придумали как для возможности использовать одинаковые имена переменных что разумно когда разных подпрограммах переменные выполняют похожую функцию так для защиты от ошибок связанных неправомерным использованием переменных правда для этого программист должен владеть пользоваться соответствующей логикой при структуризации данных простые сложные переменные по наличию внутренней структуры переменные могут быть простыми или сложными составными простые переменные не имеют внутренней структуры доступной для адресации последняя оговорка важна потому что для компилятора или процессора переменная может быть сколь угодно сложной но конкретная система язык скрывает от программиста её внутреннюю структуру позволяя адресоваться только целом сложные переменные программист создаёт для хранения данных имеющих внутреннюю структуру соответственно есть возможность обратиться напрямую любому элементу самыми характерными примерами сложных типов являются массив все элементы однотипные запись элементы могут иметь разный тип следует подчеркнуть относительность такого деления для разных программ одна та же переменная может иметь разную структуру например компилятор различает переменной вещественного типа поля знаки мантиссы порядка плюс их значения но для программиста компилирующего свою программу вещественная переменная единая ячейка памяти хранящая вещественное число соглашения об именовании переменных венгерская нотация camelcase snake case см также счётчик цикла метка примечания ссылки variable foldoc computing dictionary free on line dictionary of computing