алго от алгоритмический язык название ряда языков применяемых при составлении программ для решения научно технических задач на эвм разработан комитетом по языку высокого уровня ifip годах алгол алгол кардинально переработан годах алгол один из первых языков высокого уровня был популярен европе том числе ссср качестве как языка практического так академического языка языка публикации алгоритмов научных работах но сша канаде не смог превзойти там фортран оказал заметное влияние на все разработанные позднее императивные языки частности на язык pascal обычно названием алгол без уточнения версии именуют алгол то время как алгол рассматривается как самостоятельный язык история алгол был разработан году на недельной конференции eth цюрих швейцария как универсальный язык для широкого круга применений затем доработан комитетом созданным международной федерацией по обработке информации ifip комитет вошёл ряд ведущих европейских американских учёных инженеров разработчиков языков среди них были джон бэкус один из создателей фортрана джозеф уэгстен впоследствии возглавлял комитет по разработке языка кобол джон маккарти автор языка лисп разработанного одновременно алголом петер наур впоследствии доработал нормальную форму бэкуса завершив разработку бнф эдсгер дейкстра нидерландский учёный впоследствии получивший широкую известность как один из создателей структурного сторонник математического подхода будущий лауреат премии тьюринга сначала работа столкнулась большими трудностями характера так например один из членов комитета вспоминал десятичную бурю крайне резкую дискуссию между американскими европейскими участниками по поводу того какой именно символ использовать качестве разделителя целой дробной части числа американцы стояли за точку европейцы требовали применять традиционную европе запятую из за такой мелочи работа оказалась под реальной угрозой срыва чтобы избежать конфликтов по мелким вопросам было решено что описание алгола будет трёхуровневым включающим уровень описаний публикаций реализации мелкие вопросы типа выбора между точкой запятой или используемого алфавита были вынесены на второй третий уровень что позволило относительно быстро решить принципиальные вопросы на уровне публикаций согласованном позже допускалось использование национальных ключевых слов стандартов представления данных том числе десятичной точки уровень реализации определял язык совершенно строго согласно ему должны были строиться трансляторы после принятия году первой версии описания языка алгол первоначально предполагалось назвать язык ial international algebraic language но от этого отказались довольно быстро были осознаны проблемы для решения которых комитет сформировал новый вариант стандарта алгол он стал классическим алголом году джон бэкус разработал нормальную форму бэкуса бнф формальный способ описания алгоритмических языков первым языком спецификация которого была записана бнф стал алгол впоследствии после которые предложил питер наур возникла форма бэкуса наура аббревиатура та же бнф или bnf которая использовалась для спецификации языка algol уже на этапе её разработки нового языка нашлись как приверженцы так критики сша алгол приняли холодно он был популярен только академической среде то не повсеместно те кто попытался реализовать алгол столкнулись целым рядом сложностей так например обнаружилось что ни один из существовавших тогда компьютеров не поддерживал ввод вывод всех литер из которых состоял алфавит алгола share американская ассоциация пользователей компьютеров ibm потребовала от фирмы реализовать алгол для своих машин но появившийся конце концов компилятор алгола для ibm os был крайне неудобен использовании вполне естественно что ibm вложившая фортран огромные суммы не имела стимула для создания нового продукта который лишь конкурировал бы со старым то же время недостатки фортрана вынудили ibm искать ему замену привели разработке pl языка наследника фортрана котором влияние алгола было весьма заметным вот европе алгол приняли энтузиазмом он быстро завоевал популярность академической среде повсеместно шла разработка компиляторов многие из которых несмотря на сложности реализации оказались весьма успешными алгол распространился от великобритании до дальнего востока ссср став как универсальным языком описания алгоритмов научных публикациях так средством реального ссср вычислительном центре ан ссср лаборатории под руководством курочкина был создан свой транслятор языка алгол для эвм бэсм он на протяжении многих лет служил важным инструментом для решения прикладных задач из различных областей естественных наук широко использовался во многих организациях ссср язык алгол был принят фирмой burroughs corporation их моделях начиная этот язык получил название elliott algol на компьютерах использовался язык dartmouth algol даже когда язык алгол почти перестал использоваться для он ещё долго оставался официальным языком для публикации алгоритмов перед текстом описания языка использовался эпиграф из логико философского трактата людвига витгенштейна то что вообще может быть сказано может быть сказано ясно чём невозможно говорить том следует молчать свойства языка особенности языка алгол стали типичными для большинства императивных языков созданных позднее него именно алголе появилось представление программе не как свободной команд как блочной структуре состоящей из чётко описанных отделённых друг от друга частей основной блок программы на алголе это сама главная программа она содержит свою исполняемую часть заключённую блок ограниченный парой ключевых слов begin end также описания подпрограмм каждая подпрограмма это программа миниатюре имеющая собственные описанные внутри неё данные однозначно определённый интерфейс виде имени списка формальных параметров блок кода при этом блоке могут выделяться подблоки были выделены структурные управляющие конструкции ветвления циклы участки исполняющие условно или многократно вложенные наборы операторов также ограниченные теми же ключевыми словами begin end что дало возможность описывать логику программы без использования безусловных переходов печально известного оператора goto провоцирующего на создание запутанных плохо программ современным программистам подобная структура программы кажется очевидной кое чём устаревшей не всегда удобной часто критикуются бесконечные begin end программах на паскале который унаследовал эту особенность именно от алгола но на момент появления алгола всё это было заметным шагом вперёд программы становились регулярными это давало возможность наращивать их по объёму сохраняя обозримыми понятными доступными анализу исправлению именно на базе алгола его языков потомков были выполнены успешные работы по аналитическому доказательству правильности программ крайне важным свойством алгола стала возможность организации рекурсивных процедур до этого промышленных языков отсутствовавшая лидеров рынка фортрана кобола рекурсия прямо запрещена но широко лиспе использование рекурсивных вычислений ряде случаев способно значительно упростить структуру программы сделать её более понятной за счёт близости математическому описанию алгоритма решения задачи разумеется не все особенности алгола сейчас можно назвать удачными до конца продуманными например стандарт языка полностью проигнорировал средства ввода вывода разработчики решили что каждая реализация языка может решать этот вопрос самостоятельно исходя из особенностей целевой машины потребностей пользователей другой стороны концепции модульного использованием стандартных библиотек подпрограмм тогда ещё просто не было операторы ввода вывода должны были включаться прямо язык это привело тому что каждая реализация организовывала ввод вывод по своему этой части алгол программы для разных компиляторов оказывались почти гарантированно несовместимыми алголе было предложено два способа передачи параметров подпрограмму по имени по значению второй способ широко используется абсолютном большинстве языков по сей день первый же предполагает что процедуру передаётся имя фактического параметра процедура работает так как будто точке обращения записан её код где вместо формального параметра написано имя фактического функции такими параметрами легко реализуются помощью препроцессора как языке однако генерация объектного кода для них достаточно сложна фактически для передачи по имени сложных выражений компилятор должен был создавать специальную неименованную функцию вычисляющую это выражение его собственной среде окружения так называемый санк ближайшим аналогом санка является замыкание однако санк возникает только специфическом контексте передачи параметров эта особенность языка алгол остальном довольно разумно организованного примечательна удивительным сочетанием полной практической бесполезности чрезвычайной сложностью реализации поэтому дальнейшем развитии языков от передачи параметров по имени отказались языке pl целом очень много унаследовавшем от алгола на этой волне заодно отказались от передачи параметров по значению оставив как раннем фортране единственный механизм по ссылке языке си напротив осталась только передача параметров по значению передача по ссылке там может быть смоделирована путём использования параметров типа указатель для тех случаев когда передача параметров по имени имеет смысл она необходима например если требуется создать функцию для которой значения параметров не вычислялись бы момент вызова были созданы специальные синтаксические механизмы примеры кода hello world программа hello world на диалекте dartmouth algol begin file kind remote ebcdic array replace by hello world while true do begin write end end для elliott algol program hifolks begin print hello world end для ibm os algol begin outstring hello world end работа матрицей procedure absmax size result subscripts value array integer real comment наибольший элемент матрицы размера на передаётся виде результата его индексы параметры begin integer for step until do for step until do if abs ap then begin abs ap end end absmax выдача на печать таблицы пример для реализации elliott algol floating point algol test begin real read for step until do begin print punch sin cos print punch sameline aligned end end здесь punch посылает текст не на перфоратор на удалённый принтер sameline подавляет возврат каретки aligned указывает формат знак до после десятичной точки трюк йенсена рассмотрим следующую программу на алголе begin procedure name integer begin for step until do end integer integer array si end поскольку параметры процедуры передаются по имени см выше вызов процедуры данном случае приведёт обнулению всех элементов массива такое использование передачи параметра по имени было названо трюком йенсена по имени впервые предложившего его программиста см также algol jovial примечания литература iso programming languages algol ссылки язык алгол описание формулах бнф синтаксис algol бнф the emperor old clothes речь чарльза хоара вручения приза тьюринга acm об истории алгола участии хоара ней algol руководство по elliott algol история появления алгола примеры реализации языка виде пакета виде независимой то есть не пакета реализации интерпретатора компилятора категория семейство языков алгол категория история компьютерной техники