бесконечным циклом называется цикл написанный таким образом что условие выхода из него никогда не выполняется программе вошедшей бесконечный цикл иногда говорят что она зациклилась использование этого глагола вышло далеко за пределы он зачастую применяется совершенно другим смыслом среди пользователей различных поколений сверхскоростных компьютеров ходит стандартная шутка крей настолько быстр что выполняет бесконечный цикл менее чем за секунды роль бесконечных циклов тьюринг полноте языков любой цикл можно представить как бесконечный цикл теле которого есть проверка условия выхода команда выхода из цикла любая программа может быть написана при помощи бесконечных циклов команд выхода из цикла операторов ветвления if then команд исполняемых одна после другой примечание обратите внимание что универсальный оператор goto безусловный переход не нужен достаточно специального оператора выхода из цикла при этом случае вложенных циклов потребуется специальных операторов выхода из цикла кроме небольшого количества языков расширенным синтаксисом операторов выхода или один оператор goto одна метка примеры pascal вариант while true do begin что нибудь делаем if условие выхода из бесконечного цикла then break end вариант repeat что нибудь делаем until false для си подобных языков вариант for что нибудь делаем вариант while true что нибудь делаем вариант while что нибудь делаем вариант do что нибудь делаем while true вариант do что нибудь делаем while вариант loop что нибудь делаем goto loop python while true что нибудь делаем пакетный файл ms dos loop rem что нибудь делаем goto loop bash while true do что нибудь делаем done ruby язык содержит специальную конструкцию бесконечного цикла loop что нибудь делаем ада ада также имеет специальную конструкцию описывающую бесконечный цикл loop что нибудь делаем end loop кроме того стоит отметить что ада позволяет осуществить выход сразу из нескольких вложенных циклов также имеет условную форму оператора выхода позволяющую избежать использования оператора ветвления out_cycle loop loop exit out_cycle when logic_exp равносильно if logic_exp then exit out_cycle end if end loop end loop out_cycle отсюда продолжится выполнение программы после выполнения инструкции exit out_cycle lua while true do что нибудь делаем end практика написании программ решающих реальные задачи пользователей бесконечные циклы как правило являются одним из источников неустойчивой работы программы между тем при написании алгоритмических программ то есть программ решающих определённые задачи прикладной информатики не имеющих прямого отношения практическим или скорее теоретическим задачам использование бесконечных циклов это очень хороший приём так например при решении задач на олимпиадах по информатике различных уровней основная задача участника за отведённое время написать программы решающие предложенные алгоритмические задачи как правило такие задачи решаются использованием циклов очевидно что времени на обдумывание условия выхода из цикла которое должно указываться так называемом while цикле участника недостаточно поэтому очень полезным приёмом является использование бесконечных циклов приём этот основан на том факте что каждый современный язык предлагает ряд операторов позволяющих прервать выполнение тела цикла не после очередной итерации во время очередного выполнения например break delphi exit for бейсике для экономии времени участник олимпиады пишет бесконечный цикл while условием выполнения true while true do затем по мере необходимости теле цикла записывает операторы проверки условий которые случае необходимости прерывают выполнение цикла break подобными операторами цикл прохода по некоему набору элементов использованием абстрактного класса итератора выглядит так element el someiterator it for el it get el null el it get некоторых диалектах паскаля этот же цикл сохранением возможности использовать оператор continue то есть без el it get конце цикла выглядит так it someiterator create repeat el it get if el nil then break until false программы из которых нет выхода например операционные системы прошивки также обычно представляют собой бесконечный цикл иногда например скриптах управления персонажами компьютерных игр выход из программы это остановка интерпретатора так что разработчик не должен явно записывать условие выхода значит программа превращается бесконечный цикл такой принцип принят например game maker некоторых играх для программистов категория ошибки