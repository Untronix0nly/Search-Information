sed от потоковый текстовый редактор также язык применяющий различные текстовые преобразования потоку текстовых данных первоначально был написан как unix утилита ли макмэхоном из bell labs годах сейчас sed доступен фактически для любой операционной системы поддерживающей работу командной строкой стоит отметить что sed является тьюринг полным языком так как на нём можно создать машину тьюринга описание sed получает входной поток обычно файл построчно редактирует каждую строку согласно правилам определённым sed скрипте использованием простого языка sed затем выводит результат выходной поток sed часто называют неинтерактивным текстовым редактором он отличается от обычных текстовых редакторов по отношению тексту набору команд редактирования обычные текстовые редакторы вначале загружают весь текст документа затем применяют нему команды по одной то время как sed вначале загружает себя набор команд затем применяет весь набор команд каждой строчке текста так как одновременно памяти находится только одна строка sed может обработать произвольно большие текстовые файлы набор команд sed сделан по образцу редактора ed однако необходимо помнить его например команда редактора ed означает идите строке удалите её то время как та же команда sed означает если это строка номером то удалите не выводите её известное исключение это команды копирования перемещения которые охватывают диапазон строк таким образом не имеют прямых эквивалентов sed вместо этого sed вводит дополнительный буфер названный пространством захвата дополнительные команды для управления им например команда скопировать строку строку ed была бы закодирована как две отдельные команды sed для того чтобы сохранить строку пространстве захвата до тех пор пока данные не будут извлечены следующий пример демонстрирует типичное использование sed sed oldstuff newstuff inputfilename outputfilename здесь замена глобально что означает все вхождения искомого значения после первого прямого слеша расположено регулярное выражение для поиска после второго выражение для замены однако следует помнить что помимо слеша может использоваться другой символ так например выражения echo sed echo sed echo sed echo sed полностью равнозначны команда замены безусловно является самой мощной часто используемой командой sed перенаправление стандартного вывода outputfilename можно опустить тогда sed выведет результат на экран unix команда sed часто используется виде фильтра конвейере или pipe generate_data sed таким образом генерируются данные передаются на конвейер чтобы заменить на несколько команд могут быть объединены одном файле например subst sed затем применены виде sed subst sed inputfilename outputfilename или можно написать файла скрипта используя шебанг например создав исполняемый файл subst sed содержимым bin sed его можно выполнять непосредственно subst sed inputfilename outputfilename помимо замены возможны другие формы простой обработки например следующий сценарий удаляет пустые строки или строки которые содержат только пробелы sed inputfilename последний пример использовал часть регулярных выражений метасимволов соответствует началу строки соответствует концу строки соответствует любому единственному символу соответствует нулю или более повторений предшествующего символа соответствуют одному любому из символов включённых квадратные скобки между соответствуют одному любому из символов не включённых квадратные скобки между буква соответствуют одному любому символу из определённого класса символов частности это любой пробельный символ комплексные конструкции sed возможны до такой степени что он может быть представлен как высоко хотя простой язык потоком управления например можно управлять при помощи метки двоеточие за которым следует строка которая должна быть именем метки инструкции ветвления инструкция за которой следует правильное имя метки переместит обработку блок после метки если метка не существует тогда ветвление завершит сценарий скрипт sed это одна из наиболее ранних команд unix которые позволяли обрабатывать файлы данных из командной строки sed развился как естественный преемник популярной команды grep родственный более позднему языку awk sed позволил применять shell скриптах мощную интересную обработку данных был одним из первых инструментов unix действительно поощрявшим адекватно использовать регулярные выражения по скорости выполнения sed заметно быстрее чем awk sed awk часто считаются прародителями вдохновителями языка perl особенности синтаксиса из примера выше языка sed нет переменных есть только примитив goto выполняющие ветвление функциональные возможности тем не менее это тьюринг полный язык gnu sed имеет несколько новых особенностей например замещающая правка файлов замена первоначального файла результатом работы sed замещающая правка часто используется вместо сценария ed например sed abc def file может использоваться вместо ed file abc def существует расширенная версия sed называемая super sed ssed которая включает регулярные выражения совместимые perl таблица соответствия спецсимволов использование hex позволяет вставлять спецсимволы символ ascii соответствие hex символ ascii соответствие hex пример использования требуется заменить hello на hello world sed hello hello world см также grep поиск текста по регулярным выражениям примечания ссылки системное руководство по sed неинтерактивный текстовый редактор sed документация по sed однострочные скрипты sed однострочные скрипты sed редактирование etc network interfaces debian средствами sed просто sed шпаргалка sed sed на sourceforge net the sed faq sed потоковый редактор super sed спецификация sed единой спецификации unix на сайте the open group игра сокобан на sed тетрис на sed sed for windows категория текстовые редакторы категория инструменты unix для обработки текста категория скриптовые языки