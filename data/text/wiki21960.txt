алгоритмической теории информации колмогоровская сложность объекта такого как текст есть мера вычислительных ресурсов необходимых для точного определения этого объекта колмогоровская сложность также известна как описательная сложность сложность колмогорова хайтина стохастическая сложность алгоритмическая энтропия или алгоритмическая сложность выражает возможность фрактального описания примеру рассмотрим две строки длиной символа содержащие только символы нижнем регистре цифры cv rx umgw uraqbjfdppa nieieqe noc cvafzf файл mandelpart red png px right thumb на этом изображении представлена часть множества мандельброта простое хранение битного цвета каждого пикселя этого изображения требует миллиона бит но маленькая компьютерная программа может воспроизвести эти миллиона бит используя определение множества мандельброта таким образом колмогоровская сложность сырого файла кодирующего это изображение много меньше миллиона бит первая строка имеет простое описание на естественном языке именно ab раза состоящее из символов вторая строка не имеет очевидного простого описания использованием того же набора символов кроме собственно самой этой строки длина которой составляет символа более формально сложность строки это длина описания этой строки на некотором универсальном языке описания способность сложности изменению относительно выбора языка описания обсуждается ниже можно показать что колмогоровская сложность любой строки не может быть более чем на несколько байт больше чем длина самой этой строки строки чья колмогоровская сложность слабо зависит от размера самой строки не считаются сложными определение чтобы определить колмогоровскую сложность мы должны сначала задать язык описания строк такой язык описания может быть основан на любом языке таком как lisp pascal или java если программа выходом которой является строка то описание длиной описания является длина как строки ходе определения длины длины подпрограмм использующихся должны быть вычислены длина любой целой константы которая появляется это количество бит требующихся для представления равное грубо мы можем альтернативно выбрать кодировку для машины тьюринга где кодировка функция устанавливающая соответствие каждой машине тьюринга битовую строку если машина тьюринга которая на вход даёт на выходе строку то объединённая строка есть описание для это теоретический подход который является более подходящим для построения детальных формальных доказательств предпочтителен литературе двоичное лямбда исчисление может дать наиболее простое определение сложности этой статье мы используем неформальный подход любая строка имеет как минимум одно описание то есть программу function return если описание минимальной длины то есть использует наименьшее количество символов то оно называется минимальным описанием длина то есть количество символов этом описании колмогоровской сложность символьно рассмотрим как выбор языка описания влияет на значение покажем что эффект от смены языка описания является ограниченным теорема если функции сложности относящиеся языкам описания то существует константа зависящая только от языков такая что доказательство обратно достаточно доказать что существует некоторая константа такая что для всех битовых строк положим что существует программа на языке которая работает как интерпретатор для function string где программа на языке интерпретатор характеризуется следующим свойством возвращаемым значением результате работы на входных данных будет результат работы таким образом если является программой на языке которая является минимальным описанием то возвращает строку длина этого описания есть сумма длины программы которая может быть принята за константу длины определяемой это доказывает искомую верхнюю оценку см также теорема инвариантности история контекст алгоритмическая теория информации это области компьютерной науки изучающая колмогоровскую сложность другие сложные меры для строк или других структур данных идея теории колмогоровской сложности основана на ключевой теореме впервые открытой рэем соломоноффом опубликовавшим её году описав работе preliminary report on general theory of inductive inference как часть своего изобретения алгоритмической вероятности он дал более полное описание своих публикациях formal theory of inductive inference часть журнале information and control сделанных году позже колмогоров независимо опубликовал эту теорему журнале проблемы передачи информации грегори хайтин также представил эту теорему журнале acm работа хайтина была отправлена октябре исправлена декабре цитирует обе работы соломоноффа колмогорова теорема утверждает что среди алгоритмов декодирующих строки из их описаний кодов существует оптимальный этот алгоритм для всех строк даёт такие же короткие коды как предоставляемые другими алгоритмами отличием на константу зависящую от алгоритма но не от самой строки соломонофф использовал этот алгоритм предоставляемые им длины кодов для определения универсальной вероятности строк на которой может быть основан индуктивный вывод последующих символов строке колмогоров использовал эту теорему для определения нескольких функций строк сложности случайности информации когда колмогоров узнал работе соломоноффа он признал его приоритет несколько лет работа соломоноффа была более известна ссср чем на западе однако общепринято научном сообществе ассоциировать этот тип сложности колмогоровым который говорил случайности то время как алгоритмическая вероятность стала связываться соломоноффым который фокусировался на прогнозировании используя своё открытие распределения универсальной априорной вероятности существуют некоторые другие варианты колмогоровской сложности или алгоритмической информации один из наиболее широко используемых основан на программах основном связывается левиным аксиоматических подход колмогоровской сложности основа на аксиомах блума был введен бургиным некоторые полагают что название колмогоровская сложность это пример эффекта матфея основные следствия последующих рассуждениях под будем подразумевать сложность строки не сложно заметить что минимальное описание строки не может быть больше чем сама строка приведённая выше программа чей выход больше на фиксированную величину теорема существует константа такая что невычислимость колмогоровской сложности первое следствие заключается том что нет эффективного способа вычисления теорема невычислимая функция другими словами не существует программы которая бы принимала на вход строку выдавала бы на выходе целое число покажем это помощью противоречия путём создания программы которая создает строку создать которую возможно только более длинной программой предположим что существует программа function string которая принимает на входе возвращает теперь рассмотрим программу function int for to infinity for each string of length exactly if return quit эта программа вызывает подпрограмму программа пробует каждую строку начиная кратчайшей пока не найдет строку со сложностью как минимум которую возвращает следовательно получив любое положительно целое число она производит строку колмогоровской сложностью не меньше эта программа имеет собственную фиксированную длину входом программы является целое размер измеряется количеством бит необходимым для его представления которое есть далее рассмотрим следующую программу function return это программа вызывает как подпрограмму также имеет свободный параметр эта программа выводит строку чья сложность составляет как минимум при благоприятном выборе параметра мы придём противоречию чтобы выбрать это значение заметим что описывается программой чья длина не больше чем где константа добавлена из за программы так как растёт быстрее чем существует значение такое что но это противоречит определению том что имеется сложность как минимум то есть по определению допускается что строка возвращаемая программой может быть создана программой длиной или больше но короче чем так программа на самом деле не может вычислить сложность случайной строки это доказательство от противного где противоречие похоже на парадокс берри пусть наименьшее положительно целое которое не может быть названо меньше чем двадцатью английскими словами также возможно показать невычислимость путём сведения невычислимости задаче остановки так как тьюринг эквивалентны сообществе программистов существует следствие известное как теорема полном использовании утверждающая что нет компилятора совершенной оптимизацией по размеру цепное правило для колмогоровской сложности цепное правило для колмогоровской сложности утверждает что оно утверждает что кратчайшая программа воспроизводящая не больше чем на превосходит по размеру программу воспроизводящую программу воспроизводящую при данном использованием этого выражения можно определить аналог взаимной информации для колмогоровской сложности сжатие вычислять верхнюю границу для несложно нужно просто сжать строку каким либо методом реализовать соответствующий декомпрессор на выбранном языке соединить декомпрессор со сжатой строкой измерить длину полученной строки строка сжимается на если имеет описание длина которого не превосходит это равнозначно утверждению если это не выполняется то не сжимается на строка не сжимаемая на называется просто несжимаемой по принципу дирихле несжимаемые строки должны существовать так как есть битовых строк длиной но только строк длиной меньше по той же причине большинство строк сложны том смысле что они не могут быть значительно сжаты не намного меньше длины битах чтобы уточнить зафиксируем значение существует битовых строк длиной равномерное распределение вероятностей на пространстве этих битовых строк определяется точно равным весовому коэффициенту для каждой строки длиной теорема вероятность того что строка не сжимается на равна как минимум равномерным распределением вероятностей на пространстве битовых строк длиной для доказательства этой теоремы заметим что количество описаний длин не превосходит полученное из геометрической прогрессии остается как минимум битовых строк несжимаемых на для определения вероятности разделим на теорема хайтина неполноте нам известно что во множестве всех возможных строк большинство строк являются сложными том смысле что не могут быть описаны любом достаточно сжатом виде однако оказывается что тот факт что конкретная строка сложна не может быть формально доказан если сложность строки выше определённого порога точная формализация представлена далее для начала зафиксируем частную аксиоматическую систему для натуральных чисел аксиоматическая система должна быть достаточно мощной чтобы точному суждению сложности строки можно было поставить соответствие формулу аксиоматической системе это соответствие должно обладать следующим свойством если выводится из аксиом то соответствующее суждение истинно теорема существует такая константа которая зависит только от частной аксиоматической системы выбранного языка описания что ни для одной строки утверждение не может быть доказано рамках тем не менее как легко понять утверждение будет истинным для бесконечного множества строк точнее для всех строк за исключением конечного их числа доказательство теоремы основано на самореферентной конструкции использованной парадоксе берри доказательство от противного если теорема не верна то предположение для любого целого числа существует строка для которой существует вывод формулы для которой мы предположили что она может быть формализована рассмотрим программу реализующую эффективное перечисление всех формальных доказательств function nthproof int принимающую на вход выдающую некоторое доказательство некоторые из них доказывают формулу вида где константы языке существует программа проверяющая доказывает ли ое доказательство формулу function int обратно строка число могут быть вычислены программами function stringnthproof int function int рассмотрим теперь следующую программу function int for to infinity if and return stringnthproof принимая на вход эта программа проверяет каждое доказательство пока не находит некоторую строку доказательство формулы для некоторого эта программа останавливается по предположению пусть эта программа имеет длину существует число такое что log где дополнительная длина программы function return заметим что число также закодировано этой программе на что требуется log информации программа выдает строку для которой существует такое что может быть выведено причем частности для неё верно однако может быть описана программой длины log значит её сложность меньше полученное противоречие доказывает ложность предположения подобные же идеи используются для доказательства свойств константы хайтина минимальная длина сообщения принцип минимальной длины сообщения статистическом индуктивном выводе машинном обучении был разработан уоллесом болтоном году принцип мдс является байесовским включает априорные вероятности информационно теоретическим он обладает желаемыми свойствами статистической инвариантности вывод статистической связности даже для очень трудной задачи принцип сойдется нижележащей модели эффективности модель основанная на принципе мдс сойдется любой достоверной нижележащей модели так быстро как это возможно уоллес доу показали формальную связь между принципом мдс алгоритмической теорией информации или колмогоровской сложностью колмогоровская случайность согласно определению колмогоровской случайности тж алгоритмической случайности строка называется случайной тогда только тогда когда она короче любой компьютерной программы способной её воспроизвести чтобы сделать это определение точным нужно зафиксировать универсальный компьютер или универсальную машину тьюринга так что компьютерная программа будет обозначать программу для этой универсальной машины случайная этом смысле строка будет несжимаемой помощью принципа дирихле легко показать что для любой универсальной машины существуют алгоритмически случайные строки любой длины однако свойство строки быть алгоритмически случайной зависит от выбора универсальной машины это определение можно расширить на бесконечные символов конечного алфавита определение можно изложить тремя эквивалентными способами первый способ использует эффективный аналог теории меры другой использует эффективный мартингал третий способ определения таков бесконечная случайна если колмогоровская сложность её начального сегмента растет достаточно быстро существует константа такая что сложность любого начального сегмента длины не меньше оказывается что это определение отличие от определения случайности конечной строки не зависит от выбора универсальной машины связь энтропией согласно теореме брудно энтропия динамической системы алгоритмическая сложность траекторий ней связаны соотношением для почти всех можно показать что колмогоровская сложность результата работы марковского источника информации связана его энтропией более точно колмогоровская сложность результата работы марковского источника информации нормализованная на длины результата сходится почти всегда энтропии источника примечания литература верещагин курс колмогоровской сложности вьюгин колмогоровская сложность алгоритмическая случайность категория алгоритмическая теория информации