байт код байтко также иногда код от стандартное которое может быть переведена компьютерная программа автоматическими средствами по сравнению исходным кодом удобным для создания чтения человеком байт код это компактное представление программы уже прошедшей синтаксический семантический анализ нём явном виде закодированы типы области видимости другие конструкции технической точки зрения байт код представляет собой машинно независимый код низкого уровня генерируемый транслятором из исходного кода многие современные языки особенно используют байт код для облегчения ускорения работы интерпретатора трансляция байт код является методом промежуточным по эффективности между прямой интерпретацией компиляцией машинный код по форме байт код похож на машинный код но предназначен для исполнения не реальным процессором виртуальной машиной качестве виртуальной машины обычно выступает интерпретатор языка иногда дополненный jit или aot компилятором спецификации байт кода исполняющих его виртуальных машин могут сильно различаться для разных языков часто байт код состоит из инструкций для виртуальной машины однако могут использоваться машины тем не менее большинство инструкций байт кода обычно эквивалентны одной или нескольким командам ассемблера байт код называется так потому что длина каждого кода операции традиционно составляет один байт каждая инструкция обычно представляет собой однобайтовый код операции от до за которым могут следовать различные параметры например номер регистра или адрес памяти исполнение программа на байт коде обычно выполняется интерпретатором байт кода преимущество байт кода большей эффективности портируемости то есть один тот же байт код может исполняться на разных платформах архитектурах для которых реализован интерпретатор то же самое преимущество дают непосредственно языки однако поскольку байт код обычно менее абстрактен более компактен чем исходный код эффективность интерпретации байт кода обычно выше чем чистая интерпретация исходного кода или интерпретация асд кроме того интерпретатор байт кода зачастую проще интерпретатора исходного кода его проще перенести портировать на другую аппаратную платформу реализациях виртуальных машин может применяться комбинация интерпретатора jit компилятора который во время исполнения программы транслирует часто используемые фрагменты байт кода машинный код применяя при этом различные оптимизации вместо jit компиляции может применяться aot компилятор транслирующий байт код машинный код предварительно до исполнения то же время возможно создание процессоров для которых данный байт код является непосредственно машинным кодом такие процессоры создавались например для языков java форт история среди первых систем использовавших байт код были code для bcpl smalltalk sil system implementation language для языка snobol код code при участии никлауса вирта для переносимых компиляторов языка pascal варианты кода широко использовались различных реализациях языка pascal например ucsd system ucsd pascal применение языкам использующим байт код относятся perl php например zend engine ruby начиная версии python erlang многие другие широко платформы использующие байт код байт код java стековая виртуальная машина исполняемый различными виртуальными машинами java платформа была создана компанией sun для языка java но стала использоваться для других языков существуют десятки реализаций jvm использующих jit компиляторы существуют варианты трансляции java байт код регистровых машин например виртуальной машине dalvik jit компиляцией или при aot компиляции art платформа microsoft net использует стековый байт код intermediate language cil msil исполняемый помощью common language runtime clr создана microsoft для некоторых других языков сценарный язык javascript выполняется различными движками основном встроенными веб браузеры часто возможностью jit оптимизации многие интерпретаторы построены применением байт кода однако программы на javascript виде исходных кодов сценарный язык actionscript транслируется стековый байт код составе swf pdf файлов выполняется виртуальными машинами adobe flash adobe acrobat компилятор clipper создает исполняемый файл который включен байт код транслированный из исходного текста программы виртуальная машина исполняющая этот байт код программы на java обычно компилируются содержащие байт код java эти универсальные файлы передаются на различные целевые машины ранних реализациях visual basic до версии использовался высокоуровневый microsoft code высокоуровневые коды байт коды применялись субд некоторых реализациях бейсика паскаля стандарте открытых загрузчиков open firmware фирмы sun microsystems байт код представляет операторы языка форт примеры python код print hello world hello world байт код import dis импортируем модуль dis disassembler of python byte code into mnemonics dis dis print hello world load_name print load_const hello world call_function return_value java код outer for int байт код iconst_ istore_ iload_ sipush if_icmpge iconst_ istore_ iload_ iload_ if_icmpge iload_ iload_ irem ifne goto iinc goto getstatic field java lang system out ljava io printstream iload_ invokevirtual method java io printstream println iinc goto return критика традиционно байт код проектируется стиле стековых виртуальных машин что упрощает генерацию из ast позволяет использовать более простую компактную кодировку байт кода упростить интерпретатор уменьшить количество машинного кода требуемого для исполнения одной инструкции байт кода другой стороны такие варианты байт кода для заданной программы содержат большее количество инструкций чем байт коды регистровых виртуальных машин из за чего интерпретатор должен совершить больше непрямых переходов для которых плохо работает предсказание переходов байт код для регистровых виртуальных машин имеет немного больший размер машинных кодов однако количество инструкций по сравнению со стековым байт кодом примерно два раза меньше интерпретатор быстрее на десятки процентов также байт код стековых машин сложнее для проведения оптимизаций выражения становятся неявными связанные инструкции не сгруппированы выражения распределены по нескольким базовым блокам требует верификации корректности использования стека ошибки верификации байт кода стековых машин приводили появлению множества экстремально опасных уязвимостей частности десятков виртуальной машине avm используемой adobe flash для исполнения скриптов actionscript нескольких ранних популярных системах исполнения java jvm конце начале авторы компиляторов для языка javascript часто реализуемого через байт код dart усомнились том что промежуточные байткоды обязательны для быстрых эффективных виртуальных машин этих проектах была реализована jit компиляция компиляция во время исполнения из исходных кодов сразу машинный код примечания категория байт код