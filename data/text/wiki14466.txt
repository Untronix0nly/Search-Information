glscene графический движок для создания кросс платформенных приложений на языках delphi free pascal использующий библиотеку opengl качестве интерфейса приложений glscene является свободным программным обеспечением лицензией mozilla public license его помощью трёхмерной графики windows становится более простым быстрым последние версии движка также доступны среде lazarus для создания приложений для linux др операционных систем разработка данного движка началась году майком лишке версия была выложена открытым исходным кодом дальнейшее развитие glscene было продолжено эриком гранжем после года поддерживается командой разработчиков настоящий момент движок пополнился новыми функциями стал быстрее благодаря различным оптимизациям glscene позволяет программистам создавать объекты opengl design time использованием интерфейса показанного на картинке большое количество объектов дополнительных визуальных компонентов vcl помогает программистам создавать графические приложения для delphi builder lazarus загружаемые форматы файлов моделей ds obj vrml smd md md nmf oct lwo gl gls ms nurbs lod некоторые другие сохраняемые форматы файлов моделей glsm obj smd поддерживаемая физика ode newton game dynamics также есть небольшой собственный движок расчёта столкновений учётом законов сохранения импульса dce некоторые объекты glscene tglcamera объект камера это точка из которой смотрят на трёхмерный мир камере можно задавать положение целевой объект на который она смотрит варьируя её параметр focallength можно изменять фокусное расстояние камеры параметры depthofview nearplanebias отсекают дальние ближние объекты отсечение дальних объектов может сильно повысить скорость работы таким образом поле зрения камеры это усечённый конус ограниченный обеих сторон параметрами depthofview nearplane угол которого задан через параметр focallength tglsceneviewer объект для визуализации трёхмерного мира его нужно кинуть на форму установить ему свойство camera то есть указав камеру которой надо смотреть на мир после этого он будет показывать то что видит указанная камера tgldummycube объект не содержащий графики но имеющий позицию position ротацию виде векторов направления direction верха up масштаб scale при помощи этих свойств объекту можно придавать различные положения пространстве используя несколько tgldummycube ов прикреплённых друг другу можно создавать сложные конструкции как например скелет котором кости соединены друг другом суставами или сочленениями joints кроме того tgldummycube удобен для использования качестве целевого объекта камеры tglcamera библиотека материалов находящиеся ней материалы переносятся видеопамять видеокарты все материалы могут использоваться разными объектами glscene одновременно каждый материал может иметь свою текстуру или использовать текстуры других материалов со своими настройками её отображения таким образом например загрузив текстуру машины зелёного цвета можно использовать её другом материале но изменив её цвет на скажем синий tglfreeform статичная трёхмерная модель используется чтобы загрузить например здания ландшафты деревья прочие подобные объекты чтобы загрузить модель glscene достаточно двух строчек кода указываем какую библиотеку материалов использовать glfreeform materiallibrary загружаем модель glfreeform loadfromfile mymodel ds также надо добавить uses модуль загрузчика моделей для моделей ds это glfile ds для моделей smd glfilesmd по аналогии после загрузки модель полностью попадает видеопамять процессорное время на её отображение практически не тратится при изменении матрицы этого объекта видеопамять пересылается только новая матрица tglactor трёхмерная модель анимацией используется для загрузки моделей людей монстров других движущихся объектов загрузка аналогична загрузке модели tglfreeform чтобы запустить анимацию достаточно двух строчек грузим модель со скелетной анимацией mymodel smd glactor loadfromfile mymodel smd добавляем анимацию ходьбы из файла walk smd glactor adddatafromfile walk smd переключаемся на анимацию ходьбы walk glactor walk запускаем проигрывание анимации циклическом режиме glactor animationmode aamloop отличие от моделей находящихся tglfreeform здесь рендеринг частично возложен на центральный процессор когда происходит изменение позиции модели со скелетной анимацией то для каждого положения каждой кости каждый момент времени происходит перерасчёт положения вершин модели после чего они пересылаются видеопамять отображаются на экране этот подход более медленный но зато позволяет добиться практически идеальной плавности движений tglpoints позволяет рисовать на экране точки добавлять точки нужно список positions чтобы точки были цветными нужно добавлять цвета список colors если него добавлен только один цвет то все точки будут этого цвета если количество цветов равно количеству точек то каждая точка будет своего цвета tgllines позволяет рисовать линии сплайны линии задаются точками добавлять которые можно список nodes через процедуру nodesadd линии по заданным точкам рисуются зависимости от способа отображения linesplinemode если это lsmsegments то каждые две точки означают отдельную линию если lsmlines то линии проводятся от точки точке если какой то другой режим то по точкам рисуется сплайн то есть плавная линия проходящая через все заданные точки плавность линии зависит от параметра division чем он больше тем линия плавнее если опции linesoption включён параметр то для каждой точки линии можно будет использовать свой цвет цвета задаются nodecolor также есть возможность выделять разными способами точки по которым строятся линии способ задаётся параметре linenodesaspect lnainvisible выделение отсутствует lnaaxes выделение осями lnacube выделение кубами lnadodecahedron выделение tgllightsource источник освещения который освещает всю трёхмерную сцену их opengl может быть максимум восемь поэтому glscene их тоже восемь светит данный источник освещения или нет определяется параметром shining светимость за цвет освещения отвечают три параметра ambient diffuse specular ambient это общее освещение сцены не зависящее от положения источника света как освещённость тени солнечный день diffuse направленный свет зависит от положения источника то есть если поверхность отвёрнута от него то он её не освещает specular зеркальный свет зависит ещё от нормали поверхности его помощью можно делать яркие блики как например яркая точка на железном блестящем шарике от лампочки за ослабление яркости света зависимости от удаления от источника отвечают три параметра первый это постоянное ослабление общем не зависит от расстояния просто можно считать что управляет яркостью источника света второй линейное ослабление третий квадратичное источник света может быть прожектором для этого его параметр spotdirection нужно выставить lsspot указать параметры прожектора spotdirection указывает направление света прожектора spotcutoff угол конуса прожектора если он равен градусам то считается что это не прожектор обычный источник освещения если меньше то прожектор spotexponent коэффициент изменения яркости от центральной точки пятна прожектора до его краёв прожекторы часто используются качестве фар автомобилей или фонариков руках героя играх примечания ссылки сайт glscene проект glscene на sourceforge официальный форум glscene установка glscene под lazarus галерея сборник больших программ показывающих возможности glscene категория графические движки категория свободные игровые движки категория свободное программное обеспечение написанное на delphi категория свободное программное обеспечение написанное на категория программное обеспечение лицензией mpl